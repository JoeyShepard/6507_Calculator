 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 1 - 9/3/2020 1:20:14


       1/       0 :                      PAGE $0
       2/    1FFC :                      ORG $1FFC
       3/    1FFC : A8 18                FDB main
       4/       0 :                      ORG $0
       5/      20 :                      ORG $20
       6/      20 :                      
       7/      20 :                     dummy:
       8/      20 :                      DFS $1
       9/      21 :                      
      10/      21 :                     ret_val:
      11/      21 :                      DFS $2
      12/      23 :                      
      13/      23 :                     screen_ptr:
      14/      23 :                      DFS $2
      15/      25 :                      
      16/      25 :                     R0:
      17/      25 :                      DFS $9
      18/      2E :                      
      19/      2E :                     R1:
      20/      2E :                      DFS $9
      21/      37 :                      
      22/      37 :                     R2:
      23/      37 :                      DFS $9
      24/      40 :                      
      25/      40 :                     R3:
      26/      40 :                      DFS $9
      27/      49 :                      
      28/      49 :                     R4:
      29/      49 :                      DFS $9
      30/      52 :                      
      31/      52 :                     R5:
      32/      52 :                      DFS $9
      33/      5B :                      
      34/      5B :                     R6:
      35/      5B :                      DFS $9
      36/      64 :                      
      37/      64 :                     R7:
      38/      64 :                      DFS $9
      39/      6D :                     
      40/      6D :                     STACK_END:
      41/     130 :                      ORG $130
      42/     130 :                      
      43/     130 :                     global_error:
      44/     130 :                      DFS $1
      45/     131 :                      
      46/     131 :                     input_buff_begin:
      47/     131 :                      DFS $1
      48/     132 :                      
      49/     132 :                     input_buff_end:
      50/     132 :                      DFS $1
      51/     133 :                      
      52/     133 :                     input_buff:
      53/     133 :                      DFS $40
      54/     173 :                      
      55/     173 :                     new_word_len:
      56/     173 :                      DFS $1
      57/     174 :                      
      58/     174 :                     new_word_buff:
      59/     174 :                      DFS $13
      60/     187 :                      
      61/     187 :                     new_stack_item:
      62/     187 :                      DFS $9
      63/     190 :                      
      64/     190 :                     font_inverted:
      65/     190 :                      DFS $1
      66/     191 :                      
      67/     191 :                     stack_count:
      68/     191 :                      DFS $1
      69/     192 :                      
      70/     192 :                     test_count:
      71/     192 :                      DFS $1
      72/     900 :                      ORG $900
      73/     900 : 4C A8 18             JMP main
      74/     903 :                      
      75/     903 :                     font_table:
      76/     903 : 00 00 00 00 00 00    FCB $0,$0,$0,$0,$0,$0,$0,$0
                    00 00             
      77/     90B : 30 78 78 30 30 00    FCB $30,$78,$78,$30,$30,$0,$30,$0
                    30 00             
      78/     913 : 6C 6C 6C 00 00 00    FCB $6C,$6C,$6C,$0,$0,$0,$0,$0
                    00 00             
      79/     91B : 6C 6C FE 6C FE 6C    FCB $6C,$6C,$FE,$6C,$FE,$6C,$6C,$0
                    6C 00             
      80/     923 : 30 7C C0 78 0C F8    FCB $30,$7C,$C0,$78,$C,$F8,$30,$0
                    30 00             
      81/     92B : 00 C6 CC 18 30 66    FCB $0,$C6,$CC,$18,$30,$66,$C6,$0
                    C6 00             
      82/     933 : 38 6C 38 76 DC CC    FCB $38,$6C,$38,$76,$DC,$CC,$76,$0
                    76 00             
      83/     93B : 60 60 C0 00 00 00    FCB $60,$60,$C0,$0,$0,$0,$0,$0
                    00 00             
      84/     943 : 18 30 60 60 60 30    FCB $18,$30,$60,$60,$60,$30,$18,$0
                    18 00             
      85/     94B : 60 30 18 18 18 30    FCB $60,$30,$18,$18,$18,$30,$60,$0
                    60 00             
      86/     953 : 00 66 3C FF 3C 66    FCB $0,$66,$3C,$FF,$3C,$66,$0,$0
                    00 00             
      87/     95B : 00 30 30 FC 30 30    FCB $0,$30,$30,$FC,$30,$30,$0,$0
                    00 00             
      88/     963 : 00 00 00 00 00 30    FCB $0,$0,$0,$0,$0,$30,$30,$60
                    30 60             
      89/     96B : 00 00 00 FC 00 00    FCB $0,$0,$0,$FC,$0,$0,$0,$0
                    00 00             
      90/     973 : 00 00 00 00 00 30    FCB $0,$0,$0,$0,$0,$30,$30,$0
                    30 00             
      91/     97B : 06 0C 18 30 60 C0    FCB $6,$C,$18,$30,$60,$C0,$80,$0
                    80 00             
      92/     983 : 7C C6 CE DE F6 E6    FCB $7C,$C6,$CE,$DE,$F6,$E6,$7C,$0
                    7C 00             
      93/     98B : 30 70 30 30 30 30    FCB $30,$70,$30,$30,$30,$30,$FC,$0
                    FC 00             
      94/     993 : 78 CC 0C 38 60 CC    FCB $78,$CC,$C,$38,$60,$CC,$FC,$0
                    FC 00             
      95/     99B : 78 CC 0C 38 0C CC    FCB $78,$CC,$C,$38,$C,$CC,$78,$0
                    78 00             
      96/     9A3 : 1C 3C 6C CC FE 0C    FCB $1C,$3C,$6C,$CC,$FE,$C,$1E,$0
                    1E 00             
      97/     9AB : FC C0 F8 0C 0C CC    FCB $FC,$C0,$F8,$C,$C,$CC,$78,$0
                    78 00             
      98/     9B3 : 38 60 C0 F8 CC CC    FCB $38,$60,$C0,$F8,$CC,$CC,$78,$0
                    78 00             
      99/     9BB : FC CC 0C 18 30 30    FCB $FC,$CC,$C,$18,$30,$30,$30,$0
                    30 00             
     100/     9C3 : 78 CC CC 78 CC CC    FCB $78,$CC,$CC,$78,$CC,$CC,$78,$0
                    78 00             
     101/     9CB : 78 CC CC 7C 0C 18    FCB $78,$CC,$CC,$7C,$C,$18,$70,$0
                    70 00             
     102/     9D3 : 00 30 30 00 00 30    FCB $0,$30,$30,$0,$0,$30,$30,$0
                    30 00             
     103/     9DB : 00 30 30 00 00 30    FCB $0,$30,$30,$0,$0,$30,$30,$60
                    30 60             
     104/     9E3 : 18 30 60 C0 60 30    FCB $18,$30,$60,$C0,$60,$30,$18,$0
                    18 00             
     105/     9EB : 00 00 FC 00 00 FC    FCB $0,$0,$FC,$0,$0,$FC,$0,$0
                    00 00             
     106/     9F3 : 60 30 18 0C 18 30    FCB $60,$30,$18,$C,$18,$30,$60,$0
                    60 00             
     107/     9FB : 78 CC 0C 18 30 00    FCB $78,$CC,$C,$18,$30,$0,$30,$0
                    30 00             
     108/     A03 : 7C C6 DE DE DE C0    FCB $7C,$C6,$DE,$DE,$DE,$C0,$78,$0
                    78 00             
     109/     A0B : 30 78 CC CC FC CC    FCB $30,$78,$CC,$CC,$FC,$CC,$CC,$0
                    CC 00             
     110/     A13 : FC 66 66 7C 66 66    FCB $FC,$66,$66,$7C,$66,$66,$FC,$0
                    FC 00             
     111/     A1B : 3C 66 C0 C0 C0 66    FCB $3C,$66,$C0,$C0,$C0,$66,$3C,$0
                    3C 00             
     112/     A23 : F8 6C 66 66 66 6C    FCB $F8,$6C,$66,$66,$66,$6C,$F8,$0
                    F8 00             
     113/     A2B : FE 62 68 78 68 62    FCB $FE,$62,$68,$78,$68,$62,$FE,$0
                    FE 00             
     114/     A33 : FE 62 68 78 68 60    FCB $FE,$62,$68,$78,$68,$60,$F0,$0
                    F0 00             
     115/     A3B : 3C 66 C0 C0 CE 66    FCB $3C,$66,$C0,$C0,$CE,$66,$3E,$0
                    3E 00             
     116/     A43 : CC CC CC FC CC CC    FCB $CC,$CC,$CC,$FC,$CC,$CC,$CC,$0
                    CC 00             
     117/     A4B : 78 30 30 30 30 30    FCB $78,$30,$30,$30,$30,$30,$78,$0
                    78 00             
     118/     A53 : 1E 0C 0C 0C CC CC    FCB $1E,$C,$C,$C,$CC,$CC,$78,$0
                    78 00             
     119/     A5B : E6 66 6C 78 6C 66    FCB $E6,$66,$6C,$78,$6C,$66,$E6,$0
                    E6 00             
     120/     A63 : F0 60 60 60 62 66    FCB $F0,$60,$60,$60,$62,$66,$FE,$0
                    FE 00             
     121/     A6B : C6 EE FE FE D6 C6    FCB $C6,$EE,$FE,$FE,$D6,$C6,$C6,$0
                    C6 00             
     122/     A73 : C6 E6 F6 DE CE C6    FCB $C6,$E6,$F6,$DE,$CE,$C6,$C6,$0
                    C6 00             
     123/     A7B : 38 6C C6 C6 C6 6C    FCB $38,$6C,$C6,$C6,$C6,$6C,$38,$0
                    38 00             
     124/     A83 : FC 66 66 7C 60 60    FCB $FC,$66,$66,$7C,$60,$60,$F0,$0
                    F0 00             
     125/     A8B : 78 CC CC CC DC 78    FCB $78,$CC,$CC,$CC,$DC,$78,$1C,$0
                    1C 00             
     126/     A93 : FC 66 66 7C 6C 66    FCB $FC,$66,$66,$7C,$6C,$66,$E6,$0
                    E6 00             
     127/     A9B : 78 CC E0 70 1C CC    FCB $78,$CC,$E0,$70,$1C,$CC,$78,$0
                    78 00             
     128/     AA3 : FC B4 30 30 30 30    FCB $FC,$B4,$30,$30,$30,$30,$78,$0
                    78 00             
     129/     AAB : CC CC CC CC CC CC    FCB $CC,$CC,$CC,$CC,$CC,$CC,$FC,$0
                    FC 00             
     130/     AB3 : CC CC CC CC CC 78    FCB $CC,$CC,$CC,$CC,$CC,$78,$30,$0
                    30 00             
     131/     ABB : C6 C6 C6 D6 FE EE    FCB $C6,$C6,$C6,$D6,$FE,$EE,$C6,$0
                    C6 00             
     132/     AC3 : C6 C6 6C 38 38 6C    FCB $C6,$C6,$6C,$38,$38,$6C,$C6,$0
                    C6 00             
     133/     ACB : CC CC CC 78 30 30    FCB $CC,$CC,$CC,$78,$30,$30,$78,$0
                    78 00             
     134/     AD3 : FE C6 8C 18 32 66    FCB $FE,$C6,$8C,$18,$32,$66,$FE,$0
                    FE 00             
     135/     ADB : 78 60 60 60 60 60    FCB $78,$60,$60,$60,$60,$60,$78,$0
                    78 00             
     136/     AE3 : C0 60 30 18 0C 06    FCB $C0,$60,$30,$18,$C,$6,$2,$0
                    02 00             
     137/     AEB : 78 18 18 18 18 18    FCB $78,$18,$18,$18,$18,$18,$78,$0
                    78 00             
     138/     AF3 : 10 38 6C C6 00 00    FCB $10,$38,$6C,$C6,$0,$0,$0,$0
                    00 00             
     139/     AFB : 00 00 00 00 00 00    FCB $0,$0,$0,$0,$0,$0,$0,$FF
                    00 FF             
     140/     B03 : FF FF FF FF FF FF    FCB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
                    FF FF             
     141/     B0B : 08 18 38 78 38 18    FCB $8,$18,$38,$78,$38,$18,$8,$0
                    08 00             
     142/     B13 : 00 00 00 00 FF FF    FCB $0,$0,$0,$0,$FF,$FF,$FF,$FF
                    FF FF             
     143/     B1B : 00 1E 00 00 00 00    FCB $0,$1E,$0,$0,$0,$0,$0,$0
                    00 00             
     144/     B23 : FF FF FF FF FF FF    FCB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
                    FF FF             
     145/     B2B : 00 00 EE 88 EE 88    FCB $0,$0,$EE,$88,$EE,$88,$EE,$0
                    EE 00             
     146/     B33 :                      
     147/     B33 :                     tests_begin:
     148/     B33 :                      
     149/     B33 :                     DebugText:
     150/     B33 : A0 00                LDY #$0
     151/     B35 :                      .loop:
     152/     B35 : B1 0A                LDA ($A),Y ;msg
     153/     B37 : F0 07                BEQ .done
     154/     B39 : 8D E7 FF             STA $FFE7
     155/     B3C : C8                   INY
     156/     B3D : 4C 35 0B             JMP .loop
     157/     B40 :                      .done:
     158/     B40 : 60                   RTS
     159/     B41 :                      
     160/     B41 :                     halt_test:
     161/     B41 : A5 20                LDA dummy
     162/     B43 : CD 92 01             CMP test_count
     163/     B46 : D0 02                BNE .done
     164/     B48 : 00                   BRK
     165/     B49 : 00                   BRK
     166/     B4A :                      .done:
     167/     B4A : 60                   RTS
     168/     B4B :                      
     169/     B4B :                     InputTest:
     170/     B4B : A0 00                LDY #$0
     171/     B4D :                      .loop:
     172/     B4D : B1 03                LDA ($3),Y ;input
     173/     B4F : F0 0D                BEQ .loop_done
     174/     B51 : C9 2D                CMP #$2D
     175/     B53 : D0 02                BNE .not_minus
     176/     B55 : A9 63                LDA #$63
     177/     B57 :                      .not_minus:
     178/     B57 : 99 74 01             STA new_word_buff,Y
     179/     B5A : C8                   INY
     180/     B5B : 4C 4D 0B             JMP .loop
     181/     B5E :                      .loop_done:
     182/     B5E : 8C 73 01             STY new_word_len
     183/     B61 : 20 44 15             JSR CheckData
     184/     B64 : A0 00                LDY #$0
     185/     B66 : 84 08                STY $8 ;calculated_index
     186/     B68 : 84 07                STY $7 ;output_index
     187/     B6A :                      .check_loop:
     188/     B6A : A4 07                LDY $7 ;output_index
     189/     B6C : B1 05                LDA ($5),Y ;output
     190/     B6E : C9 41                CMP #$41
     191/     B70 : B0 06                BCS .letter
     192/     B72 : 38                   SEC
     193/     B73 : E9 30                SBC #$30
     194/     B75 : 4C 7B 0B             JMP .letter_done
     195/     B78 :                      .letter:
     196/     B78 : 38                   SEC
     197/     B79 : E9 37                SBC #$37
     198/     B7B :                      .letter_done:
     199/     B7B : 0A                   ASL
     200/     B7C : 0A                   ASL
     201/     B7D : 0A                   ASL
     202/     B7E : 0A                   ASL
     203/     B7F : 85 09                STA $9 ;value
     204/     B81 : C8                   INY
     205/     B82 : B1 05                LDA ($5),Y ;output
     206/     B84 : C9 41                CMP #$41
     207/     B86 : B0 06                BCS .letter2
     208/     B88 : 38                   SEC
     209/     B89 : E9 30                SBC #$30
     210/     B8B : 4C 91 0B             JMP .letter_done2
     211/     B8E :                      .letter2:
     212/     B8E : 38                   SEC
     213/     B8F : E9 37                SBC #$37
     214/     B91 :                      .letter_done2:
     215/     B91 : 05 09                ORA $9 ;value
     216/     B93 : 85 09                STA $9 ;value
     217/     B95 : C8                   INY
     218/     B96 : 84 07                STY $7 ;output_index
     219/     B98 : A4 08                LDY $8 ;calculated_index
     220/     B9A : B9 87 01             LDA new_stack_item,Y
     221/     B9D : C5 09                CMP $9 ;value
     222/     B9F : D0 12                BNE .failed
     223/     BA1 : C8                   INY
     224/     BA2 : 84 08                STY $8 ;calculated_index
     225/     BA4 : A4 07                LDY $7 ;output_index
     226/     BA6 : B1 05                LDA ($5),Y ;output
     227/     BA8 : D0 03                BNE .continue
     228/     BAA : 4C 5F 0C             JMP .done
     229/     BAD :                      .continue:
     230/     BAD : C8                   INY
     231/     BAE : 84 07                STY $7 ;output_index
     232/     BB0 : 4C 6A 0B             JMP .check_loop
     233/     BB3 :                      .failed:
     234/     BB3 : 4C BE 0B             JMP .._54.str_skip
     235/     BB6 :                      .._54.str_addr:
     236/     BB6 : 5C 72 54 65 73 74    FCB "\\rTest ",$0
                    20 00             
     237/     BBE :                      .._54.str_skip:
     238/     BBE : A9 B6                LDA # (.._54.str_addr) # $100
     239/     BC0 : 85 0A                STA $A ;DebugText.msg
     240/     BC2 : A9 0B                LDA # (.._54.str_addr)/$100
     241/     BC4 : 85 0B                STA $B ;DebugText.msg
     242/     BC6 : 20 33 0B             JSR DebugText
     243/     BC9 : AE 93 01             LDX test_count+$1
     244/     BCC : AD 92 01             LDA test_count
     245/     BCF : 8D EA FF             STA $FFEA
     246/     BD2 : 4C E1 0B             JMP .._78.str_skip
     247/     BD5 :                      .._78.str_addr:
     248/     BD5 : 3A 20 46 41 49 4C    FCB ": FAILED!\\n",$0
                    45 44 21 5C 6E 00 
     249/     BE1 :                      .._78.str_skip:
     250/     BE1 : A9 D5                LDA # (.._78.str_addr) # $100
     251/     BE3 : 85 0A                STA $A ;DebugText.msg
     252/     BE5 : A9 0B                LDA # (.._78.str_addr)/$100
     253/     BE7 : 85 0B                STA $B ;DebugText.msg
     254/     BE9 : 20 33 0B             JSR DebugText
     255/     BEC : 4C FD 0B             JMP .._102.str_skip
     256/     BEF :                      .._102.str_addr:
     257/     BEF : 20 20 20 45 78 70    FCB "   Expected: ",$0
                    65 63 74 65 64 3A 
                    20 00             
     258/     BFD :                      .._102.str_skip:
     259/     BFD : A9 EF                LDA # (.._102.str_addr) # $100
     260/     BFF : 85 0A                STA $A ;DebugText.msg
     261/     C01 : A9 0B                LDA # (.._102.str_addr)/$100
     262/     C03 : 85 0B                STA $B ;DebugText.msg
     263/     C05 : 20 33 0B             JSR DebugText
     264/     C08 : A5 05                LDA $5 ;output
     265/     C0A : 85 0A                STA $A ;DebugText.msg
     266/     C0C : A5 06                LDA $6 ;output
     267/     C0E : 85 0B                STA $B ;DebugText.msg
     268/     C10 : 20 33 0B             JSR DebugText
     269/     C13 : 4C 26 0C             JMP .._154.str_skip
     270/     C16 :                      .._154.str_addr:
     271/     C16 : 5C 6E 20 20 20 46    FCB "\\n   Found:    ",$0
                    6F 75 6E 64 3A 20 
                    20 20 20 00       
     272/     C26 :                      .._154.str_skip:
     273/     C26 : A9 16                LDA # (.._154.str_addr) # $100
     274/     C28 : 85 0A                STA $A ;DebugText.msg
     275/     C2A : A9 0C                LDA # (.._154.str_addr)/$100
     276/     C2C : 85 0B                STA $B ;DebugText.msg
     277/     C2E : 20 33 0B             JSR DebugText
     278/     C31 : A0 00                LDY #$0
     279/     C33 : 84 08                STY $8 ;calculated_index
     280/     C35 : A0 02                LDY #$2
     281/     C37 : 84 07                STY $7 ;output_index
     282/     C39 :                      .fail_loop:
     283/     C39 : A4 08                LDY $8 ;calculated_index
     284/     C3B : B9 87 01             LDA new_stack_item,Y
     285/     C3E : 8D E8 FF             STA $FFE8
     286/     C41 : A9 20                LDA #$20
     287/     C43 : 8D E7 FF             STA $FFE7
     288/     C46 : C8                   INY
     289/     C47 : 84 08                STY $8 ;calculated_index
     290/     C49 : A4 07                LDY $7 ;output_index
     291/     C4B : B1 05                LDA ($5),Y ;output
     292/     C4D : F0 08                BEQ .fail_done
     293/     C4F : C8                   INY
     294/     C50 : C8                   INY
     295/     C51 : C8                   INY
     296/     C52 : 84 07                STY $7 ;output_index
     297/     C54 : 4C 39 0C             JMP .fail_loop
     298/     C57 :                      .fail_done:
     299/     C57 : 00                   BRK
     300/     C58 : 00                   BRK
     301/     C59 : AD 87 01             LDA new_stack_item
     302/     C5C : 4C B3 0B             JMP .failed
     303/     C5F :                      .done:
     304/     C5F : 4C 6A 0C             JMP .._179.str_skip
     305/     C62 :                      .._179.str_addr:
     306/     C62 : 5C 67 54 65 73 74    FCB "\\gTest ",$0
                    20 00             
     307/     C6A :                      .._179.str_skip:
     308/     C6A : A9 62                LDA # (.._179.str_addr) # $100
     309/     C6C : 85 0A                STA $A ;DebugText.msg
     310/     C6E : A9 0C                LDA # (.._179.str_addr)/$100
     311/     C70 : 85 0B                STA $B ;DebugText.msg
     312/     C72 : 20 33 0B             JSR DebugText
     313/     C75 : AE 93 01             LDX test_count+$1
     314/     C78 : AD 92 01             LDA test_count
     315/     C7B : 8D EA FF             STA $FFEA
     316/     C7E : 4C 8C 0C             JMP .._203.str_skip
     317/     C81 :                      .._203.str_addr:
     318/     C81 : 3A 20 70 61 73 73    FCB ": passed\\n",$0
                    65 64 5C 6E 00    
     319/     C8C :                      .._203.str_skip:
     320/     C8C : A9 81                LDA # (.._203.str_addr) # $100
     321/     C8E : 85 0A                STA $A ;DebugText.msg
     322/     C90 : A9 0C                LDA # (.._203.str_addr)/$100
     323/     C92 : 85 0B                STA $B ;DebugText.msg
     324/     C94 : 20 33 0B             JSR DebugText
     325/     C97 : EE 92 01             INC test_count
     326/     C9A : D0 03                BNE .._224.no_carry
     327/     C9C : EE 93 01             INC test_count+$1
     328/     C9F :                      .._224.no_carry:
     329/     C9F : 60                   RTS
     330/     CA0 :                      
     331/     CA0 :                     tests:
     332/     CA0 : A9 01                LDA #$1
     333/     CA2 : 8D 92 01             STA test_count
     334/     CA5 : 4C AA 0C             JMP .._233.str_skip
     335/     CA8 :                      .._233.str_addr:
     336/     CA8 : 35 00                FCB "5",$0
     337/     CAA :                      .._233.str_skip:
     338/     CAA : A9 A8                LDA # (.._233.str_addr) # $100
     339/     CAC : 85 03                STA $3 ;InputTest.input
     340/     CAE : A9 0C                LDA # (.._233.str_addr)/$100
     341/     CB0 : 85 04                STA $4 ;InputTest.input
     342/     CB2 : 4C D0 0C             JMP .._242.str_skip
     343/     CB5 :                      .._242.str_addr:
     344/     CB5 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 00 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 30 20 
                    30 30 00          
     345/     CD0 :                      .._242.str_skip:
     346/     CD0 : A9 B5                LDA # (.._242.str_addr) # $100
     347/     CD2 : 85 05                STA $5 ;InputTest.output
     348/     CD4 : A9 0C                LDA # (.._242.str_addr)/$100
     349/     CD6 : 85 06                STA $6 ;InputTest.output
     350/     CD8 : 20 4B 0B             JSR InputTest
     351/     CDB : 4C E2 0C             JMP .._260.str_skip
     352/     CDE :                      .._260.str_addr:
     353/     CDE : 35 30 30 00          FCB "500",$0
     354/     CE2 :                      .._260.str_skip:
     355/     CE2 : A9 DE                LDA # (.._260.str_addr) # $100
     356/     CE4 : 85 03                STA $3 ;InputTest.input
     357/     CE6 : A9 0C                LDA # (.._260.str_addr)/$100
     358/     CE8 : 85 04                STA $4 ;InputTest.input
     359/     CEA : 4C 08 0D             JMP .._269.str_skip
     360/     CED :                      .._269.str_addr:
     361/     CED : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    30 30 00          
     362/     D08 :                      .._269.str_skip:
     363/     D08 : A9 ED                LDA # (.._269.str_addr) # $100
     364/     D0A : 85 05                STA $5 ;InputTest.output
     365/     D0C : A9 0C                LDA # (.._269.str_addr)/$100
     366/     D0E : 85 06                STA $6 ;InputTest.output
     367/     D10 : 20 4B 0B             JSR InputTest
     368/     D13 : 4C 1A 0D             JMP .._287.str_skip
     369/     D16 :                      .._287.str_addr:
     370/     D16 : 35 30 30 00          FCB "500",$0
     371/     D1A :                      .._287.str_skip:
     372/     D1A : A9 16                LDA # (.._287.str_addr) # $100
     373/     D1C : 85 03                STA $3 ;InputTest.input
     374/     D1E : A9 0D                LDA # (.._287.str_addr)/$100
     375/     D20 : 85 04                STA $4 ;InputTest.input
     376/     D22 : 4C 40 0D             JMP .._296.str_skip
     377/     D25 :                      .._296.str_addr:
     378/     D25 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    30 30 00          
     379/     D40 :                      .._296.str_skip:
     380/     D40 : A9 25                LDA # (.._296.str_addr) # $100
     381/     D42 : 85 05                STA $5 ;InputTest.output
     382/     D44 : A9 0D                LDA # (.._296.str_addr)/$100
     383/     D46 : 85 06                STA $6 ;InputTest.output
     384/     D48 : 20 4B 0B             JSR InputTest
     385/     D4B : 4C 54 0D             JMP .._314.str_skip
     386/     D4E :                      .._314.str_addr:
     387/     D4E : 35 30 30 2E 30 00    FCB "500.0",$0
     388/     D54 :                      .._314.str_skip:
     389/     D54 : A9 4E                LDA # (.._314.str_addr) # $100
     390/     D56 : 85 03                STA $3 ;InputTest.input
     391/     D58 : A9 0D                LDA # (.._314.str_addr)/$100
     392/     D5A : 85 04                STA $4 ;InputTest.input
     393/     D5C : 4C 7A 0D             JMP .._323.str_skip
     394/     D5F :                      .._323.str_addr:
     395/     D5F : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    30 30 00          
     396/     D7A :                      .._323.str_skip:
     397/     D7A : A9 5F                LDA # (.._323.str_addr) # $100
     398/     D7C : 85 05                STA $5 ;InputTest.output
     399/     D7E : A9 0D                LDA # (.._323.str_addr)/$100
     400/     D80 : 85 06                STA $6 ;InputTest.output
     401/     D82 : 20 4B 0B             JSR InputTest
     402/     D85 : 4C 8F 0D             JMP .._341.str_skip
     403/     D88 :                      .._341.str_addr:
     404/     D88 : 35 30 30 2E 30 30    FCB "500.00",$0
                    00                
     405/     D8F :                      .._341.str_skip:
     406/     D8F : A9 88                LDA # (.._341.str_addr) # $100
     407/     D91 : 85 03                STA $3 ;InputTest.input
     408/     D93 : A9 0D                LDA # (.._341.str_addr)/$100
     409/     D95 : 85 04                STA $4 ;InputTest.input
     410/     D97 : 4C B5 0D             JMP .._350.str_skip
     411/     D9A :                      .._350.str_addr:
     412/     D9A : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    30 30 00          
     413/     DB5 :                      .._350.str_skip:
     414/     DB5 : A9 9A                LDA # (.._350.str_addr) # $100
     415/     DB7 : 85 05                STA $5 ;InputTest.output
     416/     DB9 : A9 0D                LDA # (.._350.str_addr)/$100
     417/     DBB : 85 06                STA $6 ;InputTest.output
     418/     DBD : 20 4B 0B             JSR InputTest
     419/     DC0 : 4C C7 0D             JMP .._368.str_skip
     420/     DC3 :                      .._368.str_addr:
     421/     DC3 : 35 65 30 00          FCB "5e0",$0
     422/     DC7 :                      .._368.str_skip:
     423/     DC7 : A9 C3                LDA # (.._368.str_addr) # $100
     424/     DC9 : 85 03                STA $3 ;InputTest.input
     425/     DCB : A9 0D                LDA # (.._368.str_addr)/$100
     426/     DCD : 85 04                STA $4 ;InputTest.input
     427/     DCF : 4C ED 0D             JMP .._377.str_skip
     428/     DD2 :                      .._377.str_addr:
     429/     DD2 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 00 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 30 20 
                    30 30 00          
     430/     DED :                      .._377.str_skip:
     431/     DED : A9 D2                LDA # (.._377.str_addr) # $100
     432/     DEF : 85 05                STA $5 ;InputTest.output
     433/     DF1 : A9 0D                LDA # (.._377.str_addr)/$100
     434/     DF3 : 85 06                STA $6 ;InputTest.output
     435/     DF5 : 20 4B 0B             JSR InputTest
     436/     DF8 : 4C 01 0E             JMP .._395.str_skip
     437/     DFB :                      .._395.str_addr:
     438/     DFB : 35 30 30 65 30 00    FCB "500e0",$0
     439/     E01 :                      .._395.str_skip:
     440/     E01 : A9 FB                LDA # (.._395.str_addr) # $100
     441/     E03 : 85 03                STA $3 ;InputTest.input
     442/     E05 : A9 0D                LDA # (.._395.str_addr)/$100
     443/     E07 : 85 04                STA $4 ;InputTest.input
     444/     E09 : 4C 27 0E             JMP .._404.str_skip
     445/     E0C :                      .._404.str_addr:
     446/     E0C : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    30 30 00          
     447/     E27 :                      .._404.str_skip:
     448/     E27 : A9 0C                LDA # (.._404.str_addr) # $100
     449/     E29 : 85 05                STA $5 ;InputTest.output
     450/     E2B : A9 0E                LDA # (.._404.str_addr)/$100
     451/     E2D : 85 06                STA $6 ;InputTest.output
     452/     E2F : 20 4B 0B             JSR InputTest
     453/     E32 : 4C 3B 0E             JMP .._422.str_skip
     454/     E35 :                      .._422.str_addr:
     455/     E35 : 35 30 30 65 32 00    FCB "500e2",$0
     456/     E3B :                      .._422.str_skip:
     457/     E3B : A9 35                LDA # (.._422.str_addr) # $100
     458/     E3D : 85 03                STA $3 ;InputTest.input
     459/     E3F : A9 0E                LDA # (.._422.str_addr)/$100
     460/     E41 : 85 04                STA $4 ;InputTest.input
     461/     E43 : 4C 61 0E             JMP .._431.str_skip
     462/     E46 :                      .._431.str_addr:
     463/     E46 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 04 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 34 20 
                    30 30 00          
     464/     E61 :                      .._431.str_skip:
     465/     E61 : A9 46                LDA # (.._431.str_addr) # $100
     466/     E63 : 85 05                STA $5 ;InputTest.output
     467/     E65 : A9 0E                LDA # (.._431.str_addr)/$100
     468/     E67 : 85 06                STA $6 ;InputTest.output
     469/     E69 : 20 4B 0B             JSR InputTest
     470/     E6C : 4C 77 0E             JMP .._449.str_skip
     471/     E6F :                      .._449.str_addr:
     472/     E6F : 35 30 30 65 39 39    FCB "500e997",$0
                    37 00             
     473/     E77 :                      .._449.str_skip:
     474/     E77 : A9 6F                LDA # (.._449.str_addr) # $100
     475/     E79 : 85 03                STA $3 ;InputTest.input
     476/     E7B : A9 0E                LDA # (.._449.str_addr)/$100
     477/     E7D : 85 04                STA $4 ;InputTest.input
     478/     E7F : 4C 9D 0E             JMP .._458.str_skip
     479/     E82 :                      .._458.str_addr:
     480/     E82 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 99 09",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 39 39 20 
                    30 39 00          
     481/     E9D :                      .._458.str_skip:
     482/     E9D : A9 82                LDA # (.._458.str_addr) # $100
     483/     E9F : 85 05                STA $5 ;InputTest.output
     484/     EA1 : A9 0E                LDA # (.._458.str_addr)/$100
     485/     EA3 : 85 06                STA $6 ;InputTest.output
     486/     EA5 : 20 4B 0B             JSR InputTest
     487/     EA8 : 4C B3 0E             JMP .._476.str_skip
     488/     EAB :                      .._476.str_addr:
     489/     EAB : 35 30 30 65 39 39    FCB "500e998",$0
                    38 00             
     490/     EB3 :                      .._476.str_skip:
     491/     EB3 : A9 AB                LDA # (.._476.str_addr) # $100
     492/     EB5 : 85 03                STA $3 ;InputTest.input
     493/     EB7 : A9 0E                LDA # (.._476.str_addr)/$100
     494/     EB9 : 85 04                STA $4 ;InputTest.input
     495/     EBB : 4C C1 0E             JMP .._485.str_skip
     496/     EBE :                      .._485.str_addr:
     497/     EBE : 30 34 00             FCB "04",$0
     498/     EC1 :                      .._485.str_skip:
     499/     EC1 : A9 BE                LDA # (.._485.str_addr) # $100
     500/     EC3 : 85 05                STA $5 ;InputTest.output
     501/     EC5 : A9 0E                LDA # (.._485.str_addr)/$100
     502/     EC7 : 85 06                STA $6 ;InputTest.output
     503/     EC9 : 20 4B 0B             JSR InputTest
     504/     ECC : 4C D2 0E             JMP .._503.str_skip
     505/     ECF :                      .._503.str_addr:
     506/     ECF : 2D 35 00             FCB "-5",$0
     507/     ED2 :                      .._503.str_skip:
     508/     ED2 : A9 CF                LDA # (.._503.str_addr) # $100
     509/     ED4 : 85 03                STA $3 ;InputTest.input
     510/     ED6 : A9 0E                LDA # (.._503.str_addr)/$100
     511/     ED8 : 85 04                STA $4 ;InputTest.input
     512/     EDA : 4C F8 0E             JMP .._512.str_skip
     513/     EDD :                      .._512.str_addr:
     514/     EDD : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 00 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 30 20 
                    38 30 00          
     515/     EF8 :                      .._512.str_skip:
     516/     EF8 : A9 DD                LDA # (.._512.str_addr) # $100
     517/     EFA : 85 05                STA $5 ;InputTest.output
     518/     EFC : A9 0E                LDA # (.._512.str_addr)/$100
     519/     EFE : 85 06                STA $6 ;InputTest.output
     520/     F00 : 20 4B 0B             JSR InputTest
     521/     F03 : 4C 0B 0F             JMP .._530.str_skip
     522/     F06 :                      .._530.str_addr:
     523/     F06 : 2D 35 30 30 00       FCB "-500",$0
     524/     F0B :                      .._530.str_skip:
     525/     F0B : A9 06                LDA # (.._530.str_addr) # $100
     526/     F0D : 85 03                STA $3 ;InputTest.input
     527/     F0F : A9 0F                LDA # (.._530.str_addr)/$100
     528/     F11 : 85 04                STA $4 ;InputTest.input
     529/     F13 : 4C 31 0F             JMP .._539.str_skip
     530/     F16 :                      .._539.str_addr:
     531/     F16 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
     532/     F31 :                      .._539.str_skip:
     533/     F31 : A9 16                LDA # (.._539.str_addr) # $100
     534/     F33 : 85 05                STA $5 ;InputTest.output
     535/     F35 : A9 0F                LDA # (.._539.str_addr)/$100
     536/     F37 : 85 06                STA $6 ;InputTest.output
     537/     F39 : 20 4B 0B             JSR InputTest
     538/     F3C : 4C 54 0F             JMP .._557.str_skip
     539/     F3F :                      .._557.str_addr:
     540/     F3F : 5C 6E 5C 67 41 6C    FCB "\\n\\gAll tests passed",$0
                    6C 20 74 65 73 74 
                    73 20 70 61 73 73 
                    65 64 00          
     541/     F54 :                      .._557.str_skip:
     542/     F54 : A9 3F                LDA # (.._557.str_addr) # $100
     543/     F56 : 85 0A                STA $A ;DebugText.msg
     544/     F58 : A9 0F                LDA # (.._557.str_addr)/$100
     545/     F5A : 85 0B                STA $B ;DebugText.msg
     546/     F5C : 20 33 0B             JSR DebugText
     547/     F5F : 4C 76 0F             JMP .._576.str_skip
     548/     F62 :                      .._576.str_addr:
     549/     F62 : 5C 6E 5C 6C 53 69    FCB "\\n\\lSize of tests: ",$0
                    7A 65 20 6F 66 20 
                    74 65 73 74 73 3A 
                    20 00             
     550/     F76 :                      .._576.str_skip:
     551/     F76 : A9 62                LDA # (.._576.str_addr) # $100
     552/     F78 : 85 0A                STA $A ;DebugText.msg
     553/     F7A : A9 0F                LDA # (.._576.str_addr)/$100
     554/     F7C : 85 0B                STA $B ;DebugText.msg
     555/     F7E : 20 33 0B             JSR DebugText
     556/     F81 : A2 04                LDX # (tests_end-tests_begin)/$100
     557/     F83 : A9 6B                LDA # (tests_end-tests_begin)#$100
     558/     F85 : 8D EA FF             STA $FFEA
     559/     F88 : 4C 92 0F             JMP .._595.str_skip
     560/     F8B :                      .._595.str_addr:
     561/     F8B : 20 62 79 74 65 73    FCB " bytes",$0
                    00                
     562/     F92 :                      .._595.str_skip:
     563/     F92 : A9 8B                LDA # (.._595.str_addr) # $100
     564/     F94 : 85 0A                STA $A ;DebugText.msg
     565/     F96 : A9 0F                LDA # (.._595.str_addr)/$100
     566/     F98 : 85 0B                STA $B ;DebugText.msg
     567/     F9A : 20 33 0B             JSR DebugText
     568/     F9D : 60                   RTS
     569/     F9E :                      
     570/     F9E :                     tests_end:
     571/     F9E :                      
     572/     F9E :                     setup:
     573/     F9E : 78                   SEI
     574/     F9F : D8                   CLD
     575/     FA0 : A2 00                LDX #$0
     576/     FA2 : 8E 91 01             STX stack_count
     577/     FA5 : A9 00                LDA #$0
     578/     FA7 : 8D 90 01             STA font_inverted
     579/     FAA : A9 04                LDA #$4
     580/     FAC : 8D E1 FF             STA $FFE1
     581/     FAF : A9 05                LDA #$5
     582/     FB1 : 8D E2 FF             STA $FFE2
     583/     FB4 : 60                   RTS
     584/     FB5 :                      
     585/     FB5 :                     ReadKey:
     586/     FB5 : AD E4 FF             LDA $FFE4
     587/     FB8 : 60                   RTS
     588/     FB9 :                      
     589/     FB9 :                     LCD_clrscr:
     590/     FB9 : A9 00                LDA #$0
     591/     FBB : 85 23                STA screen_ptr
     592/     FBD : A9 40                LDA #$40
     593/     FBF : 85 24                STA screen_ptr+$1
     594/     FC1 : A9 80                LDA #$80
     595/     FC3 : 85 03                STA $3 ;counter
     596/     FC5 : A9 2A                LDA #$2A
     597/     FC7 : A0 00                LDY #$0
     598/     FC9 :                      .loop:
     599/     FC9 : 91 23                STA (screen_ptr),Y
     600/     FCB : C8                   INY
     601/     FCC : D0 FB                BNE .loop
     602/     FCE : E6 24                INC screen_ptr+$1
     603/     FD0 : C6 03                DEC $3 ;counter
     604/     FD2 : D0 F5                BNE .loop
     605/     FD4 : A9 00                LDA #$0
     606/     FD6 : 85 23                STA screen_ptr
     607/     FD8 : A9 40                LDA #$40
     608/     FDA : 85 24                STA screen_ptr+$1
     609/     FDC : 60                   RTS
     610/     FDD :                      
     611/     FDD :                     LCD_char:
     612/     FDD : A5 0F                LDA $F ;c_out
     613/     FDF : C9 20                CMP #$20
     614/     FE1 : 90 03                BCC .._695.skip
     615/     FE3 : 4C E7 0F             JMP .if0
     616/     FE6 :                      .._695.skip:
     617/     FE6 : 60                   RTS
     618/     FE7 :                      .if0:
     619/     FE7 : C9 66                CMP #$66
     620/     FE9 : B0 03                BCS .._700.skip
     621/     FEB : 4C EF 0F             JMP .if1
     622/     FEE :                      .._700.skip:
     623/     FEE : 60                   RTS
     624/     FEF :                      .if1:
     625/     FEF : 38                   SEC
     626/     FF0 : E9 20                SBC #$20
     627/     FF2 : 85 10                STA $10 ;pixel_ptr
     628/     FF4 : A9 00                LDA #$0
     629/     FF6 : 85 11                STA $11 ;pixel_ptr
     630/     FF8 : 06 10                ASL $10 ;pixel_ptr
     631/     FFA : 06 10                ASL $10 ;pixel_ptr
     632/     FFC : 26 11                ROL $11 ;pixel_ptr
     633/     FFE : 06 10                ASL $10 ;pixel_ptr
     634/    1000 : 26 11                ROL $11 ;pixel_ptr
     635/    1002 : A9 03                LDA #font_table # $100
     636/    1004 : 65 10                ADC $10 ;pixel_ptr
     637/    1006 : 85 10                STA $10 ;pixel_ptr
     638/    1008 : A9 09                LDA #font_table/$100
     639/    100A : 65 11                ADC $11 ;pixel_ptr
     640/    100C : 85 11                STA $11 ;pixel_ptr
     641/    100E : A9 00                LDA #$0
     642/    1010 : 85 12                STA $12 ;pixel_index
     643/    1012 : A9 08                LDA #$8
     644/    1014 : 85 14                STA $14 ;lc1
     645/    1016 :                      .loop:
     646/    1016 : A9 08                LDA #$8
     647/    1018 : 85 15                STA $15 ;lc2
     648/    101A : A4 12                LDY $12 ;pixel_index
     649/    101C : E6 12                INC $12 ;pixel_index
     650/    101E : B1 10                LDA ($10),Y ;pixel_ptr
     651/    1020 : 4D 90 01             EOR font_inverted
     652/    1023 : 85 13                STA $13 ;pixel
     653/    1025 : A0 00                LDY #$0
     654/    1027 :                      .loop.inner:
     655/    1027 : 26 13                ROL $13 ;pixel
     656/    1029 : A9 00                LDA #$0
     657/    102B : B0 02                BCS .color
     658/    102D : A9 2A                LDA #$2A
     659/    102F :                      .color:
     660/    102F : 91 23                STA (screen_ptr),Y
     661/    1031 : E6 24                INC screen_ptr+$1
     662/    1033 : 91 23                STA (screen_ptr),Y
     663/    1035 : C8                   INY
     664/    1036 : 91 23                STA (screen_ptr),Y
     665/    1038 : C6 24                DEC screen_ptr+$1
     666/    103A : 91 23                STA (screen_ptr),Y
     667/    103C : C8                   INY
     668/    103D : C6 15                DEC $15 ;lc2
     669/    103F : D0 E6                BNE .loop.inner
     670/    1041 : E6 24                INC screen_ptr+$1
     671/    1043 : E6 24                INC screen_ptr+$1
     672/    1045 : C6 14                DEC $14 ;lc1
     673/    1047 : D0 CD                BNE .loop
     674/    1049 : 18                   CLC
     675/    104A : A5 23                LDA screen_ptr
     676/    104C : 69 10                ADC #$10
     677/    104E : 85 23                STA screen_ptr
     678/    1050 : 38                   SEC
     679/    1051 : A5 24                LDA screen_ptr+$1
     680/    1053 : E9 10                SBC #$10
     681/    1055 : 85 24                STA screen_ptr+$1
     682/    1057 : 60                   RTS
     683/    1058 :                      
     684/    1058 :                     LCD_print:
     685/    1058 : A9 00                LDA #$0
     686/    105A : 85 05                STA $5 ;index
     687/    105C :                      .loop:
     688/    105C : A4 05                LDY $5 ;index
     689/    105E : B1 03                LDA ($3),Y ;source
     690/    1060 : F0 0E                BEQ .done
     691/    1062 : 85 06                STA $6 ;arg
     692/    1064 : A5 06                LDA $6 ;arg
     693/    1066 : 85 0F                STA $F ;LCD_char.c_out
     694/    1068 : 20 DD 0F             JSR LCD_char
     695/    106B : E6 05                INC $5 ;index
     696/    106D : 4C 5C 10             JMP .loop
     697/    1070 :                      .done:
     698/    1070 : 60                   RTS
     699/    1071 :                      
     700/    1071 :                     MemCopy:
     701/    1071 : A0 00                LDY #$0
     702/    1073 :                      .loop:
     703/    1073 : B1 0E                LDA ($E),Y ;source
     704/    1075 : 91 10                STA ($10),Y ;dest
     705/    1077 : C8                   INY
     706/    1078 : C4 12                CPY $12 ;count
     707/    107A : D0 F7                BNE .loop
     708/    107C : 60                   RTS
     709/    107D :                      
     710/    107D :                     BCD_Reverse:
     711/    107D : A0 00                LDY #$0
     712/    107F : 08                   PHP
     713/    1080 : F8                   SED
     714/    1081 : 38                   SEC
     715/    1082 :                      .loop:
     716/    1082 : A9 00                LDA #$0
     717/    1084 : F1 17                SBC ($17),Y ;source
     718/    1086 : 91 17                STA ($17),Y ;source
     719/    1088 : C8                   INY
     720/    1089 : C6 19                DEC $19 ;count
     721/    108B : D0 F5                BNE .loop
     722/    108D : 28                   PLP
     723/    108E : 60                   RTS
     724/    108F :                      
     725/    108F :                     DigitHigh:
     726/    108F : A5 0E                LDA $E ;digit
     727/    1091 : 4A                   LSR
     728/    1092 : 4A                   LSR
     729/    1093 : 4A                   LSR
     730/    1094 : 4A                   LSR
     731/    1095 : 18                   CLC
     732/    1096 : 69 30                ADC #$30
     733/    1098 : 85 0E                STA $E ;digit
     734/    109A : A5 0E                LDA $E ;digit
     735/    109C : 85 0F                STA $F ;LCD_char.c_out
     736/    109E : 20 DD 0F             JSR LCD_char
     737/    10A1 : 60                   RTS
     738/    10A2 :                      
     739/    10A2 :                     DigitLow:
     740/    10A2 : A5 0E                LDA $E ;digit
     741/    10A4 : 29 0F                AND #$F
     742/    10A6 : 18                   CLC
     743/    10A7 : 69 30                ADC #$30
     744/    10A9 : 85 0E                STA $E ;digit
     745/    10AB : A5 0E                LDA $E ;digit
     746/    10AD : 85 0F                STA $F ;LCD_char.c_out
     747/    10AF : 20 DD 0F             JSR LCD_char
     748/    10B2 : 60                   RTS
     749/    10B3 :                      
     750/    10B3 :                     DrawFloat:
     751/    10B3 : A5 03                LDA $3 ;source
     752/    10B5 : 85 0E                STA $E ;MemCopy.source
     753/    10B7 : A5 04                LDA $4 ;source
     754/    10B9 : 85 0F                STA $F ;MemCopy.source
     755/    10BB : A9 25                LDA # (R0) # $100
     756/    10BD : 85 10                STA $10 ;MemCopy.dest
     757/    10BF : A9 00                LDA # (R0)/$100
     758/    10C1 : 85 11                STA $11 ;MemCopy.dest
     759/    10C3 : A9 09                LDA #$9
     760/    10C5 : 85 12                STA $12 ;MemCopy.count
     761/    10C7 : 20 71 10             JSR MemCopy
     762/    10CA : A9 20                LDA #$20
     763/    10CC : 85 07                STA $7 ;sign
     764/    10CE : A0 08                LDY #$8
     765/    10D0 : B1 03                LDA ($3),Y ;source
     766/    10D2 : 29 80                AND #$80
     767/    10D4 : F0 04                BEQ .positive
     768/    10D6 : A9 63                LDA #$63
     769/    10D8 : 85 07                STA $7 ;sign
     770/    10DA :                      .positive:
     771/    10DA : A5 07                LDA $7 ;sign
     772/    10DC : 85 0F                STA $F ;LCD_char.c_out
     773/    10DE : 20 DD 0F             JSR LCD_char
     774/    10E1 : A0 06                LDY #$6
     775/    10E3 : B9 25 00             LDA R0,Y
     776/    10E6 : 85 06                STA $6 ;arg
     777/    10E8 : A5 06                LDA $6 ;arg
     778/    10EA : 85 0E                STA $E ;DigitHigh.digit
     779/    10EC : 20 8F 10             JSR DigitHigh
     780/    10EF : A9 2E                LDA #$2E
     781/    10F1 : 85 0F                STA $F ;LCD_char.c_out
     782/    10F3 : 20 DD 0F             JSR LCD_char
     783/    10F6 : A5 06                LDA $6 ;arg
     784/    10F8 : 85 0E                STA $E ;DigitLow.digit
     785/    10FA : 20 A2 10             JSR DigitLow
     786/    10FD : A9 05                LDA #$5
     787/    10FF : 85 05                STA $5 ;index
     788/    1101 :                      .loop:
     789/    1101 : A4 05                LDY $5 ;index
     790/    1103 : B9 25 00             LDA R0,Y
     791/    1106 : 85 06                STA $6 ;arg
     792/    1108 : A5 06                LDA $6 ;arg
     793/    110A : 85 0E                STA $E ;DigitHigh.digit
     794/    110C : 20 8F 10             JSR DigitHigh
     795/    110F : A5 06                LDA $6 ;arg
     796/    1111 : 85 0E                STA $E ;DigitLow.digit
     797/    1113 : 20 A2 10             JSR DigitLow
     798/    1116 : C6 05                DEC $5 ;index
     799/    1118 : A5 05                LDA $5 ;index
     800/    111A : C9 02                CMP #$2
     801/    111C : D0 E3                BNE .loop
     802/    111E : A9 2B                LDA #$2B
     803/    1120 : 85 07                STA $7 ;sign
     804/    1122 : A0 08                LDY #$8
     805/    1124 : B1 03                LDA ($3),Y ;source
     806/    1126 : 29 40                AND #$40
     807/    1128 : F0 04                BEQ .positive_e
     808/    112A : A9 63                LDA #$63
     809/    112C : 85 07                STA $7 ;sign
     810/    112E :                      .positive_e:
     811/    112E : A5 07                LDA $7 ;sign
     812/    1130 : 85 0F                STA $F ;LCD_char.c_out
     813/    1132 : 20 DD 0F             JSR LCD_char
     814/    1135 : A0 08                LDY #$8
     815/    1137 : B9 25 00             LDA R0,Y
     816/    113A : 85 06                STA $6 ;arg
     817/    113C : A5 06                LDA $6 ;arg
     818/    113E : 85 0E                STA $E ;DigitLow.digit
     819/    1140 : 20 A2 10             JSR DigitLow
     820/    1143 : A0 07                LDY #$7
     821/    1145 : B9 25 00             LDA R0,Y
     822/    1148 : 85 06                STA $6 ;arg
     823/    114A : A5 06                LDA $6 ;arg
     824/    114C : 85 0E                STA $E ;DigitHigh.digit
     825/    114E : 20 8F 10             JSR DigitHigh
     826/    1151 : A5 06                LDA $6 ;arg
     827/    1153 : 85 0E                STA $E ;DigitLow.digit
     828/    1155 : 20 A2 10             JSR DigitLow
     829/    1158 : 60                   RTS
     830/    1159 :                      
     831/    1159 :                     HexHigh:
     832/    1159 : A5 03                LDA $3 ;digit
     833/    115B : 4A                   LSR
     834/    115C : 4A                   LSR
     835/    115D : 4A                   LSR
     836/    115E : 4A                   LSR
     837/    115F : C9 0A                CMP #$A
     838/    1161 : 90 08                BCC .print_digit
     839/    1163 : 18                   CLC
     840/    1164 : 69 37                ADC #$37
     841/    1166 : 85 04                STA $4 ;arg
     842/    1168 : 4C 70 11             JMP .done
     843/    116B :                      .print_digit:
     844/    116B : 18                   CLC
     845/    116C : 69 30                ADC #$30
     846/    116E : 85 04                STA $4 ;arg
     847/    1170 :                      .done:
     848/    1170 : A5 04                LDA $4 ;arg
     849/    1172 : 85 0F                STA $F ;LCD_char.c_out
     850/    1174 : 20 DD 0F             JSR LCD_char
     851/    1177 : 60                   RTS
     852/    1178 :                      
     853/    1178 :                     HexLow:
     854/    1178 : A5 03                LDA $3 ;digit
     855/    117A : 29 0F                AND #$F
     856/    117C : C9 0A                CMP #$A
     857/    117E : 90 08                BCC .print_digit
     858/    1180 : 18                   CLC
     859/    1181 : 69 37                ADC #$37
     860/    1183 : 85 04                STA $4 ;arg
     861/    1185 : 4C 8D 11             JMP .done
     862/    1188 :                      .print_digit:
     863/    1188 : 18                   CLC
     864/    1189 : 69 30                ADC #$30
     865/    118B : 85 04                STA $4 ;arg
     866/    118D :                      .done:
     867/    118D : A5 04                LDA $4 ;arg
     868/    118F : 85 0F                STA $F ;LCD_char.c_out
     869/    1191 : 20 DD 0F             JSR LCD_char
     870/    1194 : 60                   RTS
     871/    1195 :                      
     872/    1195 :                     DrawHex:
     873/    1195 : A9 24                LDA #$24
     874/    1197 : 85 0F                STA $F ;LCD_char.c_out
     875/    1199 : 20 DD 0F             JSR LCD_char
     876/    119C : A0 02                LDY #$2
     877/    119E : B1 05                LDA ($5),Y ;source
     878/    11A0 : 85 07                STA $7 ;arg
     879/    11A2 : A5 07                LDA $7 ;arg
     880/    11A4 : 85 03                STA $3 ;HexHigh.digit
     881/    11A6 : 20 59 11             JSR HexHigh
     882/    11A9 : A5 07                LDA $7 ;arg
     883/    11AB : 85 03                STA $3 ;HexLow.digit
     884/    11AD : 20 78 11             JSR HexLow
     885/    11B0 : A0 01                LDY #$1
     886/    11B2 : B1 05                LDA ($5),Y ;source
     887/    11B4 : 85 07                STA $7 ;arg
     888/    11B6 : A5 07                LDA $7 ;arg
     889/    11B8 : 85 03                STA $3 ;HexHigh.digit
     890/    11BA : 20 59 11             JSR HexHigh
     891/    11BD : A5 07                LDA $7 ;arg
     892/    11BF : 85 03                STA $3 ;HexLow.digit
     893/    11C1 : 20 78 11             JSR HexLow
     894/    11C4 : 60                   RTS
     895/    11C5 :                      
     896/    11C5 :                     DrawString:
     897/    11C5 : A9 22                LDA #$22
     898/    11C7 : 85 0F                STA $F ;LCD_char.c_out
     899/    11C9 : 20 DD 0F             JSR LCD_char
     900/    11CC : A9 01                LDA #$1
     901/    11CE : 85 06                STA $6 ;index
     902/    11D0 :                      .loop:
     903/    11D0 : A4 06                LDY $6 ;index
     904/    11D2 : B1 03                LDA ($3),Y ;source
     905/    11D4 : F0 11                BEQ .done
     906/    11D6 : 85 05                STA $5 ;arg
     907/    11D8 : A5 05                LDA $5 ;arg
     908/    11DA : 85 0F                STA $F ;LCD_char.c_out
     909/    11DC : 20 DD 0F             JSR LCD_char
     910/    11DF : E6 06                INC $6 ;index
     911/    11E1 : A5 06                LDA $6 ;index
     912/    11E3 : C9 09                CMP #$9
     913/    11E5 : D0 E9                BNE .loop
     914/    11E7 :                      .done:
     915/    11E7 : A9 22                LDA #$22
     916/    11E9 : 85 0F                STA $F ;LCD_char.c_out
     917/    11EB : 20 DD 0F             JSR LCD_char
     918/    11EE : 60                   RTS
     919/    11EF :                      
     920/    11EF :                     DrawStack:
     921/    11EF : 8A                   TXA
     922/    11F0 : 18                   CLC
     923/    11F1 : 69 24                ADC #$24
     924/    11F3 : 85 0C                STA $C ;address
     925/    11F5 : A9 00                LDA #$0
     926/    11F7 : 85 0D                STA $D ;address
     927/    11F9 : 20 B9 0F             JSR LCD_clrscr
     928/    11FC : 4C 03 12             JMP .._1436.str_skip
     929/    11FF :                      .._1436.str_addr:
     930/    11FF : 52 41 44 00          FCB "RAD",$0
     931/    1203 :                      .._1436.str_skip:
     932/    1203 : A9 FF                LDA # (.._1436.str_addr) # $100
     933/    1205 : 85 03                STA $3 ;LCD_print.source
     934/    1207 : A9 11                LDA # (.._1436.str_addr)/$100
     935/    1209 : 85 04                STA $4 ;LCD_print.source
     936/    120B : 20 58 10             JSR LCD_print
     937/    120E : A9 35                LDA #$35
     938/    1210 : 85 0A                STA $A ;character
     939/    1212 : A9 05                LDA #$5
     940/    1214 : 85 0B                STA $B ;counter
     941/    1216 :                      .loop:
     942/    1216 : A9 00                LDA #$0
     943/    1218 : 85 23                STA screen_ptr
     944/    121A : A5 24                LDA screen_ptr+$1
     945/    121C : 18                   CLC
     946/    121D : 69 10                ADC #$10
     947/    121F : 85 24                STA screen_ptr+$1
     948/    1221 : A5 0A                LDA $A ;character
     949/    1223 : 85 0F                STA $F ;LCD_char.c_out
     950/    1225 : 20 DD 0F             JSR LCD_char
     951/    1228 : A9 3A                LDA #$3A
     952/    122A : 85 0F                STA $F ;LCD_char.c_out
     953/    122C : 20 DD 0F             JSR LCD_char
     954/    122F : C6 0B                DEC $B ;counter
     955/    1231 : A5 0B                LDA $B ;counter
     956/    1233 : CD 91 01             CMP stack_count
     957/    1236 : B0 3A                BCS .no_item
     958/    1238 : A0 00                LDY #$0
     959/    123A : B1 0C                LDA ($C),Y ;address
     960/    123C : C9 01                CMP #$1
     961/    123E : D0 0E                BNE .not_float
     962/    1240 : A5 0C                LDA $C ;address
     963/    1242 : 85 03                STA $3 ;DrawFloat.source
     964/    1244 : A5 0D                LDA $D ;address
     965/    1246 : 85 04                STA $4 ;DrawFloat.source
     966/    1248 : 20 B3 10             JSR DrawFloat
     967/    124B : 4C 72 12             JMP .item_done
     968/    124E :                      .not_float:
     969/    124E : C9 02                CMP #$2
     970/    1250 : D0 0E                BNE .not_str
     971/    1252 : A5 0C                LDA $C ;address
     972/    1254 : 85 03                STA $3 ;DrawString.source
     973/    1256 : A5 0D                LDA $D ;address
     974/    1258 : 85 04                STA $4 ;DrawString.source
     975/    125A : 20 C5 11             JSR DrawString
     976/    125D : 4C 72 12             JMP .item_done
     977/    1260 :                      .not_str:
     978/    1260 : C9 03                CMP #$3
     979/    1262 : D0 0E                BNE .not_hex
     980/    1264 : A5 0C                LDA $C ;address
     981/    1266 : 85 05                STA $5 ;DrawHex.source
     982/    1268 : A5 0D                LDA $D ;address
     983/    126A : 85 06                STA $6 ;DrawHex.source
     984/    126C : 20 95 11             JSR DrawHex
     985/    126F : 4C 72 12             JMP .item_done
     986/    1272 :                      .not_hex:
     987/    1272 :                      .item_done:
     988/    1272 :                      .no_item:
     989/    1272 : A5 0C                LDA $C ;address
     990/    1274 : 38                   SEC
     991/    1275 : E9 09                SBC #$9
     992/    1277 : 85 0C                STA $C ;address
     993/    1279 : C6 0A                DEC $A ;character
     994/    127B : A5 0B                LDA $B ;counter
     995/    127D : D0 97                BNE .loop
     996/    127F : A9 00                LDA #$0
     997/    1281 : 85 23                STA screen_ptr
     998/    1283 : A5 24                LDA screen_ptr+$1
     999/    1285 : 18                   CLC
    1000/    1286 : 69 14                ADC #$14
    1001/    1288 : 85 24                STA screen_ptr+$1
    1002/    128A : A0 00                LDY #$0
    1003/    128C : A9 00                LDA #$0
    1004/    128E :                      .loop_line:
    1005/    128E : 91 23                STA (screen_ptr),Y
    1006/    1290 : E6 24                INC screen_ptr+$1
    1007/    1292 : 91 23                STA (screen_ptr),Y
    1008/    1294 : C6 24                DEC screen_ptr+$1
    1009/    1296 : C8                   INY
    1010/    1297 : D0 F5                BNE .loop_line
    1011/    1299 : 60                   RTS
    1012/    129A :                      
    1013/    129A :                     ERROR_MSG_INPUT:
    1014/    129A : 49 4E 50 55 54 20    FCB "INPUT ERROR ",$0
                    45 52 52 4F 52 20 
                    00                
    1015/    12A7 :                      
    1016/    12A7 :                     ERROR_MSG_WORD_TOO_LONG:
    1017/    12A7 : 49 4E 50 55 54 20    FCB "INPUT SIZE  ",$0
                    53 49 5A 45 20 20 
                    00                
    1018/    12B4 :                      
    1019/    12B4 :                     ERROR_MSG_STRING:
    1020/    12B4 : 53 54 52 49 4E 47    FCB "STRING ERROR",$0
                    20 45 52 52 4F 52 
                    00                
    1021/    12C1 :                      
    1022/    12C1 :                     ERROR_MSG_STACK_OVERFLOW:
    1023/    12C1 : 53 54 41 43 4B 20    FCB "STACK OVERF ",$0
                    4F 56 45 52 46 20 
                    00                
    1024/    12CE :                      
    1025/    12CE :                     ERROR_MSG_STACK_UNDERFLOW:
    1026/    12CE : 53 54 41 43 4B 20    FCB "STACK UNDERF",$0
                    55 4E 44 45 52 46 
                    00                
    1027/    12DB :                      
    1028/    12DB :                     ERROR_TABLE:
    1029/    12DB : 9A 12                FDB ERROR_MSG_INPUT
    1030/    12DD : A7 12                FDB ERROR_MSG_WORD_TOO_LONG
    1031/    12DF : B4 12                FDB ERROR_MSG_STRING
    1032/    12E1 : C1 12                FDB ERROR_MSG_STACK_OVERFLOW
    1033/    12E3 : CE 12                FDB ERROR_MSG_STACK_UNDERFLOW
    1034/    12E5 :                      
    1035/    12E5 :                     ErrorMsg:
    1036/    12E5 : A4 07                LDY $7 ;error_code
    1037/    12E7 : B9 D9 12             LDA ERROR_TABLE-$2,Y
    1038/    12EA : 85 08                STA $8 ;msg
    1039/    12EC : B9 DA 12             LDA ERROR_TABLE-$1,Y
    1040/    12EF : 85 09                STA $9 ;msg
    1041/    12F1 : A9 20                LDA #$20
    1042/    12F3 : 85 23                STA screen_ptr
    1043/    12F5 : A9 60                LDA #$60
    1044/    12F7 : 85 24                STA screen_ptr+$1
    1045/    12F9 : 4C 09 13             JMP .._1611.str_skip
    1046/    12FC :                      .._1611.str_addr:
    1047/    12FC : 62 62 62 62 62 62    FCB "bbbbbbbbbbbb",$0
                    62 62 62 62 62 62 
                    00                
    1048/    1309 :                      .._1611.str_skip:
    1049/    1309 : A9 FC                LDA # (.._1611.str_addr) # $100
    1050/    130B : 85 03                STA $3 ;LCD_print.source
    1051/    130D : A9 12                LDA # (.._1611.str_addr)/$100
    1052/    130F : 85 04                STA $4 ;LCD_print.source
    1053/    1311 : 20 58 10             JSR LCD_print
    1054/    1314 : A9 20                LDA #$20
    1055/    1316 : 85 23                STA screen_ptr
    1056/    1318 : A9 70                LDA #$70
    1057/    131A : 85 24                STA screen_ptr+$1
    1058/    131C : A9 FF                LDA #$FF
    1059/    131E : 8D 90 01             STA font_inverted
    1060/    1321 : A5 08                LDA $8 ;msg
    1061/    1323 : 85 03                STA $3 ;LCD_print.source
    1062/    1325 : A5 09                LDA $9 ;msg
    1063/    1327 : 85 04                STA $4 ;LCD_print.source
    1064/    1329 : 20 58 10             JSR LCD_print
    1065/    132C : A9 20                LDA #$20
    1066/    132E : 85 23                STA screen_ptr
    1067/    1330 : A9 80                LDA #$80
    1068/    1332 : 85 24                STA screen_ptr+$1
    1069/    1334 : 4C 44 13             JMP .._1665.str_skip
    1070/    1337 :                      .._1665.str_addr:
    1071/    1337 : 62 62 62 62 62 62    FCB "bbbbbbbbbbbb",$0
                    62 62 62 62 62 62 
                    00                
    1072/    1344 :                      .._1665.str_skip:
    1073/    1344 : A9 37                LDA # (.._1665.str_addr) # $100
    1074/    1346 : 85 03                STA $3 ;LCD_print.source
    1075/    1348 : A9 13                LDA # (.._1665.str_addr)/$100
    1076/    134A : 85 04                STA $4 ;LCD_print.source
    1077/    134C : 20 58 10             JSR LCD_print
    1078/    134F : A9 00                LDA #$0
    1079/    1351 : 8D 90 01             STA font_inverted
    1080/    1354 :                      .loop:
    1081/    1354 : 20 B5 0F             JSR ReadKey
    1082/    1357 : C9 0D                CMP #$D
    1083/    1359 : D0 F9                BNE .loop
    1084/    135B : 60                   RTS
    1085/    135C : 60                   RTS
    1086/    135D :                      
    1087/    135D :                     InitForth:
    1088/    135D : A9 00                LDA #$0
    1089/    135F : 8D 31 01             STA input_buff_begin
    1090/    1362 : 8D 32 01             STA input_buff_end
    1091/    1365 : 8D 73 01             STA new_word_len
    1092/    1368 : 60                   RTS
    1093/    1369 :                      
    1094/    1369 :                     special_chars:
    1095/    1369 : 65 22                FCB 'e',$22
    1096/    136B : 20 2E 24 6D          FCB " .$m"
    1097/    136F :                      
    1098/    136F :                     ReadLine:
    1099/    136F : A9 00                LDA #$0
    1100/    1371 : 85 07                STA $7 ;cursor
    1101/    1373 : 85 0A                STA $A ;index
    1102/    1375 : 85 23                STA screen_ptr
    1103/    1377 : A9 AC                LDA #$AC
    1104/    1379 : 85 24                STA screen_ptr+$1
    1105/    137B : 4C 8F 13             JMP .._1716.str_skip
    1106/    137E :                      .._1716.str_addr:
    1107/    137E : 61 20 20 20 20 20    FCB "a               ",$0
                    20 20 20 20 20 20 
                    20 20 20 20 00    
    1108/    138F :                      .._1716.str_skip:
    1109/    138F : A9 7E                LDA # (.._1716.str_addr) # $100
    1110/    1391 : 85 03                STA $3 ;LCD_print.source
    1111/    1393 : A9 13                LDA # (.._1716.str_addr)/$100
    1112/    1395 : 85 04                STA $4 ;LCD_print.source
    1113/    1397 : 20 58 10             JSR LCD_print
    1114/    139A : AD E6 FF             LDA $FFE6
    1115/    139D : 85 08                STA $8 ;cursor_timer
    1116/    139F :                      .loop:
    1117/    139F : A9 00                LDA #$0
    1118/    13A1 : 85 09                STA $9 ;arg
    1119/    13A3 : 20 B5 0F             JSR ReadKey
    1120/    13A6 : D0 03                BNE .key_read
    1121/    13A8 : 4C 88 14             JMP .no_key
    1122/    13AB :                      .key_read:
    1123/    13AB : C9 0D                CMP #$D
    1124/    13AD : D0 0F                BNE .not_enter
    1125/    13AF : A5 0A                LDA $A ;index
    1126/    13B1 : F0 EC                BEQ .loop
    1127/    13B3 : A9 00                LDA #$0
    1128/    13B5 : 8D 31 01             STA input_buff_begin
    1129/    13B8 : A5 0A                LDA $A ;index
    1130/    13BA : 8D 32 01             STA input_buff_end
    1131/    13BD : 60                   RTS
    1132/    13BE :                      .not_enter:
    1133/    13BE : C9 08                CMP #$8
    1134/    13C0 : D0 2F                BNE .not_backspace
    1135/    13C2 : A5 0A                LDA $A ;index
    1136/    13C4 : F0 28                BEQ .backspace_done
    1137/    13C6 : C6 0A                DEC $A ;index
    1138/    13C8 : C9 10                CMP #$10
    1139/    13CA : B0 1C                BCS .backspace_scroll
    1140/    13CC : A9 20                LDA #$20
    1141/    13CE : 85 0F                STA $F ;LCD_char.c_out
    1142/    13D0 : 20 DD 0F             JSR LCD_char
    1143/    13D3 : A5 23                LDA screen_ptr
    1144/    13D5 : 38                   SEC
    1145/    13D6 : E9 20                SBC #$20
    1146/    13D8 : 85 23                STA screen_ptr
    1147/    13DA : 48                   PHA
    1148/    13DB : A9 61                LDA #$61
    1149/    13DD : 85 0F                STA $F ;LCD_char.c_out
    1150/    13DF : 20 DD 0F             JSR LCD_char
    1151/    13E2 : 68                   PLA
    1152/    13E3 : 85 23                STA screen_ptr
    1153/    13E5 : 4C 88 14             JMP .draw_done
    1154/    13E8 :                      .backspace_scroll:
    1155/    13E8 : A4 0A                LDY $A ;index
    1156/    13EA : 88                   DEY
    1157/    13EB : 4C 5B 14             JMP .scroll_buffer
    1158/    13EE :                      .backspace_done:
    1159/    13EE : 4C 88 14             JMP .no_key
    1160/    13F1 :                      .not_backspace:
    1161/    13F1 : A0 00                LDY #$0
    1162/    13F3 :                      .special_loop:
    1163/    13F3 : D9 69 13             CMP special_chars,Y
    1164/    13F6 : D0 0D                BNE .special_next
    1165/    13F8 : 85 09                STA $9 ;arg
    1166/    13FA : C9 6D                CMP #$6D
    1167/    13FC : D0 33                BNE .key_done
    1168/    13FE : A9 63                LDA #$63
    1169/    1400 : 85 09                STA $9 ;arg
    1170/    1402 : 4C 31 14             JMP .key_done
    1171/    1405 :                      .special_next:
    1172/    1405 : C8                   INY
    1173/    1406 : C0 06                CPY #$6
    1174/    1408 : D0 E9                BNE .special_loop
    1175/    140A : C9 30                CMP #$30
    1176/    140C : 90 09                BCC .not_num
    1177/    140E : C9 3A                CMP #$3A
    1178/    1410 : B0 05                BCS .not_num
    1179/    1412 : 85 09                STA $9 ;arg
    1180/    1414 : 4C 31 14             JMP .key_done
    1181/    1417 :                      .not_num:
    1182/    1417 : C9 41                CMP #$41
    1183/    1419 : 90 09                BCC .not_upper
    1184/    141B : C9 5B                CMP #$5B
    1185/    141D : B0 05                BCS .not_upper
    1186/    141F : 85 09                STA $9 ;arg
    1187/    1421 : 4C 31 14             JMP .key_done
    1188/    1424 :                      .not_upper:
    1189/    1424 : C9 61                CMP #$61
    1190/    1426 : 90 09                BCC .not_lower
    1191/    1428 : C9 7B                CMP #$7B
    1192/    142A : B0 05                BCS .not_lower
    1193/    142C : 38                   SEC
    1194/    142D : E9 20                SBC #$20
    1195/    142F : 85 09                STA $9 ;arg
    1196/    1431 :                      .not_lower:
    1197/    1431 :                      .key_done:
    1198/    1431 : A5 09                LDA $9 ;arg
    1199/    1433 : F0 53                BEQ .not_valid
    1200/    1435 : A4 0A                LDY $A ;index
    1201/    1437 : C0 40                CPY #$40
    1202/    1439 : B0 4D                BCS .buffer_full
    1203/    143B : 99 33 01             STA input_buff,Y
    1204/    143E : E6 0A                INC $A ;index
    1205/    1440 : C0 0F                CPY #$F
    1206/    1442 : B0 17                BCS .scroll_buffer
    1207/    1444 : A5 09                LDA $9 ;arg
    1208/    1446 : 85 0F                STA $F ;LCD_char.c_out
    1209/    1448 : 20 DD 0F             JSR LCD_char
    1210/    144B : A5 23                LDA screen_ptr
    1211/    144D : 48                   PHA
    1212/    144E : A9 61                LDA #$61
    1213/    1450 : 85 0F                STA $F ;LCD_char.c_out
    1214/    1452 : 20 DD 0F             JSR LCD_char
    1215/    1455 : 68                   PLA
    1216/    1456 : 85 23                STA screen_ptr
    1217/    1458 : 4C 88 14             JMP .draw_done
    1218/    145B :                      .scroll_buffer:
    1219/    145B : A9 00                LDA #$0
    1220/    145D : 85 23                STA screen_ptr
    1221/    145F : 98                   TYA
    1222/    1460 : 38                   SEC
    1223/    1461 : E9 0E                SBC #$E
    1224/    1463 : 85 0B                STA $B ;str_index
    1225/    1465 :                      .scroll_loop:
    1226/    1465 : A4 0B                LDY $B ;str_index
    1227/    1467 : E6 0B                INC $B ;str_index
    1228/    1469 : B9 33 01             LDA input_buff,Y
    1229/    146C : 85 09                STA $9 ;arg
    1230/    146E : A5 09                LDA $9 ;arg
    1231/    1470 : 85 0F                STA $F ;LCD_char.c_out
    1232/    1472 : 20 DD 0F             JSR LCD_char
    1233/    1475 : A5 0A                LDA $A ;index
    1234/    1477 : C5 0B                CMP $B ;str_index
    1235/    1479 : D0 EA                BNE .scroll_loop
    1236/    147B : A5 23                LDA screen_ptr
    1237/    147D : 48                   PHA
    1238/    147E : A9 61                LDA #$61
    1239/    1480 : 85 0F                STA $F ;LCD_char.c_out
    1240/    1482 : 20 DD 0F             JSR LCD_char
    1241/    1485 : 68                   PLA
    1242/    1486 : 85 23                STA screen_ptr
    1243/    1488 :                      .draw_done:
    1244/    1488 :                      .buffer_full:
    1245/    1488 :                      .not_valid:
    1246/    1488 :                      .no_key:
    1247/    1488 : AD E6 FF             LDA $FFE6
    1248/    148B : C5 08                CMP $8 ;cursor_timer
    1249/    148D : F0 25                BEQ .cursor_done
    1250/    148F : 85 08                STA $8 ;cursor_timer
    1251/    1491 : A5 07                LDA $7 ;cursor
    1252/    1493 : F0 09                BEQ .draw_blank
    1253/    1495 : A9 00                LDA #$0
    1254/    1497 : 85 07                STA $7 ;cursor
    1255/    1499 : A9 20                LDA #$20
    1256/    149B : 4C A4 14             JMP .draw
    1257/    149E :                      .draw_blank:
    1258/    149E : A9 FF                LDA #$FF
    1259/    14A0 : 85 07                STA $7 ;cursor
    1260/    14A2 : A9 61                LDA #$61
    1261/    14A4 :                      .draw:
    1262/    14A4 : 85 09                STA $9 ;arg
    1263/    14A6 : A5 09                LDA $9 ;arg
    1264/    14A8 : 85 0F                STA $F ;LCD_char.c_out
    1265/    14AA : 20 DD 0F             JSR LCD_char
    1266/    14AD : A5 23                LDA screen_ptr
    1267/    14AF : 38                   SEC
    1268/    14B0 : E9 10                SBC #$10
    1269/    14B2 : 85 23                STA screen_ptr
    1270/    14B4 :                      .cursor_done:
    1271/    14B4 : 4C 9F 13             JMP .loop
    1272/    14B7 : 60                   RTS
    1273/    14B8 :                      
    1274/    14B8 :                     LineWord:
    1275/    14B8 : A9 00                LDA #$0
    1276/    14BA : 85 21                STA ret_val
    1277/    14BC : A9 00                LDA #$0
    1278/    14BE : 8D 73 01             STA new_word_len
    1279/    14C1 : AC 31 01             LDY input_buff_begin
    1280/    14C4 : CC 32 01             CPY input_buff_end
    1281/    14C7 : D0 01                BNE .chars_left
    1282/    14C9 : 60                   RTS
    1283/    14CA :                      .chars_left:
    1284/    14CA :                      .loop:
    1285/    14CA : AC 31 01             LDY input_buff_begin
    1286/    14CD : B9 33 01             LDA input_buff,Y
    1287/    14D0 : EE 31 01             INC input_buff_begin
    1288/    14D3 : C9 20                CMP #$20
    1289/    14D5 : D0 06                BNE .not_space
    1290/    14D7 : AD 73 01             LDA new_word_len
    1291/    14DA : F0 14                BEQ .chars_left2
    1292/    14DC : 60                   RTS
    1293/    14DD :                      .not_space:
    1294/    14DD : AC 73 01             LDY new_word_len
    1295/    14E0 : 99 74 01             STA new_word_buff,Y
    1296/    14E3 : C8                   INY
    1297/    14E4 : 8C 73 01             STY new_word_len
    1298/    14E7 : C0 13                CPY #$13
    1299/    14E9 : D0 05                BNE .word_size_good
    1300/    14EB : A9 04                LDA #$4
    1301/    14ED : 85 21                STA ret_val
    1302/    14EF : 60                   RTS
    1303/    14F0 :                      .word_size_good:
    1304/    14F0 :                      .chars_left2:
    1305/    14F0 : AD 31 01             LDA input_buff_begin
    1306/    14F3 : CD 32 01             CMP input_buff_end
    1307/    14F6 : F0 03                BEQ .found
    1308/    14F8 : 4C CA 14             JMP .loop
    1309/    14FB :                      .found:
    1310/    14FB : 60                   RTS
    1311/    14FC : 60                   RTS
    1312/    14FD :                      
    1313/    14FD :                     FindWord:
    1314/    14FD : A9 E2                LDA # (FORTH_WORDS) # $100
    1315/    14FF : 85 21                STA ret_val
    1316/    1501 : A9 17                LDA # (FORTH_WORDS)/$100
    1317/    1503 : 85 22                STA ret_val+$1
    1318/    1505 :                      .loop:
    1319/    1505 : A0 00                LDY #$0
    1320/    1507 : B1 21                LDA (ret_val),Y
    1321/    1509 : CD 73 01             CMP new_word_len
    1322/    150C : D0 11                BNE .loop_next
    1323/    150E : C8                   INY
    1324/    150F :                      .str_loop:
    1325/    150F : B1 21                LDA (ret_val),Y
    1326/    1511 : D9 73 01             CMP new_word_buff-$1,Y
    1327/    1514 : D0 09                BNE .no_match
    1328/    1516 : CC 73 01             CPY new_word_len
    1329/    1519 : F0 1C                BEQ .word_found
    1330/    151B : C8                   INY
    1331/    151C : 4C 0F 15             JMP .str_loop
    1332/    151F :                      .no_match:
    1333/    151F :                      .loop_next:
    1334/    151F : A0 00                LDY #$0
    1335/    1521 : B1 21                LDA (ret_val),Y
    1336/    1523 : A8                   TAY
    1337/    1524 : C8                   INY
    1338/    1525 : B1 21                LDA (ret_val),Y
    1339/    1527 : 48                   PHA
    1340/    1528 : C8                   INY
    1341/    1529 : B1 21                LDA (ret_val),Y
    1342/    152B : 85 22                STA ret_val+$1
    1343/    152D : 68                   PLA
    1344/    152E : 85 21                STA ret_val
    1345/    1530 : 05 22                ORA ret_val+$1
    1346/    1532 : D0 D1                BNE .loop
    1347/    1534 : 85 21                STA ret_val
    1348/    1536 : 60                   RTS
    1349/    1537 :                      .word_found:
    1350/    1537 : A0 00                LDY #$0
    1351/    1539 : B1 21                LDA (ret_val),Y
    1352/    153B : A8                   TAY
    1353/    153C : C8                   INY
    1354/    153D : C8                   INY
    1355/    153E : C8                   INY
    1356/    153F : B1 21                LDA (ret_val),Y
    1357/    1541 : 85 21                STA ret_val
    1358/    1543 : 60                   RTS
    1359/    1544 :                      
    1360/    1544 :                     CheckData:
    1361/    1544 : A9 04                LDA #$4
    1362/    1546 : 8D 87 01             STA new_stack_item
    1363/    1549 : AD 73 01             LDA new_word_len
    1364/    154C : D0 01                BNE .not_zero_len
    1365/    154E : 60                   RTS
    1366/    154F :                      .not_zero_len:
    1367/    154F : A0 08                LDY #$8
    1368/    1551 : A9 00                LDA #$0
    1369/    1553 :                      .zero_loop:
    1370/    1553 : 99 87 01             STA new_stack_item,Y
    1371/    1556 : 88                   DEY
    1372/    1557 : D0 FA                BNE .zero_loop
    1373/    1559 : A0 00                LDY #$0
    1374/    155B : AD 74 01             LDA new_word_buff
    1375/    155E : C9 22                CMP #$22
    1376/    1560 : D0 2E                BNE .not_string
    1377/    1562 : AD 73 01             LDA new_word_len
    1378/    1565 : C9 01                CMP #$1
    1379/    1567 : D0 01                BNE .not_single_quote
    1380/    1569 : 60                   RTS
    1381/    156A :                      .not_single_quote:
    1382/    156A : CE 73 01             DEC new_word_len
    1383/    156D :                      .loop_str:
    1384/    156D : B9 75 01             LDA new_word_buff+$1,y
    1385/    1570 : C9 22                CMP #$22
    1386/    1572 : F0 10                BEQ .str_done
    1387/    1574 : C0 08                CPY #$8
    1388/    1576 : F0 0B                BEQ .string_too_long
    1389/    1578 : 99 88 01             STA new_stack_item+$1,Y
    1390/    157B : C8                   INY
    1391/    157C : CC 73 01             CPY new_word_len
    1392/    157F : F0 02                BEQ .string_unterminated
    1393/    1581 : D0 EA                BNE .loop_str
    1394/    1583 :                      .string_too_long:
    1395/    1583 :                      .string_unterminated:
    1396/    1583 : 60                   RTS
    1397/    1584 :                      .str_done:
    1398/    1584 : C8                   INY
    1399/    1585 : CC 73 01             CPY new_word_len
    1400/    1588 : D0 05                BNE .str_return
    1401/    158A : A9 02                LDA #$2
    1402/    158C : 8D 87 01             STA new_stack_item
    1403/    158F :                      .str_return:
    1404/    158F : 60                   RTS
    1405/    1590 :                      .not_string:
    1406/    1590 : C9 24                CMP #$24
    1407/    1592 : D0 4F                BNE .not_hex
    1408/    1594 : AD 73 01             LDA new_word_len
    1409/    1597 : C9 01                CMP #$1
    1410/    1599 : F0 47                BEQ .hex_error
    1411/    159B : C9 06                CMP #$6
    1412/    159D : B0 43                BCS .hex_error
    1413/    159F : CE 73 01             DEC new_word_len
    1414/    15A2 : A0 00                LDY #$0
    1415/    15A4 :                      .loop_hex:
    1416/    15A4 : B9 75 01             LDA new_word_buff+$1,Y
    1417/    15A7 : C9 30                CMP #$30
    1418/    15A9 : 90 37                BCC .hex_error
    1419/    15AB : C9 3A                CMP #$3A
    1420/    15AD : B0 0F                BCS .not_digit
    1421/    15AF : 38                   SEC
    1422/    15B0 : E9 30                SBC #$30
    1423/    15B2 : 20 50 17             JSR .hex_rotate
    1424/    15B5 : 0D 88 01             ORA new_stack_item+$1
    1425/    15B8 : 8D 88 01             STA new_stack_item+$1
    1426/    15BB : 4C D2 15             JMP .hex_char_next
    1427/    15BE :                      .not_digit:
    1428/    15BE : C9 41                CMP #$41
    1429/    15C0 : 90 20                BCC .hex_error
    1430/    15C2 : C9 47                CMP #$47
    1431/    15C4 : B0 1C                BCS .hex_error
    1432/    15C6 : 38                   SEC
    1433/    15C7 : E9 37                SBC #$37
    1434/    15C9 : 20 50 17             JSR .hex_rotate
    1435/    15CC : 0D 88 01             ORA new_stack_item+$1
    1436/    15CF : 8D 88 01             STA new_stack_item+$1
    1437/    15D2 :                      .hex_char_next:
    1438/    15D2 : C8                   INY
    1439/    15D3 : CC 73 01             CPY new_word_len
    1440/    15D6 : F0 04                BEQ .hex_done
    1441/    15D8 : C0 04                CPY #$4
    1442/    15DA : D0 C8                BNE .loop_hex
    1443/    15DC :                      .hex_done:
    1444/    15DC : A9 03                LDA #$3
    1445/    15DE : 8D 87 01             STA new_stack_item
    1446/    15E1 : 60                   RTS
    1447/    15E2 :                      .hex_error:
    1448/    15E2 : 60                   RTS
    1449/    15E3 :                      .not_hex:
    1450/    15E3 : A9 06                LDA #$6
    1451/    15E5 : 85 0C                STA $C ;index
    1452/    15E7 : A9 00                LDA #$0
    1453/    15E9 : 85 0D                STA $D ;which_digit
    1454/    15EB : 85 0E                STA $E ;negative
    1455/    15ED : 85 0F                STA $F ;exp_negative
    1456/    15EF : 85 10                STA $10 ;exp_count
    1457/    15F1 : 85 14                STA $14 ;digit_count
    1458/    15F3 : 85 13                STA $13 ;nonzero_found
    1459/    15F5 : 85 12                STA $12 ;dec_found
    1460/    15F7 : 85 11                STA $11 ;exp_found
    1461/    15F9 : AD 74 01             LDA new_word_buff
    1462/    15FC : C9 63                CMP #$63
    1463/    15FE : D0 08                BNE .float_no_neg
    1464/    1600 : A9 FF                LDA #$FF
    1465/    1602 : 85 0E                STA $E ;negative
    1466/    1604 : C8                   INY
    1467/    1605 : 4C 0D 16             JMP .float_first_done
    1468/    1608 :                      .float_no_neg:
    1469/    1608 : C9 65                CMP #$65
    1470/    160A : D0 01                BNE .float_not_exp
    1471/    160C : 60                   RTS
    1472/    160D :                      .float_not_exp:
    1473/    160D :                      .float_first_done:
    1474/    160D :                      .loop_float:
    1475/    160D : B9 74 01             LDA new_word_buff,Y
    1476/    1610 : 20 60 17             JSR .digit
    1477/    1613 : 90 65                BCC .float_not_digit
    1478/    1615 : 48                   PHA
    1479/    1616 : A5 13                LDA $13 ;nonzero_found
    1480/    1618 : D0 1C                BNE .digit_good
    1481/    161A : 68                   PLA
    1482/    161B : 48                   PHA
    1483/    161C : F0 06                BEQ .digit_zero
    1484/    161E : A9 FF                LDA #$FF
    1485/    1620 : 85 13                STA $13 ;nonzero_found
    1486/    1622 : D0 12                BNE .digit_good
    1487/    1624 :                      .digit_zero:
    1488/    1624 : 68                   PLA
    1489/    1625 : A5 11                LDA $11 ;exp_found
    1490/    1627 : D0 23                BNE .float_next
    1491/    1629 : A5 12                LDA $12 ;dec_found
    1492/    162B : D0 04                BNE .dec_exp_count
    1493/    162D : A9 00                LDA #$0
    1494/    162F : 85 10                STA $10 ;exp_count
    1495/    1631 :                      .dec_exp_count:
    1496/    1631 : C6 10                DEC $10 ;exp_count
    1497/    1633 : 4C 4C 16             JMP .float_next
    1498/    1636 :                      .digit_good:
    1499/    1636 : A5 11                LDA $11 ;exp_found
    1500/    1638 : D0 1B                BNE .exp_digit
    1501/    163A : A5 14                LDA $14 ;digit_count
    1502/    163C : C9 0C                CMP #$C
    1503/    163E : D0 02                BNE .digit_ok
    1504/    1640 : 68                   PLA
    1505/    1641 : 60                   RTS
    1506/    1642 :                      .digit_ok:
    1507/    1642 : A5 12                LDA $12 ;dec_found
    1508/    1644 : D0 02                BNE .no_dec_yet
    1509/    1646 : E6 10                INC $10 ;exp_count
    1510/    1648 :                      .no_dec_yet:
    1511/    1648 : 68                   PLA
    1512/    1649 : 20 6D 17             JSR .add_digit
    1513/    164C :                      .float_next:
    1514/    164C : C8                   INY
    1515/    164D : CC 73 01             CPY new_word_len
    1516/    1650 : F0 6B                BEQ .float_done
    1517/    1652 : 4C 0D 16             JMP .loop_float
    1518/    1655 :                      .exp_digit:
    1519/    1655 : A5 14                LDA $14 ;digit_count
    1520/    1657 : C9 03                CMP #$3
    1521/    1659 : D0 02                BNE .exp_digit_ok
    1522/    165B : 68                   PLA
    1523/    165C : 60                   RTS
    1524/    165D :                      .exp_digit_ok:
    1525/    165D : 68                   PLA
    1526/    165E : 84 0B                STY $B ;y_buff
    1527/    1660 : A0 04                LDY #$4
    1528/    1662 :                      .exp_loop:
    1529/    1662 : 0E 8E 01             ASL new_stack_item+$7
    1530/    1665 : 2E 8F 01             ROL new_stack_item+$8
    1531/    1668 : 88                   DEY
    1532/    1669 : D0 F7                BNE .exp_loop
    1533/    166B : A4 0B                LDY $B ;y_buff
    1534/    166D : 0D 8E 01             ORA new_stack_item+$7
    1535/    1670 : 8D 8E 01             STA new_stack_item+$7
    1536/    1673 : E6 0C                INC $C ;index
    1537/    1675 : E6 14                INC $14 ;digit_count
    1538/    1677 : 4C 4C 16             JMP .float_next
    1539/    167A :                      .float_not_digit:
    1540/    167A : C9 2E                CMP #$2E
    1541/    167C : D0 10                BNE .not_decimal_point
    1542/    167E : A5 12                LDA $12 ;dec_found
    1543/    1680 : F0 01                BEQ .decimal_good
    1544/    1682 : 60                   RTS
    1545/    1683 :                      .decimal_good:
    1546/    1683 : A5 11                LDA $11 ;exp_found
    1547/    1685 : F0 01                BEQ .exp_good
    1548/    1687 : 60                   RTS
    1549/    1688 :                      .exp_good:
    1550/    1688 : A9 FF                LDA #$FF
    1551/    168A : 85 12                STA $12 ;dec_found
    1552/    168C : D0 BE                BNE .float_next
    1553/    168E :                      .not_decimal_point:
    1554/    168E : C9 65                CMP #$65
    1555/    1690 : D0 15                BNE .not_exp
    1556/    1692 : A5 11                LDA $11 ;exp_found
    1557/    1694 : F0 01                BEQ .first_exp
    1558/    1696 : 60                   RTS
    1559/    1697 :                      .first_exp:
    1560/    1697 : A9 00                LDA #$0
    1561/    1699 : 85 0C                STA $C ;index
    1562/    169B : 85 0D                STA $D ;which_digit
    1563/    169D : 85 14                STA $14 ;digit_count
    1564/    169F : 85 13                STA $13 ;nonzero_found
    1565/    16A1 : A9 FF                LDA #$FF
    1566/    16A3 : 85 11                STA $11 ;exp_found
    1567/    16A5 : D0 A5                BNE .float_next
    1568/    16A7 :                      .not_exp:
    1569/    16A7 : C9 63                CMP #$63
    1570/    16A9 : D0 11                BNE .not_minus
    1571/    16AB : A5 11                LDA $11 ;exp_found
    1572/    16AD : 49 FF                EOR #$FF
    1573/    16AF : 05 0C                ORA $C ;index
    1574/    16B1 : 05 0F                ORA $F ;exp_negative
    1575/    16B3 : F0 01                BEQ .minus_good
    1576/    16B5 : 60                   RTS
    1577/    16B6 :                      .minus_good:
    1578/    16B6 : A9 FF                LDA #$FF
    1579/    16B8 : 85 0F                STA $F ;exp_negative
    1580/    16BA : D0 90                BNE .float_next
    1581/    16BC :                      .not_minus:
    1582/    16BC : 60                   RTS
    1583/    16BD :                      .float_done:
    1584/    16BD : A5 0F                LDA $F ;exp_negative
    1585/    16BF : F0 0F                BEQ .exp_positive
    1586/    16C1 : A9 8E                LDA # (new_stack_item+$7) # $100
    1587/    16C3 : 85 17                STA $17 ;BCD_Reverse.source
    1588/    16C5 : A9 01                LDA # (new_stack_item+$7)/$100
    1589/    16C7 : 85 18                STA $18 ;BCD_Reverse.source
    1590/    16C9 : A9 02                LDA #$2
    1591/    16CB : 85 19                STA $19 ;BCD_Reverse.count
    1592/    16CD : 20 7D 10             JSR BCD_Reverse
    1593/    16D0 :                      .exp_positive:
    1594/    16D0 : F8                   SED
    1595/    16D1 : A9 00                LDA #$0
    1596/    16D3 : A4 10                LDY $10 ;exp_count
    1597/    16D5 : 30 0C                BMI .exp_count_neg
    1598/    16D7 : 88                   DEY
    1599/    16D8 : F0 0F                BEQ .exp_count_done
    1600/    16DA :                      .exp_pos_loop:
    1601/    16DA : 18                   CLC
    1602/    16DB : 69 01                ADC #$1
    1603/    16DD : 88                   DEY
    1604/    16DE : D0 FA                BNE .exp_pos_loop
    1605/    16E0 : 4C E9 16             JMP .exp_count_done
    1606/    16E3 :                      .exp_count_neg:
    1607/    16E3 :                      .exp_min_loop:
    1608/    16E3 : 38                   SEC
    1609/    16E4 : E9 01                SBC #$1
    1610/    16E6 : C8                   INY
    1611/    16E7 : D0 FA                BNE .exp_min_loop
    1612/    16E9 :                      .exp_count_done:
    1613/    16E9 : 85 10                STA $10 ;exp_count
    1614/    16EB : C9 50                CMP #$50
    1615/    16ED : B0 0F                BCS .exp_count_neg2
    1616/    16EF : 18                   CLC
    1617/    16F0 : 6D 8E 01             ADC new_stack_item+$7
    1618/    16F3 : 8D 8E 01             STA new_stack_item+$7
    1619/    16F6 : A9 00                LDA #$0
    1620/    16F8 : 6D 8F 01             ADC new_stack_item+$8
    1621/    16FB : 4C 0A 17             JMP .exp_count_done2
    1622/    16FE :                      .exp_count_neg2:
    1623/    16FE : 18                   CLC
    1624/    16FF : 6D 8E 01             ADC new_stack_item+$7
    1625/    1702 : 8D 8E 01             STA new_stack_item+$7
    1626/    1705 : A9 00                LDA #$0
    1627/    1707 : ED 8F 01             SBC new_stack_item+$8
    1628/    170A :                      .exp_count_done2:
    1629/    170A : 8D 8F 01             STA new_stack_item+$8
    1630/    170D : D8                   CLD
    1631/    170E : A9 00                LDA #$0
    1632/    1710 : AC 8F 01             LDY new_stack_item+$8
    1633/    1713 : C0 50                CPY #$50
    1634/    1715 : 90 11                BCC .exp_positive2
    1635/    1717 : A9 8E                LDA # (new_stack_item+$7) # $100
    1636/    1719 : 85 17                STA $17 ;BCD_Reverse.source
    1637/    171B : A9 01                LDA # (new_stack_item+$7)/$100
    1638/    171D : 85 18                STA $18 ;BCD_Reverse.source
    1639/    171F : A9 02                LDA #$2
    1640/    1721 : 85 19                STA $19 ;BCD_Reverse.count
    1641/    1723 : 20 7D 10             JSR BCD_Reverse
    1642/    1726 : A9 FF                LDA #$FF
    1643/    1728 :                      .exp_positive2:
    1644/    1728 : 85 0F                STA $F ;exp_negative
    1645/    172A : AD 8F 01             LDA new_stack_item+$8
    1646/    172D : C9 10                CMP #$10
    1647/    172F : D0 01                BNE .no_exp_overflow
    1648/    1731 : 60                   RTS
    1649/    1732 :                      .no_exp_overflow:
    1650/    1732 : A5 0F                LDA $F ;exp_negative
    1651/    1734 : F0 08                BEQ .exp_no_neg_bit
    1652/    1736 : AD 8F 01             LDA new_stack_item+$8
    1653/    1739 : 09 40                ORA #$40
    1654/    173B : 8D 8F 01             STA new_stack_item+$8
    1655/    173E :                      .exp_no_neg_bit:
    1656/    173E : A5 0E                LDA $E ;negative
    1657/    1740 : F0 08                BEQ .positive
    1658/    1742 : AD 8F 01             LDA new_stack_item+$8
    1659/    1745 : 09 80                ORA #$80
    1660/    1747 : 8D 8F 01             STA new_stack_item+$8
    1661/    174A :                      .positive:
    1662/    174A : A9 01                LDA #$1
    1663/    174C : 8D 87 01             STA new_stack_item
    1664/    174F : 60                   RTS
    1665/    1750 :                      .hex_rotate:
    1666/    1750 : 84 0B                STY $B ;y_buff
    1667/    1752 : A0 04                LDY #$4
    1668/    1754 :                      .hex_rot_loop:
    1669/    1754 : 0E 88 01             ASL new_stack_item+$1
    1670/    1757 : 2E 89 01             ROL new_stack_item+$2
    1671/    175A : 88                   DEY
    1672/    175B : D0 F7                BNE .hex_rot_loop
    1673/    175D : A4 0B                LDY $B ;y_buff
    1674/    175F : 60                   RTS
    1675/    1760 :                      .digit:
    1676/    1760 : C9 3A                CMP #$3A
    1677/    1762 : B0 07                BCS .is_digit_no
    1678/    1764 : C9 30                CMP #$30
    1679/    1766 : 90 03                BCC .is_digit_no
    1680/    1768 : E9 30                SBC #$30
    1681/    176A : 60                   RTS
    1682/    176B :                      .is_digit_no:
    1683/    176B : 18                   CLC
    1684/    176C : 60                   RTS
    1685/    176D :                      .add_digit:
    1686/    176D : 48                   PHA
    1687/    176E : 84 0B                STY $B ;y_buff
    1688/    1770 : A4 0C                LDY $C ;index
    1689/    1772 : E6 14                INC $14 ;digit_count
    1690/    1774 : A5 0D                LDA $D ;which_digit
    1691/    1776 : 49 FF                EOR #$FF
    1692/    1778 : 85 0D                STA $D ;which_digit
    1693/    177A : F0 0B                BEQ .second_digit
    1694/    177C : 68                   PLA
    1695/    177D : 0A                   ASL
    1696/    177E : 0A                   ASL
    1697/    177F : 0A                   ASL
    1698/    1780 : 0A                   ASL
    1699/    1781 : 99 87 01             STA new_stack_item,Y
    1700/    1784 : A4 0B                LDY $B ;y_buff
    1701/    1786 : 60                   RTS
    1702/    1787 :                      .second_digit:
    1703/    1787 : 68                   PLA
    1704/    1788 : 19 87 01             ORA new_stack_item,Y
    1705/    178B : 99 87 01             STA new_stack_item,Y
    1706/    178E : C6 0C                DEC $C ;index
    1707/    1790 : A4 0B                LDY $B ;y_buff
    1708/    1792 : 60                   RTS
    1709/    1793 : 60                   RTS
    1710/    1794 :                      
    1711/    1794 :                     ExecToken:
    1712/    1794 : A9 00                LDA #$0
    1713/    1796 : 85 21                STA ret_val
    1714/    1798 : A4 03                LDY $3 ;token
    1715/    179A : B9 98 18             LDA JUMP_TABLE,Y
    1716/    179D : 85 06                STA $6 ;address
    1717/    179F : B9 99 18             LDA JUMP_TABLE+$1,Y
    1718/    17A2 : 85 07                STA $7 ;address
    1719/    17A4 : A0 00                LDY #$0
    1720/    17A6 : B1 06                LDA ($6),Y ;address
    1721/    17A8 : F0 27                BEQ .no_flags
    1722/    17AA : 85 04                STA $4 ;flags
    1723/    17AC : 29 03                AND #$3
    1724/    17AE : 85 05                STA $5 ;temp
    1725/    17B0 : AD 91 01             LDA stack_count
    1726/    17B3 : C5 05                CMP $5 ;temp
    1727/    17B5 : B0 05                BCS .no_underflow
    1728/    17B7 : A9 0A                LDA #$A
    1729/    17B9 : 85 21                STA ret_val
    1730/    17BB : 60                   RTS
    1731/    17BC :                      .no_underflow:
    1732/    17BC : A5 04                LDA $4 ;flags
    1733/    17BE : 29 04                AND #$4
    1734/    17C0 : F0 0F                BEQ .no_add_item
    1735/    17C2 : A9 07                LDA #$7
    1736/    17C4 : CD 91 01             CMP stack_count
    1737/    17C7 : B0 05                BCS .no_overflow
    1738/    17C9 : A9 08                LDA #$8
    1739/    17CB : 85 21                STA ret_val
    1740/    17CD : 60                   RTS
    1741/    17CE :                      .no_overflow:
    1742/    17CE : 20 D9 17             JSR StackAddItem
    1743/    17D1 :                      .no_add_item:
    1744/    17D1 :                      .no_flags:
    1745/    17D1 : A5 07                LDA $7 ;address
    1746/    17D3 : 48                   PHA
    1747/    17D4 : A5 06                LDA $6 ;address
    1748/    17D6 : 48                   PHA
    1749/    17D7 : 60                   RTS
    1750/    17D8 : 60                   RTS
    1751/    17D9 :                      
    1752/    17D9 :                     StackAddItem:
    1753/    17D9 : 8A                   TXA
    1754/    17DA : 38                   SEC
    1755/    17DB : E9 09                SBC #$9
    1756/    17DD : AA                   TAX
    1757/    17DE : EE 91 01             INC stack_count
    1758/    17E1 : 60                   RTS
    1759/    17E2 :                      
    1760/    17E2 :                     FORTH_WORDS:
    1761/    17E2 :                      
    1762/    17E2 :                     WORD_DUP:
    1763/    17E2 : 03 44 55 50          FCB $3,"DUP"
    1764/    17E6 : F9 17                FDB WORD_SWAP
    1765/    17E8 : 02                   FCB $2
    1766/    17E9 :                      
    1767/    17E9 :                     CODE_DUP:
    1768/    17E9 : 05                   FCB $5
    1769/    17EA : A0 09                LDY #$9
    1770/    17EC : 8A                   TXA
    1771/    17ED : 48                   PHA
    1772/    17EE :                      .dup_loop:
    1773/    17EE : B5 09                LDA $9,X
    1774/    17F0 : 95 00                STA $0,X
    1775/    17F2 : E8                   INX
    1776/    17F3 : 88                   DEY
    1777/    17F4 : D0 F8                BNE .dup_loop
    1778/    17F6 : 68                   PLA
    1779/    17F7 : AA                   TAX
    1780/    17F8 : 60                   RTS
    1781/    17F9 :                      
    1782/    17F9 :                     WORD_SWAP:
    1783/    17F9 : 04 53 57 41 50       FCB $4,"SWAP"
    1784/    17FE : 17 18                FDB WORD_DROP
    1785/    1800 : 04                   FCB $4
    1786/    1801 :                      
    1787/    1801 :                     CODE_SWAP:
    1788/    1801 : 02                   FCB $2
    1789/    1802 : A0 09                LDY #$9
    1790/    1804 : 8A                   TXA
    1791/    1805 : 48                   PHA
    1792/    1806 :                      .swap_loop:
    1793/    1806 : B5 09                LDA $9,X
    1794/    1808 : 48                   PHA
    1795/    1809 : B5 00                LDA $0,X
    1796/    180B : 95 09                STA $9,X
    1797/    180D : 68                   PLA
    1798/    180E : 95 00                STA $0,X
    1799/    1810 : E8                   INX
    1800/    1811 : 88                   DEY
    1801/    1812 : D0 F2                BNE .swap_loop
    1802/    1814 : 68                   PLA
    1803/    1815 : AA                   TAX
    1804/    1816 : 60                   RTS
    1805/    1817 :                      
    1806/    1817 :                     WORD_DROP:
    1807/    1817 : 04 44 52 4F 50       FCB $4,"DROP"
    1808/    181C : 29 18                FDB WORD_OVER
    1809/    181E : 06                   FCB $6
    1810/    181F :                      
    1811/    181F :                     CODE_DROP:
    1812/    181F : 01                   FCB $1
    1813/    1820 : 8A                   TXA
    1814/    1821 : 18                   CLC
    1815/    1822 : 69 09                ADC #$9
    1816/    1824 : AA                   TAX
    1817/    1825 : CE 91 01             DEC stack_count
    1818/    1828 : 60                   RTS
    1819/    1829 :                      
    1820/    1829 :                     WORD_OVER:
    1821/    1829 : 04 4F 56 45 52       FCB $4,"OVER"
    1822/    182E : 41 18                FDB WORD_ROT
    1823/    1830 : 08                   FCB $8
    1824/    1831 :                      
    1825/    1831 :                     CODE_OVER:
    1826/    1831 : 06                   FCB $6
    1827/    1832 : A0 09                LDY #$9
    1828/    1834 : 8A                   TXA
    1829/    1835 : 48                   PHA
    1830/    1836 :                      .over_loop:
    1831/    1836 : B5 12                LDA $12,X
    1832/    1838 : 95 00                STA $0,X
    1833/    183A : E8                   INX
    1834/    183B : 88                   DEY
    1835/    183C : D0 F8                BNE .over_loop
    1836/    183E : 68                   PLA
    1837/    183F : AA                   TAX
    1838/    1840 : 60                   RTS
    1839/    1841 :                      
    1840/    1841 :                     WORD_ROT:
    1841/    1841 : 03 52 4F 54          FCB $3,"ROT"
    1842/    1845 : 64 18                FDB WORD_MIN_ROT
    1843/    1847 : 0A                   FCB $A
    1844/    1848 :                      
    1845/    1848 :                     CODE_ROT:
    1846/    1848 : 03                   FCB $3
    1847/    1849 : A0 09                LDY #$9
    1848/    184B : 8A                   TXA
    1849/    184C : 48                   PHA
    1850/    184D :                      .rot_loop:
    1851/    184D : B5 12                LDA $12,X
    1852/    184F : 48                   PHA
    1853/    1850 : B5 09                LDA $9,X
    1854/    1852 : 48                   PHA
    1855/    1853 : B5 00                LDA $0,X
    1856/    1855 : 95 09                STA $9,X
    1857/    1857 : 68                   PLA
    1858/    1858 : 95 12                STA $12,X
    1859/    185A : 68                   PLA
    1860/    185B : 95 00                STA $0,X
    1861/    185D : E8                   INX
    1862/    185E : 88                   DEY
    1863/    185F : D0 EC                BNE .rot_loop
    1864/    1861 : 68                   PLA
    1865/    1862 : AA                   TAX
    1866/    1863 : 60                   RTS
    1867/    1864 :                      
    1868/    1864 :                     WORD_MIN_ROT:
    1869/    1864 : 04 2D 52 4F 54       FCB $4,"-ROT"
    1870/    1869 : 88 18                FDB WORD_CLEAR
    1871/    186B : 0C                   FCB $C
    1872/    186C :                      
    1873/    186C :                     CODE_MIN_ROT:
    1874/    186C : 03                   FCB $3
    1875/    186D : A0 09                LDY #$9
    1876/    186F : 8A                   TXA
    1877/    1870 : 48                   PHA
    1878/    1871 :                      .min_rot_loop:
    1879/    1871 : B5 12                LDA $12,X
    1880/    1873 : 48                   PHA
    1881/    1874 : B5 09                LDA $9,X
    1882/    1876 : 48                   PHA
    1883/    1877 : B5 00                LDA $0,X
    1884/    1879 : 95 12                STA $12,X
    1885/    187B : 68                   PLA
    1886/    187C : 95 00                STA $0,X
    1887/    187E : 68                   PLA
    1888/    187F : 95 09                STA $9,X
    1889/    1881 : E8                   INX
    1890/    1882 : 88                   DEY
    1891/    1883 : D0 EC                BNE .min_rot_loop
    1892/    1885 : 68                   PLA
    1893/    1886 : AA                   TAX
    1894/    1887 : 60                   RTS
    1895/    1888 :                      
    1896/    1888 :                     WORD_CLEAR:
    1897/    1888 : 05 43 4C 45 41 52    FCB $5,"CLEAR"
    1898/    188E : 00 00                FDB $0
    1899/    1890 : 0E                   FCB $E
    1900/    1891 :                      
    1901/    1891 :                     CODE_CLEAR:
    1902/    1891 : 00                   FCB $0
    1903/    1892 : A2 00                LDX #$0
    1904/    1894 : 8E 91 01             STX stack_count
    1905/    1897 : 60                   RTS
    1906/    1898 :                      
    1907/    1898 :                     JUMP_TABLE:
    1908/    1898 : 00 00                FDB $0
    1909/    189A : E9 17                FDB CODE_DUP
    1910/    189C : 01 18                FDB CODE_SWAP
    1911/    189E : 1F 18                FDB CODE_DROP
    1912/    18A0 : 31 18                FDB CODE_OVER
    1913/    18A2 : 48 18                FDB CODE_ROT
    1914/    18A4 : 6C 18                FDB CODE_MIN_ROT
    1915/    18A6 : 91 18                FDB CODE_CLEAR
    1916/    18A8 :                      
    1917/    18A8 :                     main:
    1918/    18A8 : A2 2F                LDX #$2F
    1919/    18AA : 9A                   TXS
    1920/    18AB : 20 9E 0F             JSR setup
    1921/    18AE : 20 A0 0C             JSR tests
    1922/    18B1 :                      .input_loop:
    1923/    18B1 : 20 EF 11             JSR DrawStack
    1924/    18B4 : 20 6F 13             JSR ReadLine
    1925/    18B7 :                      .process_loop:
    1926/    18B7 : 20 B8 14             JSR LineWord
    1927/    18BA : AD 73 01             LDA new_word_len
    1928/    18BD : F0 F2                BEQ .input_loop
    1929/    18BF : 20 FD 14             JSR FindWord
    1930/    18C2 : A5 21                LDA ret_val
    1931/    18C4 : F0 1A                BEQ .not_found
    1932/    18C6 : A5 21                LDA ret_val
    1933/    18C8 : 85 03                STA $3 ;ExecToken.token
    1934/    18CA : 20 94 17             JSR ExecToken
    1935/    18CD : A5 21                LDA ret_val
    1936/    18CF : F0 0C                BEQ .no_exec_error
    1937/    18D1 : 85 02                STA $2 ;arg
    1938/    18D3 : A5 02                LDA $2 ;arg
    1939/    18D5 : 85 07                STA $7 ;ErrorMsg.error_code
    1940/    18D7 : 20 E5 12             JSR ErrorMsg
    1941/    18DA : 4C B1 18             JMP .input_loop
    1942/    18DD :                      .no_exec_error:
    1943/    18DD : 4C B7 18             JMP .process_loop
    1944/    18E0 :                      .not_found:
    1945/    18E0 : 20 44 15             JSR CheckData
    1946/    18E3 : AD 87 01             LDA new_stack_item
    1947/    18E6 : C9 04                CMP #$4
    1948/    18E8 : D0 0A                BNE .input_good
    1949/    18EA : A9 02                LDA #$2
    1950/    18EC : 85 07                STA $7 ;ErrorMsg.error_code
    1951/    18EE : 20 E5 12             JSR ErrorMsg
    1952/    18F1 : 4C B1 18             JMP .input_loop
    1953/    18F4 :                      .input_good:
    1954/    18F4 : A9 07                LDA #$7
    1955/    18F6 : CD 91 01             CMP stack_count
    1956/    18F9 : B0 0A                BCS .no_overflow
    1957/    18FB : A9 08                LDA #$8
    1958/    18FD : 85 07                STA $7 ;ErrorMsg.error_code
    1959/    18FF : 20 E5 12             JSR ErrorMsg
    1960/    1902 : 4C B1 18             JMP .input_loop
    1961/    1905 :                      .no_overflow:
    1962/    1905 : 20 D9 17             JSR StackAddItem
    1963/    1908 : 86 00                STX $0 ;dest
    1964/    190A : A9 00                LDA #$0
    1965/    190C : 85 01                STA $1 ;dest
    1966/    190E : A9 87                LDA # (new_stack_item) # $100
    1967/    1910 : 85 0E                STA $E ;MemCopy.source
    1968/    1912 : A9 01                LDA # (new_stack_item)/$100
    1969/    1914 : 85 0F                STA $F ;MemCopy.source
    1970/    1916 : A5 00                LDA $0 ;dest
    1971/    1918 : 85 10                STA $10 ;MemCopy.dest
    1972/    191A : A5 01                LDA $1 ;dest
    1973/    191C : 85 11                STA $11 ;MemCopy.dest
    1974/    191E : A9 09                LDA #$9
    1975/    1920 : 85 12                STA $12 ;MemCopy.count
    1976/    1922 : 20 71 10             JSR MemCopy
    1977/    1925 : 4C B7 18             JMP .process_loop
    1978/    1928 : 60                   RTS
    1979/    1929 :                     
    1980/    1929 :                     
    1981/    1929 : =$1929              EEPROM set *
    1982/    1929 :                     
    1983/    1929 :                     	OUTRADIX 10
    1984/    1929 :                     
    1985/    1929 :                     AddCommas MACRO num
    1986/    1929 :                     comma_ret set "\{num}"
    1987/    1929 :                     	IF num<1000
    1988/    1929 :                     		EXITM
    1989/    1929 :                     	ELSE
    1990/    1929 :                     comma_ret set "\{substr(comma_ret,0,strlen(comma_ret)-3)},\{substr(comma_ret,strlen(comma_ret)-3,strlen(comma_ret))}"
    1991/    1929 :                     	ENDIF
    1992/    1929 :                     	ENDM
    1993/    1929 :                     
    1994/    1929 :                     ;Display memory usage in console
    1995/    1929 :                     ;===============================
 
    1996/    1929 :                     	MESSAGE " "
Memory usage
    1997/    1929 :                     	MESSAGE "Memory usage"
============
    1998/    1929 :                     	MESSAGE "============"
    1999/    1929 : (MACRO)             	AddCommas EEPROM-$900
    1999/    1929 : =4137               comma_ret set "\{EEPROM-$900}"
    1999/    1929 : =>FALSE                     IF EEPROM-$900<1000
    1999/    1929 :                                     EXITM
    1999/    1929 : =>TRUE                      ELSE
    1999/    1929 : =4,137              comma_ret set "\{substr(comma_ret,0,strlen(comma_ret)-3)},\{substr(comma_ret,strlen(comma_ret)-3,strlen(comma_ret))}"
    1999/    1929 : [1999]                      ENDIF
ROM size:	4,137 bytes (70%) of 5.75k bank
    2000/    1929 :                     	MESSAGE "ROM size:	\{comma_ret} bytes (\{100*(EEPROM-$900)/$1700}%) of 5.75k bank"
    2001/    1929 :                     	;AddCommas GENRAM-$200
    2002/    1929 :                     	;MESSAGE "RAM size:	\{comma_ret} bytes (\{100*(GENRAM-$200)/($4000-$200)}%) of 15.8k bank"
    2003/    1929 :                     	;Tell script that prints assembler output to stop outputting
    2004/    1929 :                     	;Eliminates double output (because of multiple passes???)
END
    2005/    1929 :                     	MESSAGE "END"
 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 2 - 9/3/2020 1:20:14


  Symbol Table (* = unused):
  --------------------------

*ARCHITECTURE :  i386-unknown-win32 - |  BCD_Reverse :                 107D C |
 BCD_Reverse.loop :            1082 C | *BIGENDIAN :                      0 - |
*BRANCHEXT :                      0 - | *CASESENSITIVE :                  1 - |
 CODE_CLEAR :                  1891 C |  CODE_DROP :                   181F C |
 CODE_DUP :                    17E9 C |  CODE_DUP.dup_loop :           17EE C |
 CODE_MIN_ROT :                186C C |  CODE_MIN_ROT.min_rot_loop :   1871 C |
 CODE_OVER :                   1831 C |  CODE_OVER.over_loop :         1836 C |
 CODE_ROT :                    1848 C |  CODE_ROT.rot_loop :           184D C |
 CODE_SWAP :                   1801 C |  CODE_SWAP.swap_loop :         1806 C |
*CONSTPI :        3.141592653589793 - |  CheckData :                   1544 C |
 CheckData.add_digit :         176D C |  CheckData.dec_exp_count :     1631 C |
 CheckData.decimal_good :      1683 C |  CheckData.digit :             1760 C |
 CheckData.digit_good :        1636 C |  CheckData.digit_ok :          1642 C |
 CheckData.digit_zero :        1624 C |  CheckData.exp_count_done :    16E9 C |
 CheckData.exp_count_done2 :   170A C |  CheckData.exp_count_neg :     16E3 C |
 CheckData.exp_count_neg2 :    16FE C |  CheckData.exp_digit :         1655 C |
 CheckData.exp_digit_ok :      165D C |  CheckData.exp_good :          1688 C |
 CheckData.exp_loop :          1662 C |  CheckData.exp_min_loop :      16E3 C |
 CheckData.exp_no_neg_bit :    173E C |  CheckData.exp_pos_loop :      16DA C |
 CheckData.exp_positive :      16D0 C |  CheckData.exp_positive2 :     1728 C |
 CheckData.first_exp :         1697 C |  CheckData.float_done :        16BD C |
 CheckData.float_first_done :  160D C |  CheckData.float_next :        164C C |
 CheckData.float_no_neg :      1608 C |  CheckData.float_not_digit :   167A C |
 CheckData.float_not_exp :     160D C |  CheckData.hex_char_next :     15D2 C |
 CheckData.hex_done :          15DC C |  CheckData.hex_error :         15E2 C |
 CheckData.hex_rot_loop :      1754 C |  CheckData.hex_rotate :        1750 C |
 CheckData.is_digit_no :       176B C |  CheckData.loop_float :        160D C |
 CheckData.loop_hex :          15A4 C |  CheckData.loop_str :          156D C |
 CheckData.minus_good :        16B6 C |  CheckData.no_dec_yet :        1648 C |
 CheckData.no_exp_overflow :   1732 C |  CheckData.not_decimal_point : 168E C |
 CheckData.not_digit :         15BE C |  CheckData.not_exp :           16A7 C |
 CheckData.not_hex :           15E3 C |  CheckData.not_minus :         16BC C |
 CheckData.not_single_quote :  156A C |  CheckData.not_string :        1590 C |
 CheckData.not_zero_len :      154F C |  CheckData.positive :          174A C |
 CheckData.second_digit :      1787 C |  CheckData.str_done :          1584 C |
 CheckData.str_return :        158F C |  CheckData.string_too_long :   1583 C |
 CheckData.string_unterminated :                                       1583 C |
 CheckData.zero_loop :         1553 C | *DATE :                    9/3/2020 - |
 DebugText :                    B33 C |  DebugText.done :               B40 C |
 DebugText.loop :               B35 C |  DigitHigh :                   108F C |
 DigitLow :                    10A2 C |  DrawFloat :                   10B3 C |
 DrawFloat.loop :              1101 C |  DrawFloat.positive :          10DA C |
 DrawFloat.positive_e :        112E C |  DrawHex :                     1195 C |
 DrawStack :                   11EF C |  DrawStack.._1436.str_addr :   11FF C |
 DrawStack.._1436.str_skip :   1203 C |  DrawStack.item_done :         1272 C |
 DrawStack.loop :              1216 C |  DrawStack.loop_line :         128E C |
 DrawStack.no_item :           1272 C |  DrawStack.not_float :         124E C |
 DrawStack.not_hex :           1272 C |  DrawStack.not_str :           1260 C |
 DrawString :                  11C5 C |  DrawString.done :             11E7 C |
 DrawString.loop :             11D0 C |  EEPROM :                      1929 - |
 ERROR_MSG_INPUT :             129A C |  ERROR_MSG_STACK_OVERFLOW :    12C1 C |
 ERROR_MSG_STACK_UNDERFLOW :   12CE C |  ERROR_MSG_STRING :            12B4 C |
 ERROR_MSG_WORD_TOO_LONG :     12A7 C |  ERROR_TABLE :                 12DB C |
 ErrorMsg :                    12E5 C |  ErrorMsg.._1611.str_addr :    12FC C |
 ErrorMsg.._1611.str_skip :    1309 C |  ErrorMsg.._1665.str_addr :    1337 C |
 ErrorMsg.._1665.str_skip :    1344 C |  ErrorMsg.loop :               1354 C |
 ExecToken :                   1794 C |  ExecToken.no_add_item :       17D1 C |
 ExecToken.no_flags :          17D1 C |  ExecToken.no_overflow :       17CE C |
 ExecToken.no_underflow :      17BC C | *FALSE :                          0 - |
 FORTH_WORDS :                 17E2 C | *FULLPMMU :                       1 - |
 FindWord :                    14FD C |  FindWord.loop :               1505 C |
 FindWord.loop_next :          151F C |  FindWord.no_match :           151F C |
 FindWord.str_loop :           150F C |  FindWord.word_found :         1537 C |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
 HexHigh :                     1159 C |  HexHigh.done :                1170 C |
 HexHigh.print_digit :         116B C |  HexLow :                      1178 C |
 HexLow.done :                 118D C |  HexLow.print_digit :          1188 C |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      0 - | *InitForth :                   135D C |
 InputTest :                    B4B C |  InputTest.._102.str_addr :     BEF C |
 InputTest.._102.str_skip :     BFD C |  InputTest.._154.str_addr :     C16 C |
 InputTest.._154.str_skip :     C26 C |  InputTest.._179.str_addr :     C62 C |
 InputTest.._179.str_skip :     C6A C |  InputTest.._203.str_addr :     C81 C |
 InputTest.._203.str_skip :     C8C C |  InputTest.._224.no_carry :     C9F C |
 InputTest.._54.str_addr :      BB6 C |  InputTest.._54.str_skip :      BBE C |
 InputTest.._78.str_addr :      BD5 C |  InputTest.._78.str_skip :      BE1 C |
 InputTest.check_loop :         B6A C |  InputTest.continue :           BAD C |
 InputTest.done :               C5F C |  InputTest.fail_done :          C57 C |
 InputTest.fail_loop :          C39 C |  InputTest.failed :             BB3 C |
 InputTest.letter :             B78 C |  InputTest.letter2 :            B8E C |
 InputTest.letter_done :        B7B C |  InputTest.letter_done2 :       B91 C |
 InputTest.loop :               B4D C |  InputTest.loop_done :          B5E C |
 InputTest.not_minus :          B57 C |  JUMP_TABLE :                  1898 C |
 LCD_char :                     FDD C |  LCD_char.._695.skip :          FE6 C |
 LCD_char.._700.skip :          FEE C |  LCD_char.color :              102F C |
 LCD_char.if0 :                 FE7 C |  LCD_char.if1 :                 FEF C |
 LCD_char.loop :               1016 C |  LCD_char.loop.inner :         1027 C |
 LCD_clrscr :                   FB9 C |  LCD_clrscr.loop :              FC9 C |
 LCD_print :                   1058 C |  LCD_print.done :              1070 C |
 LCD_print.loop :              105C C | *LISTON :                         1 - |
 LineWord :                    14B8 C |  LineWord.chars_left :         14CA C |
 LineWord.chars_left2 :        14F0 C |  LineWord.found :              14FB C |
 LineWord.loop :               14CA C |  LineWord.not_space :          14DD C |
 LineWord.word_size_good :     14F0 C | *MACEXP :                         7 - |
*MOMCPU :                      6502 - | *MOMCPUNAME :                  6502 - |
 MemCopy :                     1071 C |  MemCopy.loop :                1073 C |
*NESTMAX :                      100 - | *PACKING :                        0 - |
*PADDING :                        1 - |  R0 :                            25 C |
*R1 :                            2E C | *R2 :                            37 C |
*R3 :                            40 C | *R4 :                            49 C |
*R5 :                            52 C | *R6 :                            5B C |
*R7 :                            64 C | *RELAXED :                        0 - |
 ReadKey :                      FB5 C |  ReadLine :                    136F C |
 ReadLine.._1716.str_addr :    137E C |  ReadLine.._1716.str_skip :    138F C |
 ReadLine.backspace_done :     13EE C |  ReadLine.backspace_scroll :   13E8 C |
 ReadLine.buffer_full :        1488 C |  ReadLine.cursor_done :        14B4 C |
 ReadLine.draw :               14A4 C |  ReadLine.draw_blank :         149E C |
 ReadLine.draw_done :          1488 C |  ReadLine.key_done :           1431 C |
 ReadLine.key_read :           13AB C |  ReadLine.loop :               139F C |
 ReadLine.no_key :             1488 C |  ReadLine.not_backspace :      13F1 C |
 ReadLine.not_enter :          13BE C |  ReadLine.not_lower :          1431 C |
 ReadLine.not_num :            1417 C |  ReadLine.not_upper :          1424 C |
 ReadLine.not_valid :          1488 C |  ReadLine.scroll_buffer :      145B C |
 ReadLine.scroll_loop :        1465 C |  ReadLine.special_loop :       13F3 C |
 ReadLine.special_next :       1405 C | *STACK_END :                     6D C |
 StackAddItem :                17D9 C | *TIME :                     1:20:14 - |
*TRUE :                           1 - | *VERSION :                     142F - |
 WORD_CLEAR :                  1888 C |  WORD_DROP :                   1817 C |
*WORD_DUP :                    17E2 C |  WORD_MIN_ROT :                1864 C |
 WORD_OVER :                   1829 C |  WORD_ROT :                    1841 C |
 WORD_SWAP :                   17F9 C |  comma_ret :                  4,137 - |
 dummy :                         20 C |  font_inverted :                190 C |
 font_table :                   903 C | *global_error :                 130 C |
*halt_test :                    B41 C |  halt_test.done :               B4A C |
 input_buff :                   133 C |  input_buff_begin :             131 C |
 input_buff_end :               132 C |  main :                        18A8 C |
 main.input_good :             18F4 C |  main.input_loop :             18B1 C |
 main.no_exec_error :          18DD C |  main.no_overflow :            1905 C |
 main.not_found :              18E0 C |  main.process_loop :           18B7 C |
 new_stack_item :               187 C |  new_word_buff :                174 C |
 new_word_len :                 173 C |  ret_val :                       21 C |
 screen_ptr :                    23 C |  setup :                        F9E C |
 special_chars :               1369 C |  stack_count :                  191 C |
 test_count :                   192 C |  tests :                        CA0 C |
 tests.._233.str_addr :         CA8 C |  tests.._233.str_skip :         CAA C |
 tests.._242.str_addr :         CB5 C |  tests.._242.str_skip :         CD0 C |
 tests.._260.str_addr :         CDE C |  tests.._260.str_skip :         CE2 C |
 tests.._269.str_addr :         CED C |  tests.._269.str_skip :         D08 C |
 tests.._287.str_addr :         D16 C |  tests.._287.str_skip :         D1A C |
 tests.._296.str_addr :         D25 C |  tests.._296.str_skip :         D40 C |
 tests.._314.str_addr :         D4E C |  tests.._314.str_skip :         D54 C |
 tests.._323.str_addr :         D5F C |  tests.._323.str_skip :         D7A C |
 tests.._341.str_addr :         D88 C |  tests.._341.str_skip :         D8F C |
 tests.._350.str_addr :         D9A C |  tests.._350.str_skip :         DB5 C |
 tests.._368.str_addr :         DC3 C |  tests.._368.str_skip :         DC7 C |
 tests.._377.str_addr :         DD2 C |  tests.._377.str_skip :         DED C |
 tests.._395.str_addr :         DFB C |  tests.._395.str_skip :         E01 C |
 tests.._404.str_addr :         E0C C |  tests.._404.str_skip :         E27 C |
 tests.._422.str_addr :         E35 C |  tests.._422.str_skip :         E3B C |
 tests.._431.str_addr :         E46 C |  tests.._431.str_skip :         E61 C |
 tests.._449.str_addr :         E6F C |  tests.._449.str_skip :         E77 C |
 tests.._458.str_addr :         E82 C |  tests.._458.str_skip :         E9D C |
 tests.._476.str_addr :         EAB C |  tests.._476.str_skip :         EB3 C |
 tests.._485.str_addr :         EBE C |  tests.._485.str_skip :         EC1 C |
 tests.._503.str_addr :         ECF C |  tests.._503.str_skip :         ED2 C |
 tests.._512.str_addr :         EDD C |  tests.._512.str_skip :         EF8 C |
 tests.._530.str_addr :         F06 C |  tests.._530.str_skip :         F0B C |
 tests.._539.str_addr :         F16 C |  tests.._539.str_skip :         F31 C |
 tests.._557.str_addr :         F3F C |  tests.._557.str_skip :         F54 C |
 tests.._576.str_addr :         F62 C |  tests.._576.str_skip :         F76 C |
 tests.._595.str_addr :         F8B C |  tests.._595.str_skip :         F92 C |
 tests_begin :                  B33 C |  tests_end :                    F9E C |

    327 symbols
     40 unused symbols

 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 3 - 9/3/2020 1:20:14


  Defined Macros:
  ---------------

AddCommas                             |

      1 macro

 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 4 - 9/3/2020 1:20:14


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.04 seconds assembly time

   2005 lines source file
   2011 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
