 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 1 - 9/3/2020 18:17:8


       1/       0 :                      PAGE $0
       2/    1FFC :                      ORG $1FFC
       3/    1FFC : 34 14                FDB main
       4/       0 :                      ORG $0
       5/      20 :                      ORG $20
       6/      20 :                      
       7/      20 :                     dummy:
       8/      20 :                      DFS $1
       9/      21 :                      
      10/      21 :                     ret_val:
      11/      21 :                      DFS $2
      12/      23 :                      
      13/      23 :                     screen_ptr:
      14/      23 :                      DFS $2
      15/      25 :                      
      16/      25 :                     R0:
      17/      25 :                      DFS $9
      18/      2E :                      
      19/      2E :                     R1:
      20/      2E :                      DFS $9
      21/      37 :                      
      22/      37 :                     R2:
      23/      37 :                      DFS $9
      24/      40 :                      
      25/      40 :                     R3:
      26/      40 :                      DFS $9
      27/      49 :                      
      28/      49 :                     R4:
      29/      49 :                      DFS $9
      30/      52 :                      
      31/      52 :                     R5:
      32/      52 :                      DFS $9
      33/      5B :                      
      34/      5B :                     R6:
      35/      5B :                      DFS $9
      36/      64 :                      
      37/      64 :                     R7:
      38/      64 :                      DFS $9
      39/      6D :                     
      40/      6D :                     STACK_END:
      41/     130 :                      ORG $130
      42/     130 :                      
      43/     130 :                     global_error:
      44/     130 :                      DFS $1
      45/     131 :                      
      46/     131 :                     input_buff_begin:
      47/     131 :                      DFS $1
      48/     132 :                      
      49/     132 :                     input_buff_end:
      50/     132 :                      DFS $1
      51/     133 :                      
      52/     133 :                     input_buff:
      53/     133 :                      DFS $40
      54/     173 :                      
      55/     173 :                     new_word_len:
      56/     173 :                      DFS $1
      57/     174 :                      
      58/     174 :                     new_word_buff:
      59/     174 :                      DFS $13
      60/     187 :                      
      61/     187 :                     new_stack_item:
      62/     187 :                      DFS $9
      63/     190 :                      
      64/     190 :                     font_inverted:
      65/     190 :                      DFS $1
      66/     191 :                      
      67/     191 :                     stack_count:
      68/     191 :                      DFS $1
      69/     192 :                      
      70/     192 :                     test_count:
      71/     192 :                      DFS $1
      72/    C000 :                      ORG $C000
      73/    C000 :                      
      74/    C000 :                     DebugText:
      75/    C000 : A0 00                LDY #$0
      76/    C002 :                      .loop:
      77/    C002 : B1 0A                LDA ($A),Y ;msg
      78/    C004 : F0 07                BEQ .done
      79/    C006 : 8D E7 FF             STA $FFE7
      80/    C009 : C8                   INY
      81/    C00A : 4C 02 C0             JMP .loop
      82/    C00D :                      .done:
      83/    C00D : 60                   RTS
      84/    C00E :                      
      85/    C00E :                     halt_test:
      86/    C00E : A5 20                LDA dummy
      87/    C010 : CD 92 01             CMP test_count
      88/    C013 : D0 02                BNE .done
      89/    C015 : 00                   BRK
      90/    C016 : 00                   BRK
      91/    C017 :                      .done:
      92/    C017 : 60                   RTS
      93/    C018 :                      
      94/    C018 :                     InputTest:
      95/    C018 : A0 00                LDY #$0
      96/    C01A :                      .loop:
      97/    C01A : B1 03                LDA ($3),Y ;input
      98/    C01C : F0 0D                BEQ .loop_done
      99/    C01E : C9 2D                CMP #$2D
     100/    C020 : D0 02                BNE .not_minus
     101/    C022 : A9 63                LDA #$63
     102/    C024 :                      .not_minus:
     103/    C024 : 99 74 01             STA new_word_buff,Y
     104/    C027 : C8                   INY
     105/    C028 : 4C 1A C0             JMP .loop
     106/    C02B :                      .loop_done:
     107/    C02B : 8C 73 01             STY new_word_len
     108/    C02E : 20 D9 10             JSR CheckData
     109/    C031 : A0 00                LDY #$0
     110/    C033 : 84 08                STY $8 ;calculated_index
     111/    C035 : 84 07                STY $7 ;output_index
     112/    C037 :                      .check_loop:
     113/    C037 : A4 07                LDY $7 ;output_index
     114/    C039 : B1 05                LDA ($5),Y ;output
     115/    C03B : C9 41                CMP #$41
     116/    C03D : B0 06                BCS .letter
     117/    C03F : 38                   SEC
     118/    C040 : E9 30                SBC #$30
     119/    C042 : 4C 48 C0             JMP .letter_done
     120/    C045 :                      .letter:
     121/    C045 : 38                   SEC
     122/    C046 : E9 37                SBC #$37
     123/    C048 :                      .letter_done:
     124/    C048 : 0A                   ASL
     125/    C049 : 0A                   ASL
     126/    C04A : 0A                   ASL
     127/    C04B : 0A                   ASL
     128/    C04C : 85 09                STA $9 ;value
     129/    C04E : C8                   INY
     130/    C04F : B1 05                LDA ($5),Y ;output
     131/    C051 : C9 41                CMP #$41
     132/    C053 : B0 06                BCS .letter2
     133/    C055 : 38                   SEC
     134/    C056 : E9 30                SBC #$30
     135/    C058 : 4C 5E C0             JMP .letter_done2
     136/    C05B :                      .letter2:
     137/    C05B : 38                   SEC
     138/    C05C : E9 37                SBC #$37
     139/    C05E :                      .letter_done2:
     140/    C05E : 05 09                ORA $9 ;value
     141/    C060 : 85 09                STA $9 ;value
     142/    C062 : C8                   INY
     143/    C063 : 84 07                STY $7 ;output_index
     144/    C065 : A4 08                LDY $8 ;calculated_index
     145/    C067 : B9 87 01             LDA new_stack_item,Y
     146/    C06A : C5 09                CMP $9 ;value
     147/    C06C : D0 12                BNE .failed
     148/    C06E : C8                   INY
     149/    C06F : 84 08                STY $8 ;calculated_index
     150/    C071 : A4 07                LDY $7 ;output_index
     151/    C073 : B1 05                LDA ($5),Y ;output
     152/    C075 : D0 03                BNE .continue
     153/    C077 : 4C 2C C1             JMP .done
     154/    C07A :                      .continue:
     155/    C07A : C8                   INY
     156/    C07B : 84 07                STY $7 ;output_index
     157/    C07D : 4C 37 C0             JMP .check_loop
     158/    C080 :                      .failed:
     159/    C080 : 4C 8B C0             JMP .._53.str_skip
     160/    C083 :                      .._53.str_addr:
     161/    C083 : 5C 72 54 65 73 74    FCB "\\rTest ",$0
                    20 00             
     162/    C08B :                      .._53.str_skip:
     163/    C08B : A9 83                LDA # (.._53.str_addr) # $100
     164/    C08D : 85 0A                STA $A ;DebugText.msg
     165/    C08F : A9 C0                LDA # (.._53.str_addr)/$100
     166/    C091 : 85 0B                STA $B ;DebugText.msg
     167/    C093 : 20 00 C0             JSR DebugText
     168/    C096 : AE 93 01             LDX test_count+$1
     169/    C099 : AD 92 01             LDA test_count
     170/    C09C : 8D EA FF             STA $FFEA
     171/    C09F : 4C AE C0             JMP .._77.str_skip
     172/    C0A2 :                      .._77.str_addr:
     173/    C0A2 : 3A 20 46 41 49 4C    FCB ": FAILED!\\n",$0
                    45 44 21 5C 6E 00 
     174/    C0AE :                      .._77.str_skip:
     175/    C0AE : A9 A2                LDA # (.._77.str_addr) # $100
     176/    C0B0 : 85 0A                STA $A ;DebugText.msg
     177/    C0B2 : A9 C0                LDA # (.._77.str_addr)/$100
     178/    C0B4 : 85 0B                STA $B ;DebugText.msg
     179/    C0B6 : 20 00 C0             JSR DebugText
     180/    C0B9 : 4C CA C0             JMP .._101.str_skip
     181/    C0BC :                      .._101.str_addr:
     182/    C0BC : 20 20 20 45 78 70    FCB "   Expected: ",$0
                    65 63 74 65 64 3A 
                    20 00             
     183/    C0CA :                      .._101.str_skip:
     184/    C0CA : A9 BC                LDA # (.._101.str_addr) # $100
     185/    C0CC : 85 0A                STA $A ;DebugText.msg
     186/    C0CE : A9 C0                LDA # (.._101.str_addr)/$100
     187/    C0D0 : 85 0B                STA $B ;DebugText.msg
     188/    C0D2 : 20 00 C0             JSR DebugText
     189/    C0D5 : A5 05                LDA $5 ;output
     190/    C0D7 : 85 0A                STA $A ;DebugText.msg
     191/    C0D9 : A5 06                LDA $6 ;output
     192/    C0DB : 85 0B                STA $B ;DebugText.msg
     193/    C0DD : 20 00 C0             JSR DebugText
     194/    C0E0 : 4C F3 C0             JMP .._153.str_skip
     195/    C0E3 :                      .._153.str_addr:
     196/    C0E3 : 5C 6E 20 20 20 46    FCB "\\n   Found:    ",$0
                    6F 75 6E 64 3A 20 
                    20 20 20 00       
     197/    C0F3 :                      .._153.str_skip:
     198/    C0F3 : A9 E3                LDA # (.._153.str_addr) # $100
     199/    C0F5 : 85 0A                STA $A ;DebugText.msg
     200/    C0F7 : A9 C0                LDA # (.._153.str_addr)/$100
     201/    C0F9 : 85 0B                STA $B ;DebugText.msg
     202/    C0FB : 20 00 C0             JSR DebugText
     203/    C0FE : A0 00                LDY #$0
     204/    C100 : 84 08                STY $8 ;calculated_index
     205/    C102 : A0 02                LDY #$2
     206/    C104 : 84 07                STY $7 ;output_index
     207/    C106 :                      .fail_loop:
     208/    C106 : A4 08                LDY $8 ;calculated_index
     209/    C108 : B9 87 01             LDA new_stack_item,Y
     210/    C10B : 8D E8 FF             STA $FFE8
     211/    C10E : A9 20                LDA #$20
     212/    C110 : 8D E7 FF             STA $FFE7
     213/    C113 : C8                   INY
     214/    C114 : 84 08                STY $8 ;calculated_index
     215/    C116 : A4 07                LDY $7 ;output_index
     216/    C118 : B1 05                LDA ($5),Y ;output
     217/    C11A : F0 08                BEQ .fail_done
     218/    C11C : C8                   INY
     219/    C11D : C8                   INY
     220/    C11E : C8                   INY
     221/    C11F : 84 07                STY $7 ;output_index
     222/    C121 : 4C 06 C1             JMP .fail_loop
     223/    C124 :                      .fail_done:
     224/    C124 : 00                   BRK
     225/    C125 : 00                   BRK
     226/    C126 : AD 87 01             LDA new_stack_item
     227/    C129 : 4C 80 C0             JMP .failed
     228/    C12C :                      .done:
     229/    C12C : 4C 37 C1             JMP .._178.str_skip
     230/    C12F :                      .._178.str_addr:
     231/    C12F : 5C 67 54 65 73 74    FCB "\\gTest ",$0
                    20 00             
     232/    C137 :                      .._178.str_skip:
     233/    C137 : A9 2F                LDA # (.._178.str_addr) # $100
     234/    C139 : 85 0A                STA $A ;DebugText.msg
     235/    C13B : A9 C1                LDA # (.._178.str_addr)/$100
     236/    C13D : 85 0B                STA $B ;DebugText.msg
     237/    C13F : 20 00 C0             JSR DebugText
     238/    C142 : AE 93 01             LDX test_count+$1
     239/    C145 : AD 92 01             LDA test_count
     240/    C148 : 8D EA FF             STA $FFEA
     241/    C14B : 4C 59 C1             JMP .._202.str_skip
     242/    C14E :                      .._202.str_addr:
     243/    C14E : 3A 20 70 61 73 73    FCB ": passed\\n",$0
                    65 64 5C 6E 00    
     244/    C159 :                      .._202.str_skip:
     245/    C159 : A9 4E                LDA # (.._202.str_addr) # $100
     246/    C15B : 85 0A                STA $A ;DebugText.msg
     247/    C15D : A9 C1                LDA # (.._202.str_addr)/$100
     248/    C15F : 85 0B                STA $B ;DebugText.msg
     249/    C161 : 20 00 C0             JSR DebugText
     250/    C164 : EE 92 01             INC test_count
     251/    C167 : D0 03                BNE .._223.no_carry
     252/    C169 : EE 93 01             INC test_count+$1
     253/    C16C :                      .._223.no_carry:
     254/    C16C : 60                   RTS
     255/    C16D :                      
     256/    C16D :                     tests:
     257/    C16D : A9 01                LDA #$1
     258/    C16F : 8D 92 01             STA test_count
     259/    C172 : 4C 77 C1             JMP .._232.str_skip
     260/    C175 :                      .._232.str_addr:
     261/    C175 : 35 00                FCB "5",$0
     262/    C177 :                      .._232.str_skip:
     263/    C177 : A9 75                LDA # (.._232.str_addr) # $100
     264/    C179 : 85 03                STA $3 ;InputTest.input
     265/    C17B : A9 C1                LDA # (.._232.str_addr)/$100
     266/    C17D : 85 04                STA $4 ;InputTest.input
     267/    C17F : 4C 9D C1             JMP .._241.str_skip
     268/    C182 :                      .._241.str_addr:
     269/    C182 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 00 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 30 20 
                    30 30 00          
     270/    C19D :                      .._241.str_skip:
     271/    C19D : A9 82                LDA # (.._241.str_addr) # $100
     272/    C19F : 85 05                STA $5 ;InputTest.output
     273/    C1A1 : A9 C1                LDA # (.._241.str_addr)/$100
     274/    C1A3 : 85 06                STA $6 ;InputTest.output
     275/    C1A5 : 20 18 C0             JSR InputTest
     276/    C1A8 : 4C AF C1             JMP .._259.str_skip
     277/    C1AB :                      .._259.str_addr:
     278/    C1AB : 35 30 30 00          FCB "500",$0
     279/    C1AF :                      .._259.str_skip:
     280/    C1AF : A9 AB                LDA # (.._259.str_addr) # $100
     281/    C1B1 : 85 03                STA $3 ;InputTest.input
     282/    C1B3 : A9 C1                LDA # (.._259.str_addr)/$100
     283/    C1B5 : 85 04                STA $4 ;InputTest.input
     284/    C1B7 : 4C D5 C1             JMP .._268.str_skip
     285/    C1BA :                      .._268.str_addr:
     286/    C1BA : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    30 30 00          
     287/    C1D5 :                      .._268.str_skip:
     288/    C1D5 : A9 BA                LDA # (.._268.str_addr) # $100
     289/    C1D7 : 85 05                STA $5 ;InputTest.output
     290/    C1D9 : A9 C1                LDA # (.._268.str_addr)/$100
     291/    C1DB : 85 06                STA $6 ;InputTest.output
     292/    C1DD : 20 18 C0             JSR InputTest
     293/    C1E0 : 4C E7 C1             JMP .._286.str_skip
     294/    C1E3 :                      .._286.str_addr:
     295/    C1E3 : 35 30 30 00          FCB "500",$0
     296/    C1E7 :                      .._286.str_skip:
     297/    C1E7 : A9 E3                LDA # (.._286.str_addr) # $100
     298/    C1E9 : 85 03                STA $3 ;InputTest.input
     299/    C1EB : A9 C1                LDA # (.._286.str_addr)/$100
     300/    C1ED : 85 04                STA $4 ;InputTest.input
     301/    C1EF : 4C 0D C2             JMP .._295.str_skip
     302/    C1F2 :                      .._295.str_addr:
     303/    C1F2 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    30 30 00          
     304/    C20D :                      .._295.str_skip:
     305/    C20D : A9 F2                LDA # (.._295.str_addr) # $100
     306/    C20F : 85 05                STA $5 ;InputTest.output
     307/    C211 : A9 C1                LDA # (.._295.str_addr)/$100
     308/    C213 : 85 06                STA $6 ;InputTest.output
     309/    C215 : 20 18 C0             JSR InputTest
     310/    C218 : 4C 21 C2             JMP .._313.str_skip
     311/    C21B :                      .._313.str_addr:
     312/    C21B : 35 30 30 2E 30 00    FCB "500.0",$0
     313/    C221 :                      .._313.str_skip:
     314/    C221 : A9 1B                LDA # (.._313.str_addr) # $100
     315/    C223 : 85 03                STA $3 ;InputTest.input
     316/    C225 : A9 C2                LDA # (.._313.str_addr)/$100
     317/    C227 : 85 04                STA $4 ;InputTest.input
     318/    C229 : 4C 47 C2             JMP .._322.str_skip
     319/    C22C :                      .._322.str_addr:
     320/    C22C : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    30 30 00          
     321/    C247 :                      .._322.str_skip:
     322/    C247 : A9 2C                LDA # (.._322.str_addr) # $100
     323/    C249 : 85 05                STA $5 ;InputTest.output
     324/    C24B : A9 C2                LDA # (.._322.str_addr)/$100
     325/    C24D : 85 06                STA $6 ;InputTest.output
     326/    C24F : 20 18 C0             JSR InputTest
     327/    C252 : 4C 5C C2             JMP .._340.str_skip
     328/    C255 :                      .._340.str_addr:
     329/    C255 : 35 30 30 2E 30 30    FCB "500.00",$0
                    00                
     330/    C25C :                      .._340.str_skip:
     331/    C25C : A9 55                LDA # (.._340.str_addr) # $100
     332/    C25E : 85 03                STA $3 ;InputTest.input
     333/    C260 : A9 C2                LDA # (.._340.str_addr)/$100
     334/    C262 : 85 04                STA $4 ;InputTest.input
     335/    C264 : 4C 82 C2             JMP .._349.str_skip
     336/    C267 :                      .._349.str_addr:
     337/    C267 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    30 30 00          
     338/    C282 :                      .._349.str_skip:
     339/    C282 : A9 67                LDA # (.._349.str_addr) # $100
     340/    C284 : 85 05                STA $5 ;InputTest.output
     341/    C286 : A9 C2                LDA # (.._349.str_addr)/$100
     342/    C288 : 85 06                STA $6 ;InputTest.output
     343/    C28A : 20 18 C0             JSR InputTest
     344/    C28D : 4C 94 C2             JMP .._367.str_skip
     345/    C290 :                      .._367.str_addr:
     346/    C290 : 35 65 30 00          FCB "5e0",$0
     347/    C294 :                      .._367.str_skip:
     348/    C294 : A9 90                LDA # (.._367.str_addr) # $100
     349/    C296 : 85 03                STA $3 ;InputTest.input
     350/    C298 : A9 C2                LDA # (.._367.str_addr)/$100
     351/    C29A : 85 04                STA $4 ;InputTest.input
     352/    C29C : 4C BA C2             JMP .._376.str_skip
     353/    C29F :                      .._376.str_addr:
     354/    C29F : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 00 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 30 20 
                    30 30 00          
     355/    C2BA :                      .._376.str_skip:
     356/    C2BA : A9 9F                LDA # (.._376.str_addr) # $100
     357/    C2BC : 85 05                STA $5 ;InputTest.output
     358/    C2BE : A9 C2                LDA # (.._376.str_addr)/$100
     359/    C2C0 : 85 06                STA $6 ;InputTest.output
     360/    C2C2 : 20 18 C0             JSR InputTest
     361/    C2C5 : 4C CE C2             JMP .._394.str_skip
     362/    C2C8 :                      .._394.str_addr:
     363/    C2C8 : 35 30 30 65 30 00    FCB "500e0",$0
     364/    C2CE :                      .._394.str_skip:
     365/    C2CE : A9 C8                LDA # (.._394.str_addr) # $100
     366/    C2D0 : 85 03                STA $3 ;InputTest.input
     367/    C2D2 : A9 C2                LDA # (.._394.str_addr)/$100
     368/    C2D4 : 85 04                STA $4 ;InputTest.input
     369/    C2D6 : 4C F4 C2             JMP .._403.str_skip
     370/    C2D9 :                      .._403.str_addr:
     371/    C2D9 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    30 30 00          
     372/    C2F4 :                      .._403.str_skip:
     373/    C2F4 : A9 D9                LDA # (.._403.str_addr) # $100
     374/    C2F6 : 85 05                STA $5 ;InputTest.output
     375/    C2F8 : A9 C2                LDA # (.._403.str_addr)/$100
     376/    C2FA : 85 06                STA $6 ;InputTest.output
     377/    C2FC : 20 18 C0             JSR InputTest
     378/    C2FF : 4C 08 C3             JMP .._421.str_skip
     379/    C302 :                      .._421.str_addr:
     380/    C302 : 35 30 30 65 32 00    FCB "500e2",$0
     381/    C308 :                      .._421.str_skip:
     382/    C308 : A9 02                LDA # (.._421.str_addr) # $100
     383/    C30A : 85 03                STA $3 ;InputTest.input
     384/    C30C : A9 C3                LDA # (.._421.str_addr)/$100
     385/    C30E : 85 04                STA $4 ;InputTest.input
     386/    C310 : 4C 2E C3             JMP .._430.str_skip
     387/    C313 :                      .._430.str_addr:
     388/    C313 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 04 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 34 20 
                    30 30 00          
     389/    C32E :                      .._430.str_skip:
     390/    C32E : A9 13                LDA # (.._430.str_addr) # $100
     391/    C330 : 85 05                STA $5 ;InputTest.output
     392/    C332 : A9 C3                LDA # (.._430.str_addr)/$100
     393/    C334 : 85 06                STA $6 ;InputTest.output
     394/    C336 : 20 18 C0             JSR InputTest
     395/    C339 : 4C 44 C3             JMP .._448.str_skip
     396/    C33C :                      .._448.str_addr:
     397/    C33C : 35 30 30 65 39 39    FCB "500e997",$0
                    37 00             
     398/    C344 :                      .._448.str_skip:
     399/    C344 : A9 3C                LDA # (.._448.str_addr) # $100
     400/    C346 : 85 03                STA $3 ;InputTest.input
     401/    C348 : A9 C3                LDA # (.._448.str_addr)/$100
     402/    C34A : 85 04                STA $4 ;InputTest.input
     403/    C34C : 4C 6A C3             JMP .._457.str_skip
     404/    C34F :                      .._457.str_addr:
     405/    C34F : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 99 09",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 39 39 20 
                    30 39 00          
     406/    C36A :                      .._457.str_skip:
     407/    C36A : A9 4F                LDA # (.._457.str_addr) # $100
     408/    C36C : 85 05                STA $5 ;InputTest.output
     409/    C36E : A9 C3                LDA # (.._457.str_addr)/$100
     410/    C370 : 85 06                STA $6 ;InputTest.output
     411/    C372 : 20 18 C0             JSR InputTest
     412/    C375 : 4C 80 C3             JMP .._475.str_skip
     413/    C378 :                      .._475.str_addr:
     414/    C378 : 35 30 30 65 39 39    FCB "500e998",$0
                    38 00             
     415/    C380 :                      .._475.str_skip:
     416/    C380 : A9 78                LDA # (.._475.str_addr) # $100
     417/    C382 : 85 03                STA $3 ;InputTest.input
     418/    C384 : A9 C3                LDA # (.._475.str_addr)/$100
     419/    C386 : 85 04                STA $4 ;InputTest.input
     420/    C388 : 4C 8E C3             JMP .._484.str_skip
     421/    C38B :                      .._484.str_addr:
     422/    C38B : 30 34 00             FCB "04",$0
     423/    C38E :                      .._484.str_skip:
     424/    C38E : A9 8B                LDA # (.._484.str_addr) # $100
     425/    C390 : 85 05                STA $5 ;InputTest.output
     426/    C392 : A9 C3                LDA # (.._484.str_addr)/$100
     427/    C394 : 85 06                STA $6 ;InputTest.output
     428/    C396 : 20 18 C0             JSR InputTest
     429/    C399 : 4C 9F C3             JMP .._502.str_skip
     430/    C39C :                      .._502.str_addr:
     431/    C39C : 2D 35 00             FCB "-5",$0
     432/    C39F :                      .._502.str_skip:
     433/    C39F : A9 9C                LDA # (.._502.str_addr) # $100
     434/    C3A1 : 85 03                STA $3 ;InputTest.input
     435/    C3A3 : A9 C3                LDA # (.._502.str_addr)/$100
     436/    C3A5 : 85 04                STA $4 ;InputTest.input
     437/    C3A7 : 4C C5 C3             JMP .._511.str_skip
     438/    C3AA :                      .._511.str_addr:
     439/    C3AA : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 00 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 30 20 
                    38 30 00          
     440/    C3C5 :                      .._511.str_skip:
     441/    C3C5 : A9 AA                LDA # (.._511.str_addr) # $100
     442/    C3C7 : 85 05                STA $5 ;InputTest.output
     443/    C3C9 : A9 C3                LDA # (.._511.str_addr)/$100
     444/    C3CB : 85 06                STA $6 ;InputTest.output
     445/    C3CD : 20 18 C0             JSR InputTest
     446/    C3D0 : 4C D8 C3             JMP .._529.str_skip
     447/    C3D3 :                      .._529.str_addr:
     448/    C3D3 : 2D 35 30 30 00       FCB "-500",$0
     449/    C3D8 :                      .._529.str_skip:
     450/    C3D8 : A9 D3                LDA # (.._529.str_addr) # $100
     451/    C3DA : 85 03                STA $3 ;InputTest.input
     452/    C3DC : A9 C3                LDA # (.._529.str_addr)/$100
     453/    C3DE : 85 04                STA $4 ;InputTest.input
     454/    C3E0 : 4C FE C3             JMP .._538.str_skip
     455/    C3E3 :                      .._538.str_addr:
     456/    C3E3 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
     457/    C3FE :                      .._538.str_skip:
     458/    C3FE : A9 E3                LDA # (.._538.str_addr) # $100
     459/    C400 : 85 05                STA $5 ;InputTest.output
     460/    C402 : A9 C3                LDA # (.._538.str_addr)/$100
     461/    C404 : 85 06                STA $6 ;InputTest.output
     462/    C406 : 20 18 C0             JSR InputTest
     463/    C409 : 4C 15 C4             JMP .._556.str_skip
     464/    C40C :                      .._556.str_addr:
     465/    C40C : 2D 35 30 30 65 39    FCB "-500e997",$0
                    39 37 00          
     466/    C415 :                      .._556.str_skip:
     467/    C415 : A9 0C                LDA # (.._556.str_addr) # $100
     468/    C417 : 85 03                STA $3 ;InputTest.input
     469/    C419 : A9 C4                LDA # (.._556.str_addr)/$100
     470/    C41B : 85 04                STA $4 ;InputTest.input
     471/    C41D : 4C 3B C4             JMP .._565.str_skip
     472/    C420 :                      .._565.str_addr:
     473/    C420 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 99 89",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 39 39 20 
                    38 39 00          
     474/    C43B :                      .._565.str_skip:
     475/    C43B : A9 20                LDA # (.._565.str_addr) # $100
     476/    C43D : 85 05                STA $5 ;InputTest.output
     477/    C43F : A9 C4                LDA # (.._565.str_addr)/$100
     478/    C441 : 85 06                STA $6 ;InputTest.output
     479/    C443 : 20 18 C0             JSR InputTest
     480/    C446 : 4C 4E C4             JMP .._583.str_skip
     481/    C449 :                      .._583.str_addr:
     482/    C449 : 30 2E 30 35 00       FCB "0.05",$0
     483/    C44E :                      .._583.str_skip:
     484/    C44E : A9 49                LDA # (.._583.str_addr) # $100
     485/    C450 : 85 03                STA $3 ;InputTest.input
     486/    C452 : A9 C4                LDA # (.._583.str_addr)/$100
     487/    C454 : 85 04                STA $4 ;InputTest.input
     488/    C456 : 4C 74 C4             JMP .._592.str_skip
     489/    C459 :                      .._592.str_addr:
     490/    C459 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 40",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    34 30 00          
     491/    C474 :                      .._592.str_skip:
     492/    C474 : A9 59                LDA # (.._592.str_addr) # $100
     493/    C476 : 85 05                STA $5 ;InputTest.output
     494/    C478 : A9 C4                LDA # (.._592.str_addr)/$100
     495/    C47A : 85 06                STA $6 ;InputTest.output
     496/    C47C : 20 18 C0             JSR InputTest
     497/    C47F : 4C 89 C4             JMP .._610.str_skip
     498/    C482 :                      .._610.str_addr:
     499/    C482 : 30 2E 30 35 65 32    FCB "0.05e2",$0
                    00                
     500/    C489 :                      .._610.str_skip:
     501/    C489 : A9 82                LDA # (.._610.str_addr) # $100
     502/    C48B : 85 03                STA $3 ;InputTest.input
     503/    C48D : A9 C4                LDA # (.._610.str_addr)/$100
     504/    C48F : 85 04                STA $4 ;InputTest.input
     505/    C491 : 4C AF C4             JMP .._619.str_skip
     506/    C494 :                      .._619.str_addr:
     507/    C494 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 00 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 30 20 
                    30 30 00          
     508/    C4AF :                      .._619.str_skip:
     509/    C4AF : A9 94                LDA # (.._619.str_addr) # $100
     510/    C4B1 : 85 05                STA $5 ;InputTest.output
     511/    C4B3 : A9 C4                LDA # (.._619.str_addr)/$100
     512/    C4B5 : 85 06                STA $6 ;InputTest.output
     513/    C4B7 : 20 18 C0             JSR InputTest
     514/    C4BA : 4C C4 C4             JMP .._637.str_skip
     515/    C4BD :                      .._637.str_addr:
     516/    C4BD : 30 2E 30 35 65 31    FCB "0.05e1",$0
                    00                
     517/    C4C4 :                      .._637.str_skip:
     518/    C4C4 : A9 BD                LDA # (.._637.str_addr) # $100
     519/    C4C6 : 85 03                STA $3 ;InputTest.input
     520/    C4C8 : A9 C4                LDA # (.._637.str_addr)/$100
     521/    C4CA : 85 04                STA $4 ;InputTest.input
     522/    C4CC : 4C EA C4             JMP .._646.str_skip
     523/    C4CF :                      .._646.str_addr:
     524/    C4CF : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 01 40",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 31 20 
                    34 30 00          
     525/    C4EA :                      .._646.str_skip:
     526/    C4EA : A9 CF                LDA # (.._646.str_addr) # $100
     527/    C4EC : 85 05                STA $5 ;InputTest.output
     528/    C4EE : A9 C4                LDA # (.._646.str_addr)/$100
     529/    C4F0 : 85 06                STA $6 ;InputTest.output
     530/    C4F2 : 20 18 C0             JSR InputTest
     531/    C4F5 : 4C FF C4             JMP .._664.str_skip
     532/    C4F8 :                      .._664.str_addr:
     533/    C4F8 : 30 2E 30 35 65 33    FCB "0.05e3",$0
                    00                
     534/    C4FF :                      .._664.str_skip:
     535/    C4FF : A9 F8                LDA # (.._664.str_addr) # $100
     536/    C501 : 85 03                STA $3 ;InputTest.input
     537/    C503 : A9 C4                LDA # (.._664.str_addr)/$100
     538/    C505 : 85 04                STA $4 ;InputTest.input
     539/    C507 : 4C 25 C5             JMP .._673.str_skip
     540/    C50A :                      .._673.str_addr:
     541/    C50A : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 01 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 31 20 
                    30 30 00          
     542/    C525 :                      .._673.str_skip:
     543/    C525 : A9 0A                LDA # (.._673.str_addr) # $100
     544/    C527 : 85 05                STA $5 ;InputTest.output
     545/    C529 : A9 C5                LDA # (.._673.str_addr)/$100
     546/    C52B : 85 06                STA $6 ;InputTest.output
     547/    C52D : 20 18 C0             JSR InputTest
     548/    C530 : 4C 3B C5             JMP .._691.str_skip
     549/    C533 :                      .._691.str_addr:
     550/    C533 : 30 2E 30 35 65 2D    FCB "0.05e-2",$0
                    32 00             
     551/    C53B :                      .._691.str_skip:
     552/    C53B : A9 33                LDA # (.._691.str_addr) # $100
     553/    C53D : 85 03                STA $3 ;InputTest.input
     554/    C53F : A9 C5                LDA # (.._691.str_addr)/$100
     555/    C541 : 85 04                STA $4 ;InputTest.input
     556/    C543 : 4C 61 C5             JMP .._700.str_skip
     557/    C546 :                      .._700.str_addr:
     558/    C546 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 04 40",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 34 20 
                    34 30 00          
     559/    C561 :                      .._700.str_skip:
     560/    C561 : A9 46                LDA # (.._700.str_addr) # $100
     561/    C563 : 85 05                STA $5 ;InputTest.output
     562/    C565 : A9 C5                LDA # (.._700.str_addr)/$100
     563/    C567 : 85 06                STA $6 ;InputTest.output
     564/    C569 : 20 18 C0             JSR InputTest
     565/    C56C : 4C 74 C5             JMP .._718.str_skip
     566/    C56F :                      .._718.str_addr:
     567/    C56F : 35 65 2D 30 00       FCB "5e-0",$0
     568/    C574 :                      .._718.str_skip:
     569/    C574 : A9 6F                LDA # (.._718.str_addr) # $100
     570/    C576 : 85 03                STA $3 ;InputTest.input
     571/    C578 : A9 C5                LDA # (.._718.str_addr)/$100
     572/    C57A : 85 04                STA $4 ;InputTest.input
     573/    C57C : 4C 9A C5             JMP .._727.str_skip
     574/    C57F :                      .._727.str_addr:
     575/    C57F : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 00 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 30 20 
                    30 30 00          
     576/    C59A :                      .._727.str_skip:
     577/    C59A : A9 7F                LDA # (.._727.str_addr) # $100
     578/    C59C : 85 05                STA $5 ;InputTest.output
     579/    C59E : A9 C5                LDA # (.._727.str_addr)/$100
     580/    C5A0 : 85 06                STA $6 ;InputTest.output
     581/    C5A2 : 20 18 C0             JSR InputTest
     582/    C5A5 : 4C AD C5             JMP .._745.str_skip
     583/    C5A8 :                      .._745.str_addr:
     584/    C5A8 : 35 65 2D 32 00       FCB "5e-2",$0
     585/    C5AD :                      .._745.str_skip:
     586/    C5AD : A9 A8                LDA # (.._745.str_addr) # $100
     587/    C5AF : 85 03                STA $3 ;InputTest.input
     588/    C5B1 : A9 C5                LDA # (.._745.str_addr)/$100
     589/    C5B3 : 85 04                STA $4 ;InputTest.input
     590/    C5B5 : 4C D3 C5             JMP .._754.str_skip
     591/    C5B8 :                      .._754.str_addr:
     592/    C5B8 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 40",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    34 30 00          
     593/    C5D3 :                      .._754.str_skip:
     594/    C5D3 : A9 B8                LDA # (.._754.str_addr) # $100
     595/    C5D5 : 85 05                STA $5 ;InputTest.output
     596/    C5D7 : A9 C5                LDA # (.._754.str_addr)/$100
     597/    C5D9 : 85 06                STA $6 ;InputTest.output
     598/    C5DB : 20 18 C0             JSR InputTest
     599/    C5DE : 4C EB C5             JMP .._772.str_skip
     600/    C5E1 :                      .._772.str_addr:
     601/    C5E1 : 30 2E 30 35 65 2D    FCB "0.05e-997",$0
                    39 39 37 00       
     602/    C5EB :                      .._772.str_skip:
     603/    C5EB : A9 E1                LDA # (.._772.str_addr) # $100
     604/    C5ED : 85 03                STA $3 ;InputTest.input
     605/    C5EF : A9 C5                LDA # (.._772.str_addr)/$100
     606/    C5F1 : 85 04                STA $4 ;InputTest.input
     607/    C5F3 : 4C 11 C6             JMP .._781.str_skip
     608/    C5F6 :                      .._781.str_addr:
     609/    C5F6 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 99 49",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 39 39 20 
                    34 39 00          
     610/    C611 :                      .._781.str_skip:
     611/    C611 : A9 F6                LDA # (.._781.str_addr) # $100
     612/    C613 : 85 05                STA $5 ;InputTest.output
     613/    C615 : A9 C5                LDA # (.._781.str_addr)/$100
     614/    C617 : 85 06                STA $6 ;InputTest.output
     615/    C619 : 20 18 C0             JSR InputTest
     616/    C61C : 4C 29 C6             JMP .._799.str_skip
     617/    C61F :                      .._799.str_addr:
     618/    C61F : 30 2E 30 35 65 2D    FCB "0.05e-998",$0
                    39 39 38 00       
     619/    C629 :                      .._799.str_skip:
     620/    C629 : A9 1F                LDA # (.._799.str_addr) # $100
     621/    C62B : 85 03                STA $3 ;InputTest.input
     622/    C62D : A9 C6                LDA # (.._799.str_addr)/$100
     623/    C62F : 85 04                STA $4 ;InputTest.input
     624/    C631 : 4C 37 C6             JMP .._808.str_skip
     625/    C634 :                      .._808.str_addr:
     626/    C634 : 30 34 00             FCB "04",$0
     627/    C637 :                      .._808.str_skip:
     628/    C637 : A9 34                LDA # (.._808.str_addr) # $100
     629/    C639 : 85 05                STA $5 ;InputTest.output
     630/    C63B : A9 C6                LDA # (.._808.str_addr)/$100
     631/    C63D : 85 06                STA $6 ;InputTest.output
     632/    C63F : 20 18 C0             JSR InputTest
     633/    C642 : 4C 4E C6             JMP .._826.str_skip
     634/    C645 :                      .._826.str_addr:
     635/    C645 : 30 2E 30 35 65 31    FCB "0.05e101",$0
                    30 31 00          
     636/    C64E :                      .._826.str_skip:
     637/    C64E : A9 45                LDA # (.._826.str_addr) # $100
     638/    C650 : 85 03                STA $3 ;InputTest.input
     639/    C652 : A9 C6                LDA # (.._826.str_addr)/$100
     640/    C654 : 85 04                STA $4 ;InputTest.input
     641/    C656 : 4C 74 C6             JMP .._835.str_skip
     642/    C659 :                      .._835.str_addr:
     643/    C659 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 99 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 39 39 20 
                    30 30 00          
     644/    C674 :                      .._835.str_skip:
     645/    C674 : A9 59                LDA # (.._835.str_addr) # $100
     646/    C676 : 85 05                STA $5 ;InputTest.output
     647/    C678 : A9 C6                LDA # (.._835.str_addr)/$100
     648/    C67A : 85 06                STA $6 ;InputTest.output
     649/    C67C : 20 18 C0             JSR InputTest
     650/    C67F : 4C 8A C6             JMP .._853.str_skip
     651/    C682 :                      .._853.str_addr:
     652/    C682 : 30 2E 30 35 65 39    FCB "0.05e99",$0
                    39 00             
     653/    C68A :                      .._853.str_skip:
     654/    C68A : A9 82                LDA # (.._853.str_addr) # $100
     655/    C68C : 85 03                STA $3 ;InputTest.input
     656/    C68E : A9 C6                LDA # (.._853.str_addr)/$100
     657/    C690 : 85 04                STA $4 ;InputTest.input
     658/    C692 : 4C B0 C6             JMP .._862.str_skip
     659/    C695 :                      .._862.str_addr:
     660/    C695 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 97 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 39 37 20 
                    30 30 00          
     661/    C6B0 :                      .._862.str_skip:
     662/    C6B0 : A9 95                LDA # (.._862.str_addr) # $100
     663/    C6B2 : 85 05                STA $5 ;InputTest.output
     664/    C6B4 : A9 C6                LDA # (.._862.str_addr)/$100
     665/    C6B6 : 85 06                STA $6 ;InputTest.output
     666/    C6B8 : 20 18 C0             JSR InputTest
     667/    C6BB : 4C C5 C6             JMP .._880.str_skip
     668/    C6BE :                      .._880.str_addr:
     669/    C6BE : 35 30 30 65 39 39    FCB "500e99",$0
                    00                
     670/    C6C5 :                      .._880.str_skip:
     671/    C6C5 : A9 BE                LDA # (.._880.str_addr) # $100
     672/    C6C7 : 85 03                STA $3 ;InputTest.input
     673/    C6C9 : A9 C6                LDA # (.._880.str_addr)/$100
     674/    C6CB : 85 04                STA $4 ;InputTest.input
     675/    C6CD : 4C EB C6             JMP .._889.str_skip
     676/    C6D0 :                      .._889.str_addr:
     677/    C6D0 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 01 01",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 31 20 
                    30 31 00          
     678/    C6EB :                      .._889.str_skip:
     679/    C6EB : A9 D0                LDA # (.._889.str_addr) # $100
     680/    C6ED : 85 05                STA $5 ;InputTest.output
     681/    C6EF : A9 C6                LDA # (.._889.str_addr)/$100
     682/    C6F1 : 85 06                STA $6 ;InputTest.output
     683/    C6F3 : 20 18 C0             JSR InputTest
     684/    C6F6 : 4C 00 C7             JMP .._907.str_skip
     685/    C6F9 :                      .._907.str_addr:
     686/    C6F9 : 35 30 30 65 39 37    FCB "500e97",$0
                    00                
     687/    C700 :                      .._907.str_skip:
     688/    C700 : A9 F9                LDA # (.._907.str_addr) # $100
     689/    C702 : 85 03                STA $3 ;InputTest.input
     690/    C704 : A9 C6                LDA # (.._907.str_addr)/$100
     691/    C706 : 85 04                STA $4 ;InputTest.input
     692/    C708 : 4C 26 C7             JMP .._916.str_skip
     693/    C70B :                      .._916.str_addr:
     694/    C70B : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 99 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 39 39 20 
                    30 30 00          
     695/    C726 :                      .._916.str_skip:
     696/    C726 : A9 0B                LDA # (.._916.str_addr) # $100
     697/    C728 : 85 05                STA $5 ;InputTest.output
     698/    C72A : A9 C7                LDA # (.._916.str_addr)/$100
     699/    C72C : 85 06                STA $6 ;InputTest.output
     700/    C72E : 20 18 C0             JSR InputTest
     701/    C731 : 4C 3B C7             JMP .._934.str_skip
     702/    C734 :                      .._934.str_addr:
     703/    C734 : 35 30 30 65 39 38    FCB "500e98",$0
                    00                
     704/    C73B :                      .._934.str_skip:
     705/    C73B : A9 34                LDA # (.._934.str_addr) # $100
     706/    C73D : 85 03                STA $3 ;InputTest.input
     707/    C73F : A9 C7                LDA # (.._934.str_addr)/$100
     708/    C741 : 85 04                STA $4 ;InputTest.input
     709/    C743 : 4C 61 C7             JMP .._943.str_skip
     710/    C746 :                      .._943.str_addr:
     711/    C746 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 00 01",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 30 20 
                    30 31 00          
     712/    C761 :                      .._943.str_skip:
     713/    C761 : A9 46                LDA # (.._943.str_addr) # $100
     714/    C763 : 85 05                STA $5 ;InputTest.output
     715/    C765 : A9 C7                LDA # (.._943.str_addr)/$100
     716/    C767 : 85 06                STA $6 ;InputTest.output
     717/    C769 : 20 18 C0             JSR InputTest
     718/    C76C : 4C 78 C7             JMP .._961.str_skip
     719/    C76F :                      .._961.str_addr:
     720/    C76F : 30 2E 30 35 65 31    FCB "0.05e102",$0
                    30 32 00          
     721/    C778 :                      .._961.str_skip:
     722/    C778 : A9 6F                LDA # (.._961.str_addr) # $100
     723/    C77A : 85 03                STA $3 ;InputTest.input
     724/    C77C : A9 C7                LDA # (.._961.str_addr)/$100
     725/    C77E : 85 04                STA $4 ;InputTest.input
     726/    C780 : 4C 9E C7             JMP .._970.str_skip
     727/    C783 :                      .._970.str_addr:
     728/    C783 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 00 01",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 30 20 
                    30 31 00          
     729/    C79E :                      .._970.str_skip:
     730/    C79E : A9 83                LDA # (.._970.str_addr) # $100
     731/    C7A0 : 85 05                STA $5 ;InputTest.output
     732/    C7A2 : A9 C7                LDA # (.._970.str_addr)/$100
     733/    C7A4 : 85 06                STA $6 ;InputTest.output
     734/    C7A6 : 20 18 C0             JSR InputTest
     735/    C7A9 : 4C BA C7             JMP .._988.str_skip
     736/    C7AC :                      .._988.str_addr:
     737/    C7AC : 31 2E 32 33 34 35    FCB "1.23456789012",$0
                    36 37 38 39 30 31 
                    32 00             
     738/    C7BA :                      .._988.str_skip:
     739/    C7BA : A9 AC                LDA # (.._988.str_addr) # $100
     740/    C7BC : 85 03                STA $3 ;InputTest.input
     741/    C7BE : A9 C7                LDA # (.._988.str_addr)/$100
     742/    C7C0 : 85 04                STA $4 ;InputTest.input
     743/    C7C2 : 4C E0 C7             JMP .._997.str_skip
     744/    C7C5 :                      .._997.str_addr:
     745/    C7C5 : 30 31 20 31 32 20    FCB "01 12 90 78 56 34 12 00 00",$0
                    39 30 20 37 38 20 
                    35 36 20 33 34 20 
                    31 32 20 30 30 20 
                    30 30 00          
     746/    C7E0 :                      .._997.str_skip:
     747/    C7E0 : A9 C5                LDA # (.._997.str_addr) # $100
     748/    C7E2 : 85 05                STA $5 ;InputTest.output
     749/    C7E4 : A9 C7                LDA # (.._997.str_addr)/$100
     750/    C7E6 : 85 06                STA $6 ;InputTest.output
     751/    C7E8 : 20 18 C0             JSR InputTest
     752/    C7EB : 4C FC C7             JMP .._1015.str_skip
     753/    C7EE :                      .._1015.str_addr:
     754/    C7EE : 31 32 33 34 35 2E    FCB "12345.6789012",$0
                    36 37 38 39 30 31 
                    32 00             
     755/    C7FC :                      .._1015.str_skip:
     756/    C7FC : A9 EE                LDA # (.._1015.str_addr) # $100
     757/    C7FE : 85 03                STA $3 ;InputTest.input
     758/    C800 : A9 C7                LDA # (.._1015.str_addr)/$100
     759/    C802 : 85 04                STA $4 ;InputTest.input
     760/    C804 : 4C 22 C8             JMP .._1024.str_skip
     761/    C807 :                      .._1024.str_addr:
     762/    C807 : 30 31 20 31 32 20    FCB "01 12 90 78 56 34 12 04 00",$0
                    39 30 20 37 38 20 
                    35 36 20 33 34 20 
                    31 32 20 30 34 20 
                    30 30 00          
     763/    C822 :                      .._1024.str_skip:
     764/    C822 : A9 07                LDA # (.._1024.str_addr) # $100
     765/    C824 : 85 05                STA $5 ;InputTest.output
     766/    C826 : A9 C8                LDA # (.._1024.str_addr)/$100
     767/    C828 : 85 06                STA $6 ;InputTest.output
     768/    C82A : 20 18 C0             JSR InputTest
     769/    C82D : 4C 41 C8             JMP .._1042.str_skip
     770/    C830 :                      .._1042.str_addr:
     771/    C830 : 31 2E 32 33 34 35    FCB "1.23456789012e10",$0
                    36 37 38 39 30 31 
                    32 65 31 30 00    
     772/    C841 :                      .._1042.str_skip:
     773/    C841 : A9 30                LDA # (.._1042.str_addr) # $100
     774/    C843 : 85 03                STA $3 ;InputTest.input
     775/    C845 : A9 C8                LDA # (.._1042.str_addr)/$100
     776/    C847 : 85 04                STA $4 ;InputTest.input
     777/    C849 : 4C 67 C8             JMP .._1051.str_skip
     778/    C84C :                      .._1051.str_addr:
     779/    C84C : 30 31 20 31 32 20    FCB "01 12 90 78 56 34 12 10 00",$0
                    39 30 20 37 38 20 
                    35 36 20 33 34 20 
                    31 32 20 31 30 20 
                    30 30 00          
     780/    C867 :                      .._1051.str_skip:
     781/    C867 : A9 4C                LDA # (.._1051.str_addr) # $100
     782/    C869 : 85 05                STA $5 ;InputTest.output
     783/    C86B : A9 C8                LDA # (.._1051.str_addr)/$100
     784/    C86D : 85 06                STA $6 ;InputTest.output
     785/    C86F : 20 18 C0             JSR InputTest
     786/    C872 : 4C 77 C8             JMP .._1069.str_skip
     787/    C875 :                      .._1069.str_addr:
     788/    C875 : 65 00                FCB "e",$0
     789/    C877 :                      .._1069.str_skip:
     790/    C877 : A9 75                LDA # (.._1069.str_addr) # $100
     791/    C879 : 85 03                STA $3 ;InputTest.input
     792/    C87B : A9 C8                LDA # (.._1069.str_addr)/$100
     793/    C87D : 85 04                STA $4 ;InputTest.input
     794/    C87F : 4C 85 C8             JMP .._1078.str_skip
     795/    C882 :                      .._1078.str_addr:
     796/    C882 : 30 34 00             FCB "04",$0
     797/    C885 :                      .._1078.str_skip:
     798/    C885 : A9 82                LDA # (.._1078.str_addr) # $100
     799/    C887 : 85 05                STA $5 ;InputTest.output
     800/    C889 : A9 C8                LDA # (.._1078.str_addr)/$100
     801/    C88B : 85 06                STA $6 ;InputTest.output
     802/    C88D : 20 18 C0             JSR InputTest
     803/    C890 : 4C 95 C8             JMP .._1096.str_skip
     804/    C893 :                      .._1096.str_addr:
     805/    C893 : 2E 00                FCB ".",$0
     806/    C895 :                      .._1096.str_skip:
     807/    C895 : A9 93                LDA # (.._1096.str_addr) # $100
     808/    C897 : 85 03                STA $3 ;InputTest.input
     809/    C899 : A9 C8                LDA # (.._1096.str_addr)/$100
     810/    C89B : 85 04                STA $4 ;InputTest.input
     811/    C89D : 4C A3 C8             JMP .._1105.str_skip
     812/    C8A0 :                      .._1105.str_addr:
     813/    C8A0 : 30 34 00             FCB "04",$0
     814/    C8A3 :                      .._1105.str_skip:
     815/    C8A3 : A9 A0                LDA # (.._1105.str_addr) # $100
     816/    C8A5 : 85 05                STA $5 ;InputTest.output
     817/    C8A7 : A9 C8                LDA # (.._1105.str_addr)/$100
     818/    C8A9 : 85 06                STA $6 ;InputTest.output
     819/    C8AB : 20 18 C0             JSR InputTest
     820/    C8AE : 4C B4 C8             JMP .._1123.str_skip
     821/    C8B1 :                      .._1123.str_addr:
     822/    C8B1 : 2E 65 00             FCB ".e",$0
     823/    C8B4 :                      .._1123.str_skip:
     824/    C8B4 : A9 B1                LDA # (.._1123.str_addr) # $100
     825/    C8B6 : 85 03                STA $3 ;InputTest.input
     826/    C8B8 : A9 C8                LDA # (.._1123.str_addr)/$100
     827/    C8BA : 85 04                STA $4 ;InputTest.input
     828/    C8BC : 4C C2 C8             JMP .._1132.str_skip
     829/    C8BF :                      .._1132.str_addr:
     830/    C8BF : 30 34 00             FCB "04",$0
     831/    C8C2 :                      .._1132.str_skip:
     832/    C8C2 : A9 BF                LDA # (.._1132.str_addr) # $100
     833/    C8C4 : 85 05                STA $5 ;InputTest.output
     834/    C8C6 : A9 C8                LDA # (.._1132.str_addr)/$100
     835/    C8C8 : 85 06                STA $6 ;InputTest.output
     836/    C8CA : 20 18 C0             JSR InputTest
     837/    C8CD : 4C D5 C8             JMP .._1150.str_skip
     838/    C8D0 :                      .._1150.str_addr:
     839/    C8D0 : 2D 35 30 30 00       FCB "-500",$0
     840/    C8D5 :                      .._1150.str_skip:
     841/    C8D5 : A9 D0                LDA # (.._1150.str_addr) # $100
     842/    C8D7 : 85 03                STA $3 ;InputTest.input
     843/    C8D9 : A9 C8                LDA # (.._1150.str_addr)/$100
     844/    C8DB : 85 04                STA $4 ;InputTest.input
     845/    C8DD : 4C FB C8             JMP .._1159.str_skip
     846/    C8E0 :                      .._1159.str_addr:
     847/    C8E0 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
     848/    C8FB :                      .._1159.str_skip:
     849/    C8FB : A9 E0                LDA # (.._1159.str_addr) # $100
     850/    C8FD : 85 05                STA $5 ;InputTest.output
     851/    C8FF : A9 C8                LDA # (.._1159.str_addr)/$100
     852/    C901 : 85 06                STA $6 ;InputTest.output
     853/    C903 : 20 18 C0             JSR InputTest
     854/    C906 : 4C 0E C9             JMP .._1177.str_skip
     855/    C909 :                      .._1177.str_addr:
     856/    C909 : 2D 35 30 30 00       FCB "-500",$0
     857/    C90E :                      .._1177.str_skip:
     858/    C90E : A9 09                LDA # (.._1177.str_addr) # $100
     859/    C910 : 85 03                STA $3 ;InputTest.input
     860/    C912 : A9 C9                LDA # (.._1177.str_addr)/$100
     861/    C914 : 85 04                STA $4 ;InputTest.input
     862/    C916 : 4C 34 C9             JMP .._1186.str_skip
     863/    C919 :                      .._1186.str_addr:
     864/    C919 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
     865/    C934 :                      .._1186.str_skip:
     866/    C934 : A9 19                LDA # (.._1186.str_addr) # $100
     867/    C936 : 85 05                STA $5 ;InputTest.output
     868/    C938 : A9 C9                LDA # (.._1186.str_addr)/$100
     869/    C93A : 85 06                STA $6 ;InputTest.output
     870/    C93C : 20 18 C0             JSR InputTest
     871/    C93F : 4C 47 C9             JMP .._1204.str_skip
     872/    C942 :                      .._1204.str_addr:
     873/    C942 : 2D 35 30 30 00       FCB "-500",$0
     874/    C947 :                      .._1204.str_skip:
     875/    C947 : A9 42                LDA # (.._1204.str_addr) # $100
     876/    C949 : 85 03                STA $3 ;InputTest.input
     877/    C94B : A9 C9                LDA # (.._1204.str_addr)/$100
     878/    C94D : 85 04                STA $4 ;InputTest.input
     879/    C94F : 4C 6D C9             JMP .._1213.str_skip
     880/    C952 :                      .._1213.str_addr:
     881/    C952 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
     882/    C96D :                      .._1213.str_skip:
     883/    C96D : A9 52                LDA # (.._1213.str_addr) # $100
     884/    C96F : 85 05                STA $5 ;InputTest.output
     885/    C971 : A9 C9                LDA # (.._1213.str_addr)/$100
     886/    C973 : 85 06                STA $6 ;InputTest.output
     887/    C975 : 20 18 C0             JSR InputTest
     888/    C978 : 4C 80 C9             JMP .._1231.str_skip
     889/    C97B :                      .._1231.str_addr:
     890/    C97B : 2D 35 30 30 00       FCB "-500",$0
     891/    C980 :                      .._1231.str_skip:
     892/    C980 : A9 7B                LDA # (.._1231.str_addr) # $100
     893/    C982 : 85 03                STA $3 ;InputTest.input
     894/    C984 : A9 C9                LDA # (.._1231.str_addr)/$100
     895/    C986 : 85 04                STA $4 ;InputTest.input
     896/    C988 : 4C A6 C9             JMP .._1240.str_skip
     897/    C98B :                      .._1240.str_addr:
     898/    C98B : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
     899/    C9A6 :                      .._1240.str_skip:
     900/    C9A6 : A9 8B                LDA # (.._1240.str_addr) # $100
     901/    C9A8 : 85 05                STA $5 ;InputTest.output
     902/    C9AA : A9 C9                LDA # (.._1240.str_addr)/$100
     903/    C9AC : 85 06                STA $6 ;InputTest.output
     904/    C9AE : 20 18 C0             JSR InputTest
     905/    C9B1 : 4C B9 C9             JMP .._1258.str_skip
     906/    C9B4 :                      .._1258.str_addr:
     907/    C9B4 : 2D 35 30 30 00       FCB "-500",$0
     908/    C9B9 :                      .._1258.str_skip:
     909/    C9B9 : A9 B4                LDA # (.._1258.str_addr) # $100
     910/    C9BB : 85 03                STA $3 ;InputTest.input
     911/    C9BD : A9 C9                LDA # (.._1258.str_addr)/$100
     912/    C9BF : 85 04                STA $4 ;InputTest.input
     913/    C9C1 : 4C DF C9             JMP .._1267.str_skip
     914/    C9C4 :                      .._1267.str_addr:
     915/    C9C4 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
     916/    C9DF :                      .._1267.str_skip:
     917/    C9DF : A9 C4                LDA # (.._1267.str_addr) # $100
     918/    C9E1 : 85 05                STA $5 ;InputTest.output
     919/    C9E3 : A9 C9                LDA # (.._1267.str_addr)/$100
     920/    C9E5 : 85 06                STA $6 ;InputTest.output
     921/    C9E7 : 20 18 C0             JSR InputTest
     922/    C9EA : 4C F2 C9             JMP .._1285.str_skip
     923/    C9ED :                      .._1285.str_addr:
     924/    C9ED : 2D 35 30 30 00       FCB "-500",$0
     925/    C9F2 :                      .._1285.str_skip:
     926/    C9F2 : A9 ED                LDA # (.._1285.str_addr) # $100
     927/    C9F4 : 85 03                STA $3 ;InputTest.input
     928/    C9F6 : A9 C9                LDA # (.._1285.str_addr)/$100
     929/    C9F8 : 85 04                STA $4 ;InputTest.input
     930/    C9FA : 4C 18 CA             JMP .._1294.str_skip
     931/    C9FD :                      .._1294.str_addr:
     932/    C9FD : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
     933/    CA18 :                      .._1294.str_skip:
     934/    CA18 : A9 FD                LDA # (.._1294.str_addr) # $100
     935/    CA1A : 85 05                STA $5 ;InputTest.output
     936/    CA1C : A9 C9                LDA # (.._1294.str_addr)/$100
     937/    CA1E : 85 06                STA $6 ;InputTest.output
     938/    CA20 : 20 18 C0             JSR InputTest
     939/    CA23 : 4C 2B CA             JMP .._1312.str_skip
     940/    CA26 :                      .._1312.str_addr:
     941/    CA26 : 2D 35 30 30 00       FCB "-500",$0
     942/    CA2B :                      .._1312.str_skip:
     943/    CA2B : A9 26                LDA # (.._1312.str_addr) # $100
     944/    CA2D : 85 03                STA $3 ;InputTest.input
     945/    CA2F : A9 CA                LDA # (.._1312.str_addr)/$100
     946/    CA31 : 85 04                STA $4 ;InputTest.input
     947/    CA33 : 4C 51 CA             JMP .._1321.str_skip
     948/    CA36 :                      .._1321.str_addr:
     949/    CA36 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
     950/    CA51 :                      .._1321.str_skip:
     951/    CA51 : A9 36                LDA # (.._1321.str_addr) # $100
     952/    CA53 : 85 05                STA $5 ;InputTest.output
     953/    CA55 : A9 CA                LDA # (.._1321.str_addr)/$100
     954/    CA57 : 85 06                STA $6 ;InputTest.output
     955/    CA59 : 20 18 C0             JSR InputTest
     956/    CA5C : 4C 64 CA             JMP .._1339.str_skip
     957/    CA5F :                      .._1339.str_addr:
     958/    CA5F : 2D 35 30 30 00       FCB "-500",$0
     959/    CA64 :                      .._1339.str_skip:
     960/    CA64 : A9 5F                LDA # (.._1339.str_addr) # $100
     961/    CA66 : 85 03                STA $3 ;InputTest.input
     962/    CA68 : A9 CA                LDA # (.._1339.str_addr)/$100
     963/    CA6A : 85 04                STA $4 ;InputTest.input
     964/    CA6C : 4C 8A CA             JMP .._1348.str_skip
     965/    CA6F :                      .._1348.str_addr:
     966/    CA6F : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
     967/    CA8A :                      .._1348.str_skip:
     968/    CA8A : A9 6F                LDA # (.._1348.str_addr) # $100
     969/    CA8C : 85 05                STA $5 ;InputTest.output
     970/    CA8E : A9 CA                LDA # (.._1348.str_addr)/$100
     971/    CA90 : 85 06                STA $6 ;InputTest.output
     972/    CA92 : 20 18 C0             JSR InputTest
     973/    CA95 : 4C 9D CA             JMP .._1366.str_skip
     974/    CA98 :                      .._1366.str_addr:
     975/    CA98 : 2D 35 30 30 00       FCB "-500",$0
     976/    CA9D :                      .._1366.str_skip:
     977/    CA9D : A9 98                LDA # (.._1366.str_addr) # $100
     978/    CA9F : 85 03                STA $3 ;InputTest.input
     979/    CAA1 : A9 CA                LDA # (.._1366.str_addr)/$100
     980/    CAA3 : 85 04                STA $4 ;InputTest.input
     981/    CAA5 : 4C C3 CA             JMP .._1375.str_skip
     982/    CAA8 :                      .._1375.str_addr:
     983/    CAA8 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
     984/    CAC3 :                      .._1375.str_skip:
     985/    CAC3 : A9 A8                LDA # (.._1375.str_addr) # $100
     986/    CAC5 : 85 05                STA $5 ;InputTest.output
     987/    CAC7 : A9 CA                LDA # (.._1375.str_addr)/$100
     988/    CAC9 : 85 06                STA $6 ;InputTest.output
     989/    CACB : 20 18 C0             JSR InputTest
     990/    CACE : 4C D6 CA             JMP .._1393.str_skip
     991/    CAD1 :                      .._1393.str_addr:
     992/    CAD1 : 2D 35 30 30 00       FCB "-500",$0
     993/    CAD6 :                      .._1393.str_skip:
     994/    CAD6 : A9 D1                LDA # (.._1393.str_addr) # $100
     995/    CAD8 : 85 03                STA $3 ;InputTest.input
     996/    CADA : A9 CA                LDA # (.._1393.str_addr)/$100
     997/    CADC : 85 04                STA $4 ;InputTest.input
     998/    CADE : 4C FC CA             JMP .._1402.str_skip
     999/    CAE1 :                      .._1402.str_addr:
    1000/    CAE1 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
    1001/    CAFC :                      .._1402.str_skip:
    1002/    CAFC : A9 E1                LDA # (.._1402.str_addr) # $100
    1003/    CAFE : 85 05                STA $5 ;InputTest.output
    1004/    CB00 : A9 CA                LDA # (.._1402.str_addr)/$100
    1005/    CB02 : 85 06                STA $6 ;InputTest.output
    1006/    CB04 : 20 18 C0             JSR InputTest
    1007/    CB07 : 4C 0F CB             JMP .._1420.str_skip
    1008/    CB0A :                      .._1420.str_addr:
    1009/    CB0A : 2D 35 30 30 00       FCB "-500",$0
    1010/    CB0F :                      .._1420.str_skip:
    1011/    CB0F : A9 0A                LDA # (.._1420.str_addr) # $100
    1012/    CB11 : 85 03                STA $3 ;InputTest.input
    1013/    CB13 : A9 CB                LDA # (.._1420.str_addr)/$100
    1014/    CB15 : 85 04                STA $4 ;InputTest.input
    1015/    CB17 : 4C 35 CB             JMP .._1429.str_skip
    1016/    CB1A :                      .._1429.str_addr:
    1017/    CB1A : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
    1018/    CB35 :                      .._1429.str_skip:
    1019/    CB35 : A9 1A                LDA # (.._1429.str_addr) # $100
    1020/    CB37 : 85 05                STA $5 ;InputTest.output
    1021/    CB39 : A9 CB                LDA # (.._1429.str_addr)/$100
    1022/    CB3B : 85 06                STA $6 ;InputTest.output
    1023/    CB3D : 20 18 C0             JSR InputTest
    1024/    CB40 : 4C 48 CB             JMP .._1447.str_skip
    1025/    CB43 :                      .._1447.str_addr:
    1026/    CB43 : 2D 35 30 30 00       FCB "-500",$0
    1027/    CB48 :                      .._1447.str_skip:
    1028/    CB48 : A9 43                LDA # (.._1447.str_addr) # $100
    1029/    CB4A : 85 03                STA $3 ;InputTest.input
    1030/    CB4C : A9 CB                LDA # (.._1447.str_addr)/$100
    1031/    CB4E : 85 04                STA $4 ;InputTest.input
    1032/    CB50 : 4C 6E CB             JMP .._1456.str_skip
    1033/    CB53 :                      .._1456.str_addr:
    1034/    CB53 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
    1035/    CB6E :                      .._1456.str_skip:
    1036/    CB6E : A9 53                LDA # (.._1456.str_addr) # $100
    1037/    CB70 : 85 05                STA $5 ;InputTest.output
    1038/    CB72 : A9 CB                LDA # (.._1456.str_addr)/$100
    1039/    CB74 : 85 06                STA $6 ;InputTest.output
    1040/    CB76 : 20 18 C0             JSR InputTest
    1041/    CB79 : 4C 81 CB             JMP .._1474.str_skip
    1042/    CB7C :                      .._1474.str_addr:
    1043/    CB7C : 2D 35 30 30 00       FCB "-500",$0
    1044/    CB81 :                      .._1474.str_skip:
    1045/    CB81 : A9 7C                LDA # (.._1474.str_addr) # $100
    1046/    CB83 : 85 03                STA $3 ;InputTest.input
    1047/    CB85 : A9 CB                LDA # (.._1474.str_addr)/$100
    1048/    CB87 : 85 04                STA $4 ;InputTest.input
    1049/    CB89 : 4C A7 CB             JMP .._1483.str_skip
    1050/    CB8C :                      .._1483.str_addr:
    1051/    CB8C : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
    1052/    CBA7 :                      .._1483.str_skip:
    1053/    CBA7 : A9 8C                LDA # (.._1483.str_addr) # $100
    1054/    CBA9 : 85 05                STA $5 ;InputTest.output
    1055/    CBAB : A9 CB                LDA # (.._1483.str_addr)/$100
    1056/    CBAD : 85 06                STA $6 ;InputTest.output
    1057/    CBAF : 20 18 C0             JSR InputTest
    1058/    CBB2 : 4C BA CB             JMP .._1501.str_skip
    1059/    CBB5 :                      .._1501.str_addr:
    1060/    CBB5 : 2D 35 30 30 00       FCB "-500",$0
    1061/    CBBA :                      .._1501.str_skip:
    1062/    CBBA : A9 B5                LDA # (.._1501.str_addr) # $100
    1063/    CBBC : 85 03                STA $3 ;InputTest.input
    1064/    CBBE : A9 CB                LDA # (.._1501.str_addr)/$100
    1065/    CBC0 : 85 04                STA $4 ;InputTest.input
    1066/    CBC2 : 4C E0 CB             JMP .._1510.str_skip
    1067/    CBC5 :                      .._1510.str_addr:
    1068/    CBC5 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
    1069/    CBE0 :                      .._1510.str_skip:
    1070/    CBE0 : A9 C5                LDA # (.._1510.str_addr) # $100
    1071/    CBE2 : 85 05                STA $5 ;InputTest.output
    1072/    CBE4 : A9 CB                LDA # (.._1510.str_addr)/$100
    1073/    CBE6 : 85 06                STA $6 ;InputTest.output
    1074/    CBE8 : 20 18 C0             JSR InputTest
    1075/    CBEB : 4C 03 CC             JMP .._1528.str_skip
    1076/    CBEE :                      .._1528.str_addr:
    1077/    CBEE : 5C 6E 5C 67 41 6C    FCB "\\n\\gAll tests passed",$0
                    6C 20 74 65 73 74 
                    73 20 70 61 73 73 
                    65 64 00          
    1078/    CC03 :                      .._1528.str_skip:
    1079/    CC03 : A9 EE                LDA # (.._1528.str_addr) # $100
    1080/    CC05 : 85 0A                STA $A ;DebugText.msg
    1081/    CC07 : A9 CB                LDA # (.._1528.str_addr)/$100
    1082/    CC09 : 85 0B                STA $B ;DebugText.msg
    1083/    CC0B : 20 00 C0             JSR DebugText
    1084/    CC0E : 4C 24 CC             JMP .._1547.str_skip
    1085/    CC11 :                      .._1547.str_addr:
    1086/    CC11 : 5C 6E 5C 6C 53 69    FCB "\\n\\lSize of code: ",$0
                    7A 65 20 6F 66 20 
                    63 6F 64 65 3A 20 
                    00                
    1087/    CC24 :                      .._1547.str_skip:
    1088/    CC24 : A9 11                LDA # (.._1547.str_addr) # $100
    1089/    CC26 : 85 0A                STA $A ;DebugText.msg
    1090/    CC28 : A9 CC                LDA # (.._1547.str_addr)/$100
    1091/    CC2A : 85 0B                STA $B ;DebugText.msg
    1092/    CC2C : 20 00 C0             JSR DebugText
    1093/    CC2F : A2 0B                LDX # (code_end-code_begin)/$100
    1094/    CC31 : A9 B5                LDA # (code_end-code_begin)#$100
    1095/    CC33 : 8D EA FF             STA $FFEA
    1096/    CC36 : 4C 40 CC             JMP .._1566.str_skip
    1097/    CC39 :                      .._1566.str_addr:
    1098/    CC39 : 20 62 79 74 65 73    FCB " bytes",$0
                    00                
    1099/    CC40 :                      .._1566.str_skip:
    1100/    CC40 : A9 39                LDA # (.._1566.str_addr) # $100
    1101/    CC42 : 85 0A                STA $A ;DebugText.msg
    1102/    CC44 : A9 CC                LDA # (.._1566.str_addr)/$100
    1103/    CC46 : 85 0B                STA $B ;DebugText.msg
    1104/    CC48 : 20 00 C0             JSR DebugText
    1105/    CC4B : 60                   RTS
    1106/     900 :                      ORG $900
    1107/     900 :                      
    1108/     900 :                     code_begin:
    1109/     900 : 4C 34 14             JMP main
    1110/     903 :                      
    1111/     903 :                     font_table:
    1112/     903 : 00 00 00 00 00 00    FCB $0,$0,$0,$0,$0,$0,$0,$0
                    00 00             
    1113/     90B : 30 78 78 30 30 00    FCB $30,$78,$78,$30,$30,$0,$30,$0
                    30 00             
    1114/     913 : 6C 6C 6C 00 00 00    FCB $6C,$6C,$6C,$0,$0,$0,$0,$0
                    00 00             
    1115/     91B : 6C 6C FE 6C FE 6C    FCB $6C,$6C,$FE,$6C,$FE,$6C,$6C,$0
                    6C 00             
    1116/     923 : 30 7C C0 78 0C F8    FCB $30,$7C,$C0,$78,$C,$F8,$30,$0
                    30 00             
    1117/     92B : 00 C6 CC 18 30 66    FCB $0,$C6,$CC,$18,$30,$66,$C6,$0
                    C6 00             
    1118/     933 : 38 6C 38 76 DC CC    FCB $38,$6C,$38,$76,$DC,$CC,$76,$0
                    76 00             
    1119/     93B : 60 60 C0 00 00 00    FCB $60,$60,$C0,$0,$0,$0,$0,$0
                    00 00             
    1120/     943 : 18 30 60 60 60 30    FCB $18,$30,$60,$60,$60,$30,$18,$0
                    18 00             
    1121/     94B : 60 30 18 18 18 30    FCB $60,$30,$18,$18,$18,$30,$60,$0
                    60 00             
    1122/     953 : 00 66 3C FF 3C 66    FCB $0,$66,$3C,$FF,$3C,$66,$0,$0
                    00 00             
    1123/     95B : 00 30 30 FC 30 30    FCB $0,$30,$30,$FC,$30,$30,$0,$0
                    00 00             
    1124/     963 : 00 00 00 00 00 30    FCB $0,$0,$0,$0,$0,$30,$30,$60
                    30 60             
    1125/     96B : 00 00 00 FC 00 00    FCB $0,$0,$0,$FC,$0,$0,$0,$0
                    00 00             
    1126/     973 : 00 00 00 00 00 30    FCB $0,$0,$0,$0,$0,$30,$30,$0
                    30 00             
    1127/     97B : 06 0C 18 30 60 C0    FCB $6,$C,$18,$30,$60,$C0,$80,$0
                    80 00             
    1128/     983 : 7C C6 CE DE F6 E6    FCB $7C,$C6,$CE,$DE,$F6,$E6,$7C,$0
                    7C 00             
    1129/     98B : 30 70 30 30 30 30    FCB $30,$70,$30,$30,$30,$30,$FC,$0
                    FC 00             
    1130/     993 : 78 CC 0C 38 60 CC    FCB $78,$CC,$C,$38,$60,$CC,$FC,$0
                    FC 00             
    1131/     99B : 78 CC 0C 38 0C CC    FCB $78,$CC,$C,$38,$C,$CC,$78,$0
                    78 00             
    1132/     9A3 : 1C 3C 6C CC FE 0C    FCB $1C,$3C,$6C,$CC,$FE,$C,$1E,$0
                    1E 00             
    1133/     9AB : FC C0 F8 0C 0C CC    FCB $FC,$C0,$F8,$C,$C,$CC,$78,$0
                    78 00             
    1134/     9B3 : 38 60 C0 F8 CC CC    FCB $38,$60,$C0,$F8,$CC,$CC,$78,$0
                    78 00             
    1135/     9BB : FC CC 0C 18 30 30    FCB $FC,$CC,$C,$18,$30,$30,$30,$0
                    30 00             
    1136/     9C3 : 78 CC CC 78 CC CC    FCB $78,$CC,$CC,$78,$CC,$CC,$78,$0
                    78 00             
    1137/     9CB : 78 CC CC 7C 0C 18    FCB $78,$CC,$CC,$7C,$C,$18,$70,$0
                    70 00             
    1138/     9D3 : 00 30 30 00 00 30    FCB $0,$30,$30,$0,$0,$30,$30,$0
                    30 00             
    1139/     9DB : 00 30 30 00 00 30    FCB $0,$30,$30,$0,$0,$30,$30,$60
                    30 60             
    1140/     9E3 : 18 30 60 C0 60 30    FCB $18,$30,$60,$C0,$60,$30,$18,$0
                    18 00             
    1141/     9EB : 00 00 FC 00 00 FC    FCB $0,$0,$FC,$0,$0,$FC,$0,$0
                    00 00             
    1142/     9F3 : 60 30 18 0C 18 30    FCB $60,$30,$18,$C,$18,$30,$60,$0
                    60 00             
    1143/     9FB : 78 CC 0C 18 30 00    FCB $78,$CC,$C,$18,$30,$0,$30,$0
                    30 00             
    1144/     A03 : 7C C6 DE DE DE C0    FCB $7C,$C6,$DE,$DE,$DE,$C0,$78,$0
                    78 00             
    1145/     A0B : 30 78 CC CC FC CC    FCB $30,$78,$CC,$CC,$FC,$CC,$CC,$0
                    CC 00             
    1146/     A13 : FC 66 66 7C 66 66    FCB $FC,$66,$66,$7C,$66,$66,$FC,$0
                    FC 00             
    1147/     A1B : 3C 66 C0 C0 C0 66    FCB $3C,$66,$C0,$C0,$C0,$66,$3C,$0
                    3C 00             
    1148/     A23 : F8 6C 66 66 66 6C    FCB $F8,$6C,$66,$66,$66,$6C,$F8,$0
                    F8 00             
    1149/     A2B : FE 62 68 78 68 62    FCB $FE,$62,$68,$78,$68,$62,$FE,$0
                    FE 00             
    1150/     A33 : FE 62 68 78 68 60    FCB $FE,$62,$68,$78,$68,$60,$F0,$0
                    F0 00             
    1151/     A3B : 3C 66 C0 C0 CE 66    FCB $3C,$66,$C0,$C0,$CE,$66,$3E,$0
                    3E 00             
    1152/     A43 : CC CC CC FC CC CC    FCB $CC,$CC,$CC,$FC,$CC,$CC,$CC,$0
                    CC 00             
    1153/     A4B : 78 30 30 30 30 30    FCB $78,$30,$30,$30,$30,$30,$78,$0
                    78 00             
    1154/     A53 : 1E 0C 0C 0C CC CC    FCB $1E,$C,$C,$C,$CC,$CC,$78,$0
                    78 00             
    1155/     A5B : E6 66 6C 78 6C 66    FCB $E6,$66,$6C,$78,$6C,$66,$E6,$0
                    E6 00             
    1156/     A63 : F0 60 60 60 62 66    FCB $F0,$60,$60,$60,$62,$66,$FE,$0
                    FE 00             
    1157/     A6B : C6 EE FE FE D6 C6    FCB $C6,$EE,$FE,$FE,$D6,$C6,$C6,$0
                    C6 00             
    1158/     A73 : C6 E6 F6 DE CE C6    FCB $C6,$E6,$F6,$DE,$CE,$C6,$C6,$0
                    C6 00             
    1159/     A7B : 38 6C C6 C6 C6 6C    FCB $38,$6C,$C6,$C6,$C6,$6C,$38,$0
                    38 00             
    1160/     A83 : FC 66 66 7C 60 60    FCB $FC,$66,$66,$7C,$60,$60,$F0,$0
                    F0 00             
    1161/     A8B : 78 CC CC CC DC 78    FCB $78,$CC,$CC,$CC,$DC,$78,$1C,$0
                    1C 00             
    1162/     A93 : FC 66 66 7C 6C 66    FCB $FC,$66,$66,$7C,$6C,$66,$E6,$0
                    E6 00             
    1163/     A9B : 78 CC E0 70 1C CC    FCB $78,$CC,$E0,$70,$1C,$CC,$78,$0
                    78 00             
    1164/     AA3 : FC B4 30 30 30 30    FCB $FC,$B4,$30,$30,$30,$30,$78,$0
                    78 00             
    1165/     AAB : CC CC CC CC CC CC    FCB $CC,$CC,$CC,$CC,$CC,$CC,$FC,$0
                    FC 00             
    1166/     AB3 : CC CC CC CC CC 78    FCB $CC,$CC,$CC,$CC,$CC,$78,$30,$0
                    30 00             
    1167/     ABB : C6 C6 C6 D6 FE EE    FCB $C6,$C6,$C6,$D6,$FE,$EE,$C6,$0
                    C6 00             
    1168/     AC3 : C6 C6 6C 38 38 6C    FCB $C6,$C6,$6C,$38,$38,$6C,$C6,$0
                    C6 00             
    1169/     ACB : CC CC CC 78 30 30    FCB $CC,$CC,$CC,$78,$30,$30,$78,$0
                    78 00             
    1170/     AD3 : FE C6 8C 18 32 66    FCB $FE,$C6,$8C,$18,$32,$66,$FE,$0
                    FE 00             
    1171/     ADB : 78 60 60 60 60 60    FCB $78,$60,$60,$60,$60,$60,$78,$0
                    78 00             
    1172/     AE3 : C0 60 30 18 0C 06    FCB $C0,$60,$30,$18,$C,$6,$2,$0
                    02 00             
    1173/     AEB : 78 18 18 18 18 18    FCB $78,$18,$18,$18,$18,$18,$78,$0
                    78 00             
    1174/     AF3 : 10 38 6C C6 00 00    FCB $10,$38,$6C,$C6,$0,$0,$0,$0
                    00 00             
    1175/     AFB : 00 00 00 00 00 00    FCB $0,$0,$0,$0,$0,$0,$0,$FF
                    00 FF             
    1176/     B03 : FF FF FF FF FF FF    FCB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
                    FF FF             
    1177/     B0B : 08 18 38 78 38 18    FCB $8,$18,$38,$78,$38,$18,$8,$0
                    08 00             
    1178/     B13 : 00 00 00 00 FF FF    FCB $0,$0,$0,$0,$FF,$FF,$FF,$FF
                    FF FF             
    1179/     B1B : 00 1E 00 00 00 00    FCB $0,$1E,$0,$0,$0,$0,$0,$0
                    00 00             
    1180/     B23 : FF FF FF FF FF FF    FCB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
                    FF FF             
    1181/     B2B : 00 00 EE 88 EE 88    FCB $0,$0,$EE,$88,$EE,$88,$EE,$0
                    EE 00             
    1182/     B33 :                      
    1183/     B33 :                     setup:
    1184/     B33 : 78                   SEI
    1185/     B34 : D8                   CLD
    1186/     B35 : A2 00                LDX #$0
    1187/     B37 : 8E 91 01             STX stack_count
    1188/     B3A : A9 00                LDA #$0
    1189/     B3C : 8D 90 01             STA font_inverted
    1190/     B3F : A9 04                LDA #$4
    1191/     B41 : 8D E1 FF             STA $FFE1
    1192/     B44 : A9 05                LDA #$5
    1193/     B46 : 8D E2 FF             STA $FFE2
    1194/     B49 : 60                   RTS
    1195/     B4A :                      
    1196/     B4A :                     ReadKey:
    1197/     B4A : AD E4 FF             LDA $FFE4
    1198/     B4D : 60                   RTS
    1199/     B4E :                      
    1200/     B4E :                     LCD_clrscr:
    1201/     B4E : A9 00                LDA #$0
    1202/     B50 : 85 23                STA screen_ptr
    1203/     B52 : A9 40                LDA #$40
    1204/     B54 : 85 24                STA screen_ptr+$1
    1205/     B56 : A9 80                LDA #$80
    1206/     B58 : 85 03                STA $3 ;counter
    1207/     B5A : A9 2A                LDA #$2A
    1208/     B5C : A0 00                LDY #$0
    1209/     B5E :                      .loop:
    1210/     B5E : 91 23                STA (screen_ptr),Y
    1211/     B60 : C8                   INY
    1212/     B61 : D0 FB                BNE .loop
    1213/     B63 : E6 24                INC screen_ptr+$1
    1214/     B65 : C6 03                DEC $3 ;counter
    1215/     B67 : D0 F5                BNE .loop
    1216/     B69 : A9 00                LDA #$0
    1217/     B6B : 85 23                STA screen_ptr
    1218/     B6D : A9 40                LDA #$40
    1219/     B6F : 85 24                STA screen_ptr+$1
    1220/     B71 : 60                   RTS
    1221/     B72 :                      
    1222/     B72 :                     LCD_char:
    1223/     B72 : A5 08                LDA $8 ;c_out
    1224/     B74 : C9 20                CMP #$20
    1225/     B76 : 90 03                BCC .._1668.skip
    1226/     B78 : 4C 7C 0B             JMP .if0
    1227/     B7B :                      .._1668.skip:
    1228/     B7B : 60                   RTS
    1229/     B7C :                      .if0:
    1230/     B7C : C9 66                CMP #$66
    1231/     B7E : B0 03                BCS .._1673.skip
    1232/     B80 : 4C 84 0B             JMP .if1
    1233/     B83 :                      .._1673.skip:
    1234/     B83 : 60                   RTS
    1235/     B84 :                      .if1:
    1236/     B84 : 38                   SEC
    1237/     B85 : E9 20                SBC #$20
    1238/     B87 : 85 09                STA $9 ;pixel_ptr
    1239/     B89 : A9 00                LDA #$0
    1240/     B8B : 85 0A                STA $A ;pixel_ptr
    1241/     B8D : 06 09                ASL $9 ;pixel_ptr
    1242/     B8F : 06 09                ASL $9 ;pixel_ptr
    1243/     B91 : 26 0A                ROL $A ;pixel_ptr
    1244/     B93 : 06 09                ASL $9 ;pixel_ptr
    1245/     B95 : 26 0A                ROL $A ;pixel_ptr
    1246/     B97 : A9 03                LDA #font_table # $100
    1247/     B99 : 65 09                ADC $9 ;pixel_ptr
    1248/     B9B : 85 09                STA $9 ;pixel_ptr
    1249/     B9D : A9 09                LDA #font_table/$100
    1250/     B9F : 65 0A                ADC $A ;pixel_ptr
    1251/     BA1 : 85 0A                STA $A ;pixel_ptr
    1252/     BA3 : A9 00                LDA #$0
    1253/     BA5 : 85 0B                STA $B ;pixel_index
    1254/     BA7 : A9 08                LDA #$8
    1255/     BA9 : 85 0D                STA $D ;lc1
    1256/     BAB :                      .loop:
    1257/     BAB : A9 08                LDA #$8
    1258/     BAD : 85 0E                STA $E ;lc2
    1259/     BAF : A4 0B                LDY $B ;pixel_index
    1260/     BB1 : E6 0B                INC $B ;pixel_index
    1261/     BB3 : B1 09                LDA ($9),Y ;pixel_ptr
    1262/     BB5 : 4D 90 01             EOR font_inverted
    1263/     BB8 : 85 0C                STA $C ;pixel
    1264/     BBA : A0 00                LDY #$0
    1265/     BBC :                      .loop.inner:
    1266/     BBC : 26 0C                ROL $C ;pixel
    1267/     BBE : A9 00                LDA #$0
    1268/     BC0 : B0 02                BCS .color
    1269/     BC2 : A9 2A                LDA #$2A
    1270/     BC4 :                      .color:
    1271/     BC4 : 91 23                STA (screen_ptr),Y
    1272/     BC6 : E6 24                INC screen_ptr+$1
    1273/     BC8 : 91 23                STA (screen_ptr),Y
    1274/     BCA : C8                   INY
    1275/     BCB : 91 23                STA (screen_ptr),Y
    1276/     BCD : C6 24                DEC screen_ptr+$1
    1277/     BCF : 91 23                STA (screen_ptr),Y
    1278/     BD1 : C8                   INY
    1279/     BD2 : C6 0E                DEC $E ;lc2
    1280/     BD4 : D0 E6                BNE .loop.inner
    1281/     BD6 : E6 24                INC screen_ptr+$1
    1282/     BD8 : E6 24                INC screen_ptr+$1
    1283/     BDA : C6 0D                DEC $D ;lc1
    1284/     BDC : D0 CD                BNE .loop
    1285/     BDE : 18                   CLC
    1286/     BDF : A5 23                LDA screen_ptr
    1287/     BE1 : 69 10                ADC #$10
    1288/     BE3 : 85 23                STA screen_ptr
    1289/     BE5 : 38                   SEC
    1290/     BE6 : A5 24                LDA screen_ptr+$1
    1291/     BE8 : E9 10                SBC #$10
    1292/     BEA : 85 24                STA screen_ptr+$1
    1293/     BEC : 60                   RTS
    1294/     BED :                      
    1295/     BED :                     LCD_print:
    1296/     BED : A9 00                LDA #$0
    1297/     BEF : 85 15                STA $15 ;index
    1298/     BF1 :                      .loop:
    1299/     BF1 : A4 15                LDY $15 ;index
    1300/     BF3 : B1 13                LDA ($13),Y ;source
    1301/     BF5 : F0 0E                BEQ .done
    1302/     BF7 : 85 16                STA $16 ;arg
    1303/     BF9 : A5 16                LDA $16 ;arg
    1304/     BFB : 85 08                STA $8 ;LCD_char.c_out
    1305/     BFD : 20 72 0B             JSR LCD_char
    1306/     C00 : E6 15                INC $15 ;index
    1307/     C02 : 4C F1 0B             JMP .loop
    1308/     C05 :                      .done:
    1309/     C05 : 60                   RTS
    1310/     C06 :                      
    1311/     C06 :                     MemCopy:
    1312/     C06 : A0 00                LDY #$0
    1313/     C08 :                      .loop:
    1314/     C08 : B1 03                LDA ($3),Y ;source
    1315/     C0A : 91 05                STA ($5),Y ;dest
    1316/     C0C : C8                   INY
    1317/     C0D : C4 07                CPY $7 ;count
    1318/     C0F : D0 F7                BNE .loop
    1319/     C11 : 60                   RTS
    1320/     C12 :                      
    1321/     C12 :                     BCD_Reverse:
    1322/     C12 : A0 00                LDY #$0
    1323/     C14 : 08                   PHP
    1324/     C15 : F8                   SED
    1325/     C16 : 38                   SEC
    1326/     C17 :                      .loop:
    1327/     C17 : A9 00                LDA #$0
    1328/     C19 : F1 15                SBC ($15),Y ;source
    1329/     C1B : 91 15                STA ($15),Y ;source
    1330/     C1D : C8                   INY
    1331/     C1E : C6 17                DEC $17 ;count
    1332/     C20 : D0 F5                BNE .loop
    1333/     C22 : 28                   PLP
    1334/     C23 : 60                   RTS
    1335/     C24 :                      
    1336/     C24 :                     DigitHigh:
    1337/     C24 : A5 03                LDA $3 ;digit
    1338/     C26 : 4A                   LSR
    1339/     C27 : 4A                   LSR
    1340/     C28 : 4A                   LSR
    1341/     C29 : 4A                   LSR
    1342/     C2A : 18                   CLC
    1343/     C2B : 69 30                ADC #$30
    1344/     C2D : 85 03                STA $3 ;digit
    1345/     C2F : A5 03                LDA $3 ;digit
    1346/     C31 : 85 08                STA $8 ;LCD_char.c_out
    1347/     C33 : 20 72 0B             JSR LCD_char
    1348/     C36 : 60                   RTS
    1349/     C37 :                      
    1350/     C37 :                     DigitLow:
    1351/     C37 : A5 03                LDA $3 ;digit
    1352/     C39 : 29 0F                AND #$F
    1353/     C3B : 18                   CLC
    1354/     C3C : 69 30                ADC #$30
    1355/     C3E : 85 03                STA $3 ;digit
    1356/     C40 : A5 03                LDA $3 ;digit
    1357/     C42 : 85 08                STA $8 ;LCD_char.c_out
    1358/     C44 : 20 72 0B             JSR LCD_char
    1359/     C47 : 60                   RTS
    1360/     C48 :                      
    1361/     C48 :                     DrawFloat:
    1362/     C48 : A5 13                LDA $13 ;source
    1363/     C4A : 85 03                STA $3 ;MemCopy.source
    1364/     C4C : A5 14                LDA $14 ;source
    1365/     C4E : 85 04                STA $4 ;MemCopy.source
    1366/     C50 : A9 25                LDA # (R0) # $100
    1367/     C52 : 85 05                STA $5 ;MemCopy.dest
    1368/     C54 : A9 00                LDA # (R0)/$100
    1369/     C56 : 85 06                STA $6 ;MemCopy.dest
    1370/     C58 : A9 09                LDA #$9
    1371/     C5A : 85 07                STA $7 ;MemCopy.count
    1372/     C5C : 20 06 0C             JSR MemCopy
    1373/     C5F : A9 20                LDA #$20
    1374/     C61 : 85 17                STA $17 ;sign
    1375/     C63 : A0 08                LDY #$8
    1376/     C65 : B1 13                LDA ($13),Y ;source
    1377/     C67 : 29 80                AND #$80
    1378/     C69 : F0 04                BEQ .positive
    1379/     C6B : A9 63                LDA #$63
    1380/     C6D : 85 17                STA $17 ;sign
    1381/     C6F :                      .positive:
    1382/     C6F : A5 17                LDA $17 ;sign
    1383/     C71 : 85 08                STA $8 ;LCD_char.c_out
    1384/     C73 : 20 72 0B             JSR LCD_char
    1385/     C76 : A0 06                LDY #$6
    1386/     C78 : B9 25 00             LDA R0,Y
    1387/     C7B : 85 16                STA $16 ;arg
    1388/     C7D : A5 16                LDA $16 ;arg
    1389/     C7F : 85 03                STA $3 ;DigitHigh.digit
    1390/     C81 : 20 24 0C             JSR DigitHigh
    1391/     C84 : A9 2E                LDA #$2E
    1392/     C86 : 85 08                STA $8 ;LCD_char.c_out
    1393/     C88 : 20 72 0B             JSR LCD_char
    1394/     C8B : A5 16                LDA $16 ;arg
    1395/     C8D : 85 03                STA $3 ;DigitLow.digit
    1396/     C8F : 20 37 0C             JSR DigitLow
    1397/     C92 : A9 05                LDA #$5
    1398/     C94 : 85 15                STA $15 ;index
    1399/     C96 :                      .loop:
    1400/     C96 : A4 15                LDY $15 ;index
    1401/     C98 : B9 25 00             LDA R0,Y
    1402/     C9B : 85 16                STA $16 ;arg
    1403/     C9D : A5 16                LDA $16 ;arg
    1404/     C9F : 85 03                STA $3 ;DigitHigh.digit
    1405/     CA1 : 20 24 0C             JSR DigitHigh
    1406/     CA4 : A5 16                LDA $16 ;arg
    1407/     CA6 : 85 03                STA $3 ;DigitLow.digit
    1408/     CA8 : 20 37 0C             JSR DigitLow
    1409/     CAB : C6 15                DEC $15 ;index
    1410/     CAD : A5 15                LDA $15 ;index
    1411/     CAF : C9 02                CMP #$2
    1412/     CB1 : D0 E3                BNE .loop
    1413/     CB3 : A9 2B                LDA #$2B
    1414/     CB5 : 85 17                STA $17 ;sign
    1415/     CB7 : A0 08                LDY #$8
    1416/     CB9 : B1 13                LDA ($13),Y ;source
    1417/     CBB : 29 40                AND #$40
    1418/     CBD : F0 04                BEQ .positive_e
    1419/     CBF : A9 63                LDA #$63
    1420/     CC1 : 85 17                STA $17 ;sign
    1421/     CC3 :                      .positive_e:
    1422/     CC3 : A5 17                LDA $17 ;sign
    1423/     CC5 : 85 08                STA $8 ;LCD_char.c_out
    1424/     CC7 : 20 72 0B             JSR LCD_char
    1425/     CCA : A0 08                LDY #$8
    1426/     CCC : B9 25 00             LDA R0,Y
    1427/     CCF : 85 16                STA $16 ;arg
    1428/     CD1 : A5 16                LDA $16 ;arg
    1429/     CD3 : 85 03                STA $3 ;DigitLow.digit
    1430/     CD5 : 20 37 0C             JSR DigitLow
    1431/     CD8 : A0 07                LDY #$7
    1432/     CDA : B9 25 00             LDA R0,Y
    1433/     CDD : 85 16                STA $16 ;arg
    1434/     CDF : A5 16                LDA $16 ;arg
    1435/     CE1 : 85 03                STA $3 ;DigitHigh.digit
    1436/     CE3 : 20 24 0C             JSR DigitHigh
    1437/     CE6 : A5 16                LDA $16 ;arg
    1438/     CE8 : 85 03                STA $3 ;DigitLow.digit
    1439/     CEA : 20 37 0C             JSR DigitLow
    1440/     CED : 60                   RTS
    1441/     CEE :                      
    1442/     CEE :                     HexHigh:
    1443/     CEE : A5 06                LDA $6 ;digit
    1444/     CF0 : 4A                   LSR
    1445/     CF1 : 4A                   LSR
    1446/     CF2 : 4A                   LSR
    1447/     CF3 : 4A                   LSR
    1448/     CF4 : C9 0A                CMP #$A
    1449/     CF6 : 90 08                BCC .print_digit
    1450/     CF8 : 18                   CLC
    1451/     CF9 : 69 37                ADC #$37
    1452/     CFB : 85 07                STA $7 ;arg
    1453/     CFD : 4C 05 0D             JMP .done
    1454/     D00 :                      .print_digit:
    1455/     D00 : 18                   CLC
    1456/     D01 : 69 30                ADC #$30
    1457/     D03 : 85 07                STA $7 ;arg
    1458/     D05 :                      .done:
    1459/     D05 : A5 07                LDA $7 ;arg
    1460/     D07 : 85 08                STA $8 ;LCD_char.c_out
    1461/     D09 : 20 72 0B             JSR LCD_char
    1462/     D0C : 60                   RTS
    1463/     D0D :                      
    1464/     D0D :                     HexLow:
    1465/     D0D : A5 06                LDA $6 ;digit
    1466/     D0F : 29 0F                AND #$F
    1467/     D11 : C9 0A                CMP #$A
    1468/     D13 : 90 08                BCC .print_digit
    1469/     D15 : 18                   CLC
    1470/     D16 : 69 37                ADC #$37
    1471/     D18 : 85 07                STA $7 ;arg
    1472/     D1A : 4C 22 0D             JMP .done
    1473/     D1D :                      .print_digit:
    1474/     D1D : 18                   CLC
    1475/     D1E : 69 30                ADC #$30
    1476/     D20 : 85 07                STA $7 ;arg
    1477/     D22 :                      .done:
    1478/     D22 : A5 07                LDA $7 ;arg
    1479/     D24 : 85 08                STA $8 ;LCD_char.c_out
    1480/     D26 : 20 72 0B             JSR LCD_char
    1481/     D29 : 60                   RTS
    1482/     D2A :                      
    1483/     D2A :                     DrawHex:
    1484/     D2A : A9 24                LDA #$24
    1485/     D2C : 85 08                STA $8 ;LCD_char.c_out
    1486/     D2E : 20 72 0B             JSR LCD_char
    1487/     D31 : A0 02                LDY #$2
    1488/     D33 : B1 03                LDA ($3),Y ;source
    1489/     D35 : 85 05                STA $5 ;arg
    1490/     D37 : A5 05                LDA $5 ;arg
    1491/     D39 : 85 06                STA $6 ;HexHigh.digit
    1492/     D3B : 20 EE 0C             JSR HexHigh
    1493/     D3E : A5 05                LDA $5 ;arg
    1494/     D40 : 85 06                STA $6 ;HexLow.digit
    1495/     D42 : 20 0D 0D             JSR HexLow
    1496/     D45 : A0 01                LDY #$1
    1497/     D47 : B1 03                LDA ($3),Y ;source
    1498/     D49 : 85 05                STA $5 ;arg
    1499/     D4B : A5 05                LDA $5 ;arg
    1500/     D4D : 85 06                STA $6 ;HexHigh.digit
    1501/     D4F : 20 EE 0C             JSR HexHigh
    1502/     D52 : A5 05                LDA $5 ;arg
    1503/     D54 : 85 06                STA $6 ;HexLow.digit
    1504/     D56 : 20 0D 0D             JSR HexLow
    1505/     D59 : 60                   RTS
    1506/     D5A :                      
    1507/     D5A :                     DrawString:
    1508/     D5A : A9 22                LDA #$22
    1509/     D5C : 85 08                STA $8 ;LCD_char.c_out
    1510/     D5E : 20 72 0B             JSR LCD_char
    1511/     D61 : A9 01                LDA #$1
    1512/     D63 : 85 06                STA $6 ;index
    1513/     D65 :                      .loop:
    1514/     D65 : A4 06                LDY $6 ;index
    1515/     D67 : B1 03                LDA ($3),Y ;source
    1516/     D69 : F0 11                BEQ .done
    1517/     D6B : 85 05                STA $5 ;arg
    1518/     D6D : A5 05                LDA $5 ;arg
    1519/     D6F : 85 08                STA $8 ;LCD_char.c_out
    1520/     D71 : 20 72 0B             JSR LCD_char
    1521/     D74 : E6 06                INC $6 ;index
    1522/     D76 : A5 06                LDA $6 ;index
    1523/     D78 : C9 09                CMP #$9
    1524/     D7A : D0 E9                BNE .loop
    1525/     D7C :                      .done:
    1526/     D7C : A9 22                LDA #$22
    1527/     D7E : 85 08                STA $8 ;LCD_char.c_out
    1528/     D80 : 20 72 0B             JSR LCD_char
    1529/     D83 : 60                   RTS
    1530/     D84 :                      
    1531/     D84 :                     DrawStack:
    1532/     D84 : 8A                   TXA
    1533/     D85 : 18                   CLC
    1534/     D86 : 69 24                ADC #$24
    1535/     D88 : 85 11                STA $11 ;address
    1536/     D8A : A9 00                LDA #$0
    1537/     D8C : 85 12                STA $12 ;address
    1538/     D8E : 20 4E 0B             JSR LCD_clrscr
    1539/     D91 : 4C 98 0D             JMP .._2409.str_skip
    1540/     D94 :                      .._2409.str_addr:
    1541/     D94 : 52 41 44 00          FCB "RAD",$0
    1542/     D98 :                      .._2409.str_skip:
    1543/     D98 : A9 94                LDA # (.._2409.str_addr) # $100
    1544/     D9A : 85 13                STA $13 ;LCD_print.source
    1545/     D9C : A9 0D                LDA # (.._2409.str_addr)/$100
    1546/     D9E : 85 14                STA $14 ;LCD_print.source
    1547/     DA0 : 20 ED 0B             JSR LCD_print
    1548/     DA3 : A9 35                LDA #$35
    1549/     DA5 : 85 0F                STA $F ;character
    1550/     DA7 : A9 05                LDA #$5
    1551/     DA9 : 85 10                STA $10 ;counter
    1552/     DAB :                      .loop:
    1553/     DAB : A9 00                LDA #$0
    1554/     DAD : 85 23                STA screen_ptr
    1555/     DAF : A5 24                LDA screen_ptr+$1
    1556/     DB1 : 18                   CLC
    1557/     DB2 : 69 10                ADC #$10
    1558/     DB4 : 85 24                STA screen_ptr+$1
    1559/     DB6 : A5 0F                LDA $F ;character
    1560/     DB8 : 85 08                STA $8 ;LCD_char.c_out
    1561/     DBA : 20 72 0B             JSR LCD_char
    1562/     DBD : A9 3A                LDA #$3A
    1563/     DBF : 85 08                STA $8 ;LCD_char.c_out
    1564/     DC1 : 20 72 0B             JSR LCD_char
    1565/     DC4 : C6 10                DEC $10 ;counter
    1566/     DC6 : A5 10                LDA $10 ;counter
    1567/     DC8 : CD 91 01             CMP stack_count
    1568/     DCB : B0 3A                BCS .no_item
    1569/     DCD : A0 00                LDY #$0
    1570/     DCF : B1 11                LDA ($11),Y ;address
    1571/     DD1 : C9 01                CMP #$1
    1572/     DD3 : D0 0E                BNE .not_float
    1573/     DD5 : A5 11                LDA $11 ;address
    1574/     DD7 : 85 13                STA $13 ;DrawFloat.source
    1575/     DD9 : A5 12                LDA $12 ;address
    1576/     DDB : 85 14                STA $14 ;DrawFloat.source
    1577/     DDD : 20 48 0C             JSR DrawFloat
    1578/     DE0 : 4C 07 0E             JMP .item_done
    1579/     DE3 :                      .not_float:
    1580/     DE3 : C9 02                CMP #$2
    1581/     DE5 : D0 0E                BNE .not_str
    1582/     DE7 : A5 11                LDA $11 ;address
    1583/     DE9 : 85 03                STA $3 ;DrawString.source
    1584/     DEB : A5 12                LDA $12 ;address
    1585/     DED : 85 04                STA $4 ;DrawString.source
    1586/     DEF : 20 5A 0D             JSR DrawString
    1587/     DF2 : 4C 07 0E             JMP .item_done
    1588/     DF5 :                      .not_str:
    1589/     DF5 : C9 03                CMP #$3
    1590/     DF7 : D0 0E                BNE .not_hex
    1591/     DF9 : A5 11                LDA $11 ;address
    1592/     DFB : 85 03                STA $3 ;DrawHex.source
    1593/     DFD : A5 12                LDA $12 ;address
    1594/     DFF : 85 04                STA $4 ;DrawHex.source
    1595/     E01 : 20 2A 0D             JSR DrawHex
    1596/     E04 : 4C 07 0E             JMP .item_done
    1597/     E07 :                      .not_hex:
    1598/     E07 :                      .item_done:
    1599/     E07 :                      .no_item:
    1600/     E07 : A5 11                LDA $11 ;address
    1601/     E09 : 38                   SEC
    1602/     E0A : E9 09                SBC #$9
    1603/     E0C : 85 11                STA $11 ;address
    1604/     E0E : C6 0F                DEC $F ;character
    1605/     E10 : A5 10                LDA $10 ;counter
    1606/     E12 : D0 97                BNE .loop
    1607/     E14 : A9 00                LDA #$0
    1608/     E16 : 85 23                STA screen_ptr
    1609/     E18 : A5 24                LDA screen_ptr+$1
    1610/     E1A : 18                   CLC
    1611/     E1B : 69 14                ADC #$14
    1612/     E1D : 85 24                STA screen_ptr+$1
    1613/     E1F : A0 00                LDY #$0
    1614/     E21 : A9 00                LDA #$0
    1615/     E23 :                      .loop_line:
    1616/     E23 : 91 23                STA (screen_ptr),Y
    1617/     E25 : E6 24                INC screen_ptr+$1
    1618/     E27 : 91 23                STA (screen_ptr),Y
    1619/     E29 : C6 24                DEC screen_ptr+$1
    1620/     E2B : C8                   INY
    1621/     E2C : D0 F5                BNE .loop_line
    1622/     E2E : 60                   RTS
    1623/     E2F :                      
    1624/     E2F :                     ERROR_MSG_INPUT:
    1625/     E2F : 49 4E 50 55 54 20    FCB "INPUT ERROR ",$0
                    45 52 52 4F 52 20 
                    00                
    1626/     E3C :                      
    1627/     E3C :                     ERROR_MSG_WORD_TOO_LONG:
    1628/     E3C : 49 4E 50 55 54 20    FCB "INPUT SIZE  ",$0
                    53 49 5A 45 20 20 
                    00                
    1629/     E49 :                      
    1630/     E49 :                     ERROR_MSG_STRING:
    1631/     E49 : 53 54 52 49 4E 47    FCB "STRING ERROR",$0
                    20 45 52 52 4F 52 
                    00                
    1632/     E56 :                      
    1633/     E56 :                     ERROR_MSG_STACK_OVERFLOW:
    1634/     E56 : 53 54 41 43 4B 20    FCB "STACK OVERF ",$0
                    4F 56 45 52 46 20 
                    00                
    1635/     E63 :                      
    1636/     E63 :                     ERROR_MSG_STACK_UNDERFLOW:
    1637/     E63 : 53 54 41 43 4B 20    FCB "STACK UNDERF",$0
                    55 4E 44 45 52 46 
                    00                
    1638/     E70 :                      
    1639/     E70 :                     ERROR_TABLE:
    1640/     E70 : 2F 0E                FDB ERROR_MSG_INPUT
    1641/     E72 : 3C 0E                FDB ERROR_MSG_WORD_TOO_LONG
    1642/     E74 : 49 0E                FDB ERROR_MSG_STRING
    1643/     E76 : 56 0E                FDB ERROR_MSG_STACK_OVERFLOW
    1644/     E78 : 63 0E                FDB ERROR_MSG_STACK_UNDERFLOW
    1645/     E7A :                      
    1646/     E7A :                     ErrorMsg:
    1647/     E7A : A4 03                LDY $3 ;error_code
    1648/     E7C : B9 6E 0E             LDA ERROR_TABLE-$2,Y
    1649/     E7F : 85 04                STA $4 ;msg
    1650/     E81 : B9 6F 0E             LDA ERROR_TABLE-$1,Y
    1651/     E84 : 85 05                STA $5 ;msg
    1652/     E86 : A9 20                LDA #$20
    1653/     E88 : 85 23                STA screen_ptr
    1654/     E8A : A9 60                LDA #$60
    1655/     E8C : 85 24                STA screen_ptr+$1
    1656/     E8E : 4C 9E 0E             JMP .._2584.str_skip
    1657/     E91 :                      .._2584.str_addr:
    1658/     E91 : 62 62 62 62 62 62    FCB "bbbbbbbbbbbb",$0
                    62 62 62 62 62 62 
                    00                
    1659/     E9E :                      .._2584.str_skip:
    1660/     E9E : A9 91                LDA # (.._2584.str_addr) # $100
    1661/     EA0 : 85 13                STA $13 ;LCD_print.source
    1662/     EA2 : A9 0E                LDA # (.._2584.str_addr)/$100
    1663/     EA4 : 85 14                STA $14 ;LCD_print.source
    1664/     EA6 : 20 ED 0B             JSR LCD_print
    1665/     EA9 : A9 20                LDA #$20
    1666/     EAB : 85 23                STA screen_ptr
    1667/     EAD : A9 70                LDA #$70
    1668/     EAF : 85 24                STA screen_ptr+$1
    1669/     EB1 : A9 FF                LDA #$FF
    1670/     EB3 : 8D 90 01             STA font_inverted
    1671/     EB6 : A5 04                LDA $4 ;msg
    1672/     EB8 : 85 13                STA $13 ;LCD_print.source
    1673/     EBA : A5 05                LDA $5 ;msg
    1674/     EBC : 85 14                STA $14 ;LCD_print.source
    1675/     EBE : 20 ED 0B             JSR LCD_print
    1676/     EC1 : A9 20                LDA #$20
    1677/     EC3 : 85 23                STA screen_ptr
    1678/     EC5 : A9 80                LDA #$80
    1679/     EC7 : 85 24                STA screen_ptr+$1
    1680/     EC9 : 4C D9 0E             JMP .._2638.str_skip
    1681/     ECC :                      .._2638.str_addr:
    1682/     ECC : 62 62 62 62 62 62    FCB "bbbbbbbbbbbb",$0
                    62 62 62 62 62 62 
                    00                
    1683/     ED9 :                      .._2638.str_skip:
    1684/     ED9 : A9 CC                LDA # (.._2638.str_addr) # $100
    1685/     EDB : 85 13                STA $13 ;LCD_print.source
    1686/     EDD : A9 0E                LDA # (.._2638.str_addr)/$100
    1687/     EDF : 85 14                STA $14 ;LCD_print.source
    1688/     EE1 : 20 ED 0B             JSR LCD_print
    1689/     EE4 : A9 00                LDA #$0
    1690/     EE6 : 8D 90 01             STA font_inverted
    1691/     EE9 :                      .loop:
    1692/     EE9 : 20 4A 0B             JSR ReadKey
    1693/     EEC : C9 0D                CMP #$D
    1694/     EEE : D0 F9                BNE .loop
    1695/     EF0 : 60                   RTS
    1696/     EF1 : 60                   RTS
    1697/     EF2 :                      
    1698/     EF2 :                     InitForth:
    1699/     EF2 : A9 00                LDA #$0
    1700/     EF4 : 8D 31 01             STA input_buff_begin
    1701/     EF7 : 8D 32 01             STA input_buff_end
    1702/     EFA : 8D 73 01             STA new_word_len
    1703/     EFD : 60                   RTS
    1704/     EFE :                      
    1705/     EFE :                     special_chars:
    1706/     EFE : 65 22                FCB 'e',$22
    1707/     F00 : 20 2E 24 6D          FCB " .$m"
    1708/     F04 :                      
    1709/     F04 :                     ReadLine:
    1710/     F04 : A9 00                LDA #$0
    1711/     F06 : 85 03                STA $3 ;cursor
    1712/     F08 : 85 06                STA $6 ;index
    1713/     F0A : 85 23                STA screen_ptr
    1714/     F0C : A9 AC                LDA #$AC
    1715/     F0E : 85 24                STA screen_ptr+$1
    1716/     F10 : 4C 24 0F             JMP .._2689.str_skip
    1717/     F13 :                      .._2689.str_addr:
    1718/     F13 : 61 20 20 20 20 20    FCB "a               ",$0
                    20 20 20 20 20 20 
                    20 20 20 20 00    
    1719/     F24 :                      .._2689.str_skip:
    1720/     F24 : A9 13                LDA # (.._2689.str_addr) # $100
    1721/     F26 : 85 13                STA $13 ;LCD_print.source
    1722/     F28 : A9 0F                LDA # (.._2689.str_addr)/$100
    1723/     F2A : 85 14                STA $14 ;LCD_print.source
    1724/     F2C : 20 ED 0B             JSR LCD_print
    1725/     F2F : AD E6 FF             LDA $FFE6
    1726/     F32 : 85 04                STA $4 ;cursor_timer
    1727/     F34 :                      .loop:
    1728/     F34 : A9 00                LDA #$0
    1729/     F36 : 85 05                STA $5 ;arg
    1730/     F38 : 20 4A 0B             JSR ReadKey
    1731/     F3B : D0 03                BNE .key_read
    1732/     F3D : 4C 1D 10             JMP .no_key
    1733/     F40 :                      .key_read:
    1734/     F40 : C9 0D                CMP #$D
    1735/     F42 : D0 0F                BNE .not_enter
    1736/     F44 : A5 06                LDA $6 ;index
    1737/     F46 : F0 EC                BEQ .loop
    1738/     F48 : A9 00                LDA #$0
    1739/     F4A : 8D 31 01             STA input_buff_begin
    1740/     F4D : A5 06                LDA $6 ;index
    1741/     F4F : 8D 32 01             STA input_buff_end
    1742/     F52 : 60                   RTS
    1743/     F53 :                      .not_enter:
    1744/     F53 : C9 08                CMP #$8
    1745/     F55 : D0 2F                BNE .not_backspace
    1746/     F57 : A5 06                LDA $6 ;index
    1747/     F59 : F0 28                BEQ .backspace_done
    1748/     F5B : C6 06                DEC $6 ;index
    1749/     F5D : C9 10                CMP #$10
    1750/     F5F : B0 1C                BCS .backspace_scroll
    1751/     F61 : A9 20                LDA #$20
    1752/     F63 : 85 08                STA $8 ;LCD_char.c_out
    1753/     F65 : 20 72 0B             JSR LCD_char
    1754/     F68 : A5 23                LDA screen_ptr
    1755/     F6A : 38                   SEC
    1756/     F6B : E9 20                SBC #$20
    1757/     F6D : 85 23                STA screen_ptr
    1758/     F6F : 48                   PHA
    1759/     F70 : A9 61                LDA #$61
    1760/     F72 : 85 08                STA $8 ;LCD_char.c_out
    1761/     F74 : 20 72 0B             JSR LCD_char
    1762/     F77 : 68                   PLA
    1763/     F78 : 85 23                STA screen_ptr
    1764/     F7A : 4C 1D 10             JMP .draw_done
    1765/     F7D :                      .backspace_scroll:
    1766/     F7D : A4 06                LDY $6 ;index
    1767/     F7F : 88                   DEY
    1768/     F80 : 4C F0 0F             JMP .scroll_buffer
    1769/     F83 :                      .backspace_done:
    1770/     F83 : 4C 1D 10             JMP .no_key
    1771/     F86 :                      .not_backspace:
    1772/     F86 : A0 00                LDY #$0
    1773/     F88 :                      .special_loop:
    1774/     F88 : D9 FE 0E             CMP special_chars,Y
    1775/     F8B : D0 0D                BNE .special_next
    1776/     F8D : 85 05                STA $5 ;arg
    1777/     F8F : C9 6D                CMP #$6D
    1778/     F91 : D0 33                BNE .key_done
    1779/     F93 : A9 63                LDA #$63
    1780/     F95 : 85 05                STA $5 ;arg
    1781/     F97 : 4C C6 0F             JMP .key_done
    1782/     F9A :                      .special_next:
    1783/     F9A : C8                   INY
    1784/     F9B : C0 06                CPY #$6
    1785/     F9D : D0 E9                BNE .special_loop
    1786/     F9F : C9 30                CMP #$30
    1787/     FA1 : 90 09                BCC .not_num
    1788/     FA3 : C9 3A                CMP #$3A
    1789/     FA5 : B0 05                BCS .not_num
    1790/     FA7 : 85 05                STA $5 ;arg
    1791/     FA9 : 4C C6 0F             JMP .key_done
    1792/     FAC :                      .not_num:
    1793/     FAC : C9 41                CMP #$41
    1794/     FAE : 90 09                BCC .not_upper
    1795/     FB0 : C9 5B                CMP #$5B
    1796/     FB2 : B0 05                BCS .not_upper
    1797/     FB4 : 85 05                STA $5 ;arg
    1798/     FB6 : 4C C6 0F             JMP .key_done
    1799/     FB9 :                      .not_upper:
    1800/     FB9 : C9 61                CMP #$61
    1801/     FBB : 90 09                BCC .not_lower
    1802/     FBD : C9 7B                CMP #$7B
    1803/     FBF : B0 05                BCS .not_lower
    1804/     FC1 : 38                   SEC
    1805/     FC2 : E9 20                SBC #$20
    1806/     FC4 : 85 05                STA $5 ;arg
    1807/     FC6 :                      .not_lower:
    1808/     FC6 :                      .key_done:
    1809/     FC6 : A5 05                LDA $5 ;arg
    1810/     FC8 : F0 53                BEQ .not_valid
    1811/     FCA : A4 06                LDY $6 ;index
    1812/     FCC : C0 40                CPY #$40
    1813/     FCE : B0 4D                BCS .buffer_full
    1814/     FD0 : 99 33 01             STA input_buff,Y
    1815/     FD3 : E6 06                INC $6 ;index
    1816/     FD5 : C0 0F                CPY #$F
    1817/     FD7 : B0 17                BCS .scroll_buffer
    1818/     FD9 : A5 05                LDA $5 ;arg
    1819/     FDB : 85 08                STA $8 ;LCD_char.c_out
    1820/     FDD : 20 72 0B             JSR LCD_char
    1821/     FE0 : A5 23                LDA screen_ptr
    1822/     FE2 : 48                   PHA
    1823/     FE3 : A9 61                LDA #$61
    1824/     FE5 : 85 08                STA $8 ;LCD_char.c_out
    1825/     FE7 : 20 72 0B             JSR LCD_char
    1826/     FEA : 68                   PLA
    1827/     FEB : 85 23                STA screen_ptr
    1828/     FED : 4C 1D 10             JMP .draw_done
    1829/     FF0 :                      .scroll_buffer:
    1830/     FF0 : A9 00                LDA #$0
    1831/     FF2 : 85 23                STA screen_ptr
    1832/     FF4 : 98                   TYA
    1833/     FF5 : 38                   SEC
    1834/     FF6 : E9 0E                SBC #$E
    1835/     FF8 : 85 07                STA $7 ;str_index
    1836/     FFA :                      .scroll_loop:
    1837/     FFA : A4 07                LDY $7 ;str_index
    1838/     FFC : E6 07                INC $7 ;str_index
    1839/     FFE : B9 33 01             LDA input_buff,Y
    1840/    1001 : 85 05                STA $5 ;arg
    1841/    1003 : A5 05                LDA $5 ;arg
    1842/    1005 : 85 08                STA $8 ;LCD_char.c_out
    1843/    1007 : 20 72 0B             JSR LCD_char
    1844/    100A : A5 06                LDA $6 ;index
    1845/    100C : C5 07                CMP $7 ;str_index
    1846/    100E : D0 EA                BNE .scroll_loop
    1847/    1010 : A5 23                LDA screen_ptr
    1848/    1012 : 48                   PHA
    1849/    1013 : A9 61                LDA #$61
    1850/    1015 : 85 08                STA $8 ;LCD_char.c_out
    1851/    1017 : 20 72 0B             JSR LCD_char
    1852/    101A : 68                   PLA
    1853/    101B : 85 23                STA screen_ptr
    1854/    101D :                      .draw_done:
    1855/    101D :                      .buffer_full:
    1856/    101D :                      .not_valid:
    1857/    101D :                      .no_key:
    1858/    101D : AD E6 FF             LDA $FFE6
    1859/    1020 : C5 04                CMP $4 ;cursor_timer
    1860/    1022 : F0 25                BEQ .cursor_done
    1861/    1024 : 85 04                STA $4 ;cursor_timer
    1862/    1026 : A5 03                LDA $3 ;cursor
    1863/    1028 : F0 09                BEQ .draw_blank
    1864/    102A : A9 00                LDA #$0
    1865/    102C : 85 03                STA $3 ;cursor
    1866/    102E : A9 20                LDA #$20
    1867/    1030 : 4C 39 10             JMP .draw
    1868/    1033 :                      .draw_blank:
    1869/    1033 : A9 FF                LDA #$FF
    1870/    1035 : 85 03                STA $3 ;cursor
    1871/    1037 : A9 61                LDA #$61
    1872/    1039 :                      .draw:
    1873/    1039 : 85 05                STA $5 ;arg
    1874/    103B : A5 05                LDA $5 ;arg
    1875/    103D : 85 08                STA $8 ;LCD_char.c_out
    1876/    103F : 20 72 0B             JSR LCD_char
    1877/    1042 : A5 23                LDA screen_ptr
    1878/    1044 : 38                   SEC
    1879/    1045 : E9 10                SBC #$10
    1880/    1047 : 85 23                STA screen_ptr
    1881/    1049 :                      .cursor_done:
    1882/    1049 : 4C 34 0F             JMP .loop
    1883/    104C : 60                   RTS
    1884/    104D :                      
    1885/    104D :                     LineWord:
    1886/    104D : A9 00                LDA #$0
    1887/    104F : 85 21                STA ret_val
    1888/    1051 : A9 00                LDA #$0
    1889/    1053 : 8D 73 01             STA new_word_len
    1890/    1056 : AC 31 01             LDY input_buff_begin
    1891/    1059 : CC 32 01             CPY input_buff_end
    1892/    105C : D0 01                BNE .chars_left
    1893/    105E : 60                   RTS
    1894/    105F :                      .chars_left:
    1895/    105F :                      .loop:
    1896/    105F : AC 31 01             LDY input_buff_begin
    1897/    1062 : B9 33 01             LDA input_buff,Y
    1898/    1065 : EE 31 01             INC input_buff_begin
    1899/    1068 : C9 20                CMP #$20
    1900/    106A : D0 06                BNE .not_space
    1901/    106C : AD 73 01             LDA new_word_len
    1902/    106F : F0 14                BEQ .chars_left2
    1903/    1071 : 60                   RTS
    1904/    1072 :                      .not_space:
    1905/    1072 : AC 73 01             LDY new_word_len
    1906/    1075 : 99 74 01             STA new_word_buff,Y
    1907/    1078 : C8                   INY
    1908/    1079 : 8C 73 01             STY new_word_len
    1909/    107C : C0 13                CPY #$13
    1910/    107E : D0 05                BNE .word_size_good
    1911/    1080 : A9 04                LDA #$4
    1912/    1082 : 85 21                STA ret_val
    1913/    1084 : 60                   RTS
    1914/    1085 :                      .word_size_good:
    1915/    1085 :                      .chars_left2:
    1916/    1085 : AD 31 01             LDA input_buff_begin
    1917/    1088 : CD 32 01             CMP input_buff_end
    1918/    108B : F0 03                BEQ .found
    1919/    108D : 4C 5F 10             JMP .loop
    1920/    1090 :                      .found:
    1921/    1090 : 60                   RTS
    1922/    1091 : 60                   RTS
    1923/    1092 :                      
    1924/    1092 :                     FindWord:
    1925/    1092 : A9 6E                LDA # (FORTH_WORDS) # $100
    1926/    1094 : 85 21                STA ret_val
    1927/    1096 : A9 13                LDA # (FORTH_WORDS)/$100
    1928/    1098 : 85 22                STA ret_val+$1
    1929/    109A :                      .loop:
    1930/    109A : A0 00                LDY #$0
    1931/    109C : B1 21                LDA (ret_val),Y
    1932/    109E : CD 73 01             CMP new_word_len
    1933/    10A1 : D0 11                BNE .loop_next
    1934/    10A3 : C8                   INY
    1935/    10A4 :                      .str_loop:
    1936/    10A4 : B1 21                LDA (ret_val),Y
    1937/    10A6 : D9 73 01             CMP new_word_buff-$1,Y
    1938/    10A9 : D0 09                BNE .no_match
    1939/    10AB : CC 73 01             CPY new_word_len
    1940/    10AE : F0 1C                BEQ .word_found
    1941/    10B0 : C8                   INY
    1942/    10B1 : 4C A4 10             JMP .str_loop
    1943/    10B4 :                      .no_match:
    1944/    10B4 :                      .loop_next:
    1945/    10B4 : A0 00                LDY #$0
    1946/    10B6 : B1 21                LDA (ret_val),Y
    1947/    10B8 : A8                   TAY
    1948/    10B9 : C8                   INY
    1949/    10BA : B1 21                LDA (ret_val),Y
    1950/    10BC : 48                   PHA
    1951/    10BD : C8                   INY
    1952/    10BE : B1 21                LDA (ret_val),Y
    1953/    10C0 : 85 22                STA ret_val+$1
    1954/    10C2 : 68                   PLA
    1955/    10C3 : 85 21                STA ret_val
    1956/    10C5 : 05 22                ORA ret_val+$1
    1957/    10C7 : D0 D1                BNE .loop
    1958/    10C9 : 85 21                STA ret_val
    1959/    10CB : 60                   RTS
    1960/    10CC :                      .word_found:
    1961/    10CC : A0 00                LDY #$0
    1962/    10CE : B1 21                LDA (ret_val),Y
    1963/    10D0 : A8                   TAY
    1964/    10D1 : C8                   INY
    1965/    10D2 : C8                   INY
    1966/    10D3 : C8                   INY
    1967/    10D4 : B1 21                LDA (ret_val),Y
    1968/    10D6 : 85 21                STA ret_val
    1969/    10D8 : 60                   RTS
    1970/    10D9 :                      
    1971/    10D9 :                     CheckData:
    1972/    10D9 : A9 04                LDA #$4
    1973/    10DB : 8D 87 01             STA new_stack_item
    1974/    10DE : AD 73 01             LDA new_word_len
    1975/    10E1 : D0 01                BNE .not_zero_len
    1976/    10E3 : 60                   RTS
    1977/    10E4 :                      .not_zero_len:
    1978/    10E4 : A0 08                LDY #$8
    1979/    10E6 : A9 00                LDA #$0
    1980/    10E8 :                      .zero_loop:
    1981/    10E8 : 99 87 01             STA new_stack_item,Y
    1982/    10EB : 88                   DEY
    1983/    10EC : D0 FA                BNE .zero_loop
    1984/    10EE : A0 00                LDY #$0
    1985/    10F0 : AD 74 01             LDA new_word_buff
    1986/    10F3 : C9 22                CMP #$22
    1987/    10F5 : D0 2E                BNE .not_string
    1988/    10F7 : AD 73 01             LDA new_word_len
    1989/    10FA : C9 01                CMP #$1
    1990/    10FC : D0 01                BNE .not_single_quote
    1991/    10FE : 60                   RTS
    1992/    10FF :                      .not_single_quote:
    1993/    10FF : CE 73 01             DEC new_word_len
    1994/    1102 :                      .loop_str:
    1995/    1102 : B9 75 01             LDA new_word_buff+$1,y
    1996/    1105 : C9 22                CMP #$22
    1997/    1107 : F0 10                BEQ .str_done
    1998/    1109 : C0 08                CPY #$8
    1999/    110B : F0 0B                BEQ .string_too_long
    2000/    110D : 99 88 01             STA new_stack_item+$1,Y
    2001/    1110 : C8                   INY
    2002/    1111 : CC 73 01             CPY new_word_len
    2003/    1114 : F0 02                BEQ .string_unterminated
    2004/    1116 : D0 EA                BNE .loop_str
    2005/    1118 :                      .string_too_long:
    2006/    1118 :                      .string_unterminated:
    2007/    1118 : 60                   RTS
    2008/    1119 :                      .str_done:
    2009/    1119 : C8                   INY
    2010/    111A : CC 73 01             CPY new_word_len
    2011/    111D : D0 05                BNE .str_return
    2012/    111F : A9 02                LDA #$2
    2013/    1121 : 8D 87 01             STA new_stack_item
    2014/    1124 :                      .str_return:
    2015/    1124 : 60                   RTS
    2016/    1125 :                      .not_string:
    2017/    1125 : C9 24                CMP #$24
    2018/    1127 : D0 4F                BNE .not_hex
    2019/    1129 : AD 73 01             LDA new_word_len
    2020/    112C : C9 01                CMP #$1
    2021/    112E : F0 47                BEQ .hex_error
    2022/    1130 : C9 06                CMP #$6
    2023/    1132 : B0 43                BCS .hex_error
    2024/    1134 : CE 73 01             DEC new_word_len
    2025/    1137 : A0 00                LDY #$0
    2026/    1139 :                      .loop_hex:
    2027/    1139 : B9 75 01             LDA new_word_buff+$1,Y
    2028/    113C : C9 30                CMP #$30
    2029/    113E : 90 37                BCC .hex_error
    2030/    1140 : C9 3A                CMP #$3A
    2031/    1142 : B0 0F                BCS .not_digit
    2032/    1144 : 38                   SEC
    2033/    1145 : E9 30                SBC #$30
    2034/    1147 : 20 DC 12             JSR .hex_rotate
    2035/    114A : 0D 88 01             ORA new_stack_item+$1
    2036/    114D : 8D 88 01             STA new_stack_item+$1
    2037/    1150 : 4C 67 11             JMP .hex_char_next
    2038/    1153 :                      .not_digit:
    2039/    1153 : C9 41                CMP #$41
    2040/    1155 : 90 20                BCC .hex_error
    2041/    1157 : C9 47                CMP #$47
    2042/    1159 : B0 1C                BCS .hex_error
    2043/    115B : 38                   SEC
    2044/    115C : E9 37                SBC #$37
    2045/    115E : 20 DC 12             JSR .hex_rotate
    2046/    1161 : 0D 88 01             ORA new_stack_item+$1
    2047/    1164 : 8D 88 01             STA new_stack_item+$1
    2048/    1167 :                      .hex_char_next:
    2049/    1167 : C8                   INY
    2050/    1168 : CC 73 01             CPY new_word_len
    2051/    116B : F0 04                BEQ .hex_done
    2052/    116D : C0 04                CPY #$4
    2053/    116F : D0 C8                BNE .loop_hex
    2054/    1171 :                      .hex_done:
    2055/    1171 : A9 03                LDA #$3
    2056/    1173 : 8D 87 01             STA new_stack_item
    2057/    1176 : 60                   RTS
    2058/    1177 :                      .hex_error:
    2059/    1177 : 60                   RTS
    2060/    1178 :                      .not_hex:
    2061/    1178 : A9 06                LDA #$6
    2062/    117A : 85 0C                STA $C ;index
    2063/    117C : A9 00                LDA #$0
    2064/    117E : 85 0D                STA $D ;which_digit
    2065/    1180 : 85 0E                STA $E ;negative
    2066/    1182 : 85 0F                STA $F ;exp_negative
    2067/    1184 : 85 10                STA $10 ;exp_count
    2068/    1186 : 85 14                STA $14 ;digit_count
    2069/    1188 : 85 13                STA $13 ;nonzero_found
    2070/    118A : 85 12                STA $12 ;dec_found
    2071/    118C : 85 11                STA $11 ;exp_found
    2072/    118E : AD 74 01             LDA new_word_buff
    2073/    1191 : C9 63                CMP #$63
    2074/    1193 : D0 08                BNE .float_no_neg
    2075/    1195 : A9 FF                LDA #$FF
    2076/    1197 : 85 0E                STA $E ;negative
    2077/    1199 : C8                   INY
    2078/    119A : 4C A2 11             JMP .float_first_done
    2079/    119D :                      .float_no_neg:
    2080/    119D : C9 65                CMP #$65
    2081/    119F : D0 01                BNE .float_not_exp
    2082/    11A1 : 60                   RTS
    2083/    11A2 :                      .float_not_exp:
    2084/    11A2 :                      .float_first_done:
    2085/    11A2 :                      .loop_float:
    2086/    11A2 : B9 74 01             LDA new_word_buff,Y
    2087/    11A5 : 20 EC 12             JSR .digit
    2088/    11A8 : 90 65                BCC .float_not_digit
    2089/    11AA : 48                   PHA
    2090/    11AB : A5 13                LDA $13 ;nonzero_found
    2091/    11AD : D0 1C                BNE .digit_good
    2092/    11AF : 68                   PLA
    2093/    11B0 : 48                   PHA
    2094/    11B1 : F0 06                BEQ .digit_zero
    2095/    11B3 : A9 FF                LDA #$FF
    2096/    11B5 : 85 13                STA $13 ;nonzero_found
    2097/    11B7 : D0 12                BNE .digit_good
    2098/    11B9 :                      .digit_zero:
    2099/    11B9 : 68                   PLA
    2100/    11BA : A5 11                LDA $11 ;exp_found
    2101/    11BC : D0 23                BNE .float_next
    2102/    11BE : A5 12                LDA $12 ;dec_found
    2103/    11C0 : D0 04                BNE .dec_exp_count
    2104/    11C2 : A9 00                LDA #$0
    2105/    11C4 : 85 10                STA $10 ;exp_count
    2106/    11C6 :                      .dec_exp_count:
    2107/    11C6 : C6 10                DEC $10 ;exp_count
    2108/    11C8 : 4C E1 11             JMP .float_next
    2109/    11CB :                      .digit_good:
    2110/    11CB : A5 11                LDA $11 ;exp_found
    2111/    11CD : D0 1B                BNE .exp_digit
    2112/    11CF : A5 14                LDA $14 ;digit_count
    2113/    11D1 : C9 0C                CMP #$C
    2114/    11D3 : D0 02                BNE .digit_ok
    2115/    11D5 : 68                   PLA
    2116/    11D6 : 60                   RTS
    2117/    11D7 :                      .digit_ok:
    2118/    11D7 : A5 12                LDA $12 ;dec_found
    2119/    11D9 : D0 02                BNE .no_dec_yet
    2120/    11DB : E6 10                INC $10 ;exp_count
    2121/    11DD :                      .no_dec_yet:
    2122/    11DD : 68                   PLA
    2123/    11DE : 20 F9 12             JSR .add_digit
    2124/    11E1 :                      .float_next:
    2125/    11E1 : C8                   INY
    2126/    11E2 : CC 73 01             CPY new_word_len
    2127/    11E5 : F0 6B                BEQ .float_done
    2128/    11E7 : 4C A2 11             JMP .loop_float
    2129/    11EA :                      .exp_digit:
    2130/    11EA : A5 14                LDA $14 ;digit_count
    2131/    11EC : C9 03                CMP #$3
    2132/    11EE : D0 02                BNE .exp_digit_ok
    2133/    11F0 : 68                   PLA
    2134/    11F1 : 60                   RTS
    2135/    11F2 :                      .exp_digit_ok:
    2136/    11F2 : 68                   PLA
    2137/    11F3 : 84 0B                STY $B ;y_buff
    2138/    11F5 : A0 04                LDY #$4
    2139/    11F7 :                      .exp_loop:
    2140/    11F7 : 0E 8E 01             ASL new_stack_item+$7
    2141/    11FA : 2E 8F 01             ROL new_stack_item+$8
    2142/    11FD : 88                   DEY
    2143/    11FE : D0 F7                BNE .exp_loop
    2144/    1200 : A4 0B                LDY $B ;y_buff
    2145/    1202 : 0D 8E 01             ORA new_stack_item+$7
    2146/    1205 : 8D 8E 01             STA new_stack_item+$7
    2147/    1208 : E6 0C                INC $C ;index
    2148/    120A : E6 14                INC $14 ;digit_count
    2149/    120C : 4C E1 11             JMP .float_next
    2150/    120F :                      .float_not_digit:
    2151/    120F : C9 2E                CMP #$2E
    2152/    1211 : D0 10                BNE .not_decimal_point
    2153/    1213 : A5 12                LDA $12 ;dec_found
    2154/    1215 : F0 01                BEQ .decimal_good
    2155/    1217 : 60                   RTS
    2156/    1218 :                      .decimal_good:
    2157/    1218 : A5 11                LDA $11 ;exp_found
    2158/    121A : F0 01                BEQ .exp_good
    2159/    121C : 60                   RTS
    2160/    121D :                      .exp_good:
    2161/    121D : A9 FF                LDA #$FF
    2162/    121F : 85 12                STA $12 ;dec_found
    2163/    1221 : D0 BE                BNE .float_next
    2164/    1223 :                      .not_decimal_point:
    2165/    1223 : C9 65                CMP #$65
    2166/    1225 : D0 15                BNE .not_exp
    2167/    1227 : A5 11                LDA $11 ;exp_found
    2168/    1229 : F0 01                BEQ .first_exp
    2169/    122B : 60                   RTS
    2170/    122C :                      .first_exp:
    2171/    122C : A9 00                LDA #$0
    2172/    122E : 85 0C                STA $C ;index
    2173/    1230 : 85 0D                STA $D ;which_digit
    2174/    1232 : 85 14                STA $14 ;digit_count
    2175/    1234 : 85 13                STA $13 ;nonzero_found
    2176/    1236 : A9 FF                LDA #$FF
    2177/    1238 : 85 11                STA $11 ;exp_found
    2178/    123A : D0 A5                BNE .float_next
    2179/    123C :                      .not_exp:
    2180/    123C : C9 63                CMP #$63
    2181/    123E : D0 11                BNE .not_minus
    2182/    1240 : A5 11                LDA $11 ;exp_found
    2183/    1242 : 49 FF                EOR #$FF
    2184/    1244 : 05 0C                ORA $C ;index
    2185/    1246 : 05 0F                ORA $F ;exp_negative
    2186/    1248 : F0 01                BEQ .minus_good
    2187/    124A : 60                   RTS
    2188/    124B :                      .minus_good:
    2189/    124B : A9 FF                LDA #$FF
    2190/    124D : 85 0F                STA $F ;exp_negative
    2191/    124F : D0 90                BNE .float_next
    2192/    1251 :                      .not_minus:
    2193/    1251 : 60                   RTS
    2194/    1252 :                      .float_done:
    2195/    1252 : A5 0F                LDA $F ;exp_negative
    2196/    1254 : F0 0F                BEQ .exp_positive
    2197/    1256 : A9 8E                LDA # (new_stack_item+$7) # $100
    2198/    1258 : 85 15                STA $15 ;BCD_Reverse.source
    2199/    125A : A9 01                LDA # (new_stack_item+$7)/$100
    2200/    125C : 85 16                STA $16 ;BCD_Reverse.source
    2201/    125E : A9 02                LDA #$2
    2202/    1260 : 85 17                STA $17 ;BCD_Reverse.count
    2203/    1262 : 20 12 0C             JSR BCD_Reverse
    2204/    1265 :                      .exp_positive:
    2205/    1265 : F8                   SED
    2206/    1266 : A9 00                LDA #$0
    2207/    1268 : A4 10                LDY $10 ;exp_count
    2208/    126A : 30 0C                BMI .exp_count_neg
    2209/    126C : 88                   DEY
    2210/    126D : F0 0F                BEQ .exp_count_done
    2211/    126F :                      .exp_pos_loop:
    2212/    126F : 18                   CLC
    2213/    1270 : 69 01                ADC #$1
    2214/    1272 : 88                   DEY
    2215/    1273 : D0 FA                BNE .exp_pos_loop
    2216/    1275 : 4C 7E 12             JMP .exp_count_done
    2217/    1278 :                      .exp_count_neg:
    2218/    1278 :                      .exp_min_loop:
    2219/    1278 : 38                   SEC
    2220/    1279 : E9 01                SBC #$1
    2221/    127B : C8                   INY
    2222/    127C : D0 FA                BNE .exp_min_loop
    2223/    127E :                      .exp_count_done:
    2224/    127E : 85 10                STA $10 ;exp_count
    2225/    1280 : A0 99                LDY #$99
    2226/    1282 : C9 50                CMP #$50
    2227/    1284 : B0 02                BCS .exp_count_neg2
    2228/    1286 : A0 00                LDY #$0
    2229/    1288 :                      .exp_count_neg2:
    2230/    1288 : 84 0C                STY $C ;index
    2231/    128A : 18                   CLC
    2232/    128B : 6D 8E 01             ADC new_stack_item+$7
    2233/    128E : 8D 8E 01             STA new_stack_item+$7
    2234/    1291 : A5 0C                LDA $C ;index
    2235/    1293 : 6D 8F 01             ADC new_stack_item+$8
    2236/    1296 : 8D 8F 01             STA new_stack_item+$8
    2237/    1299 : D8                   CLD
    2238/    129A : A9 00                LDA #$0
    2239/    129C : AC 8F 01             LDY new_stack_item+$8
    2240/    129F : C0 50                CPY #$50
    2241/    12A1 : 90 11                BCC .exp_positive2
    2242/    12A3 : A9 8E                LDA # (new_stack_item+$7) # $100
    2243/    12A5 : 85 15                STA $15 ;BCD_Reverse.source
    2244/    12A7 : A9 01                LDA # (new_stack_item+$7)/$100
    2245/    12A9 : 85 16                STA $16 ;BCD_Reverse.source
    2246/    12AB : A9 02                LDA #$2
    2247/    12AD : 85 17                STA $17 ;BCD_Reverse.count
    2248/    12AF : 20 12 0C             JSR BCD_Reverse
    2249/    12B2 : A9 FF                LDA #$FF
    2250/    12B4 :                      .exp_positive2:
    2251/    12B4 : 85 0F                STA $F ;exp_negative
    2252/    12B6 : AD 8F 01             LDA new_stack_item+$8
    2253/    12B9 : C9 10                CMP #$10
    2254/    12BB : D0 01                BNE .no_exp_overflow
    2255/    12BD : 60                   RTS
    2256/    12BE :                      .no_exp_overflow:
    2257/    12BE : A5 0F                LDA $F ;exp_negative
    2258/    12C0 : F0 08                BEQ .exp_no_neg_bit
    2259/    12C2 : AD 8F 01             LDA new_stack_item+$8
    2260/    12C5 : 09 40                ORA #$40
    2261/    12C7 : 8D 8F 01             STA new_stack_item+$8
    2262/    12CA :                      .exp_no_neg_bit:
    2263/    12CA : A5 0E                LDA $E ;negative
    2264/    12CC : F0 08                BEQ .positive
    2265/    12CE : AD 8F 01             LDA new_stack_item+$8
    2266/    12D1 : 09 80                ORA #$80
    2267/    12D3 : 8D 8F 01             STA new_stack_item+$8
    2268/    12D6 :                      .positive:
    2269/    12D6 : A9 01                LDA #$1
    2270/    12D8 : 8D 87 01             STA new_stack_item
    2271/    12DB : 60                   RTS
    2272/    12DC :                      .hex_rotate:
    2273/    12DC : 84 0B                STY $B ;y_buff
    2274/    12DE : A0 04                LDY #$4
    2275/    12E0 :                      .hex_rot_loop:
    2276/    12E0 : 0E 88 01             ASL new_stack_item+$1
    2277/    12E3 : 2E 89 01             ROL new_stack_item+$2
    2278/    12E6 : 88                   DEY
    2279/    12E7 : D0 F7                BNE .hex_rot_loop
    2280/    12E9 : A4 0B                LDY $B ;y_buff
    2281/    12EB : 60                   RTS
    2282/    12EC :                      .digit:
    2283/    12EC : C9 3A                CMP #$3A
    2284/    12EE : B0 07                BCS .is_digit_no
    2285/    12F0 : C9 30                CMP #$30
    2286/    12F2 : 90 03                BCC .is_digit_no
    2287/    12F4 : E9 30                SBC #$30
    2288/    12F6 : 60                   RTS
    2289/    12F7 :                      .is_digit_no:
    2290/    12F7 : 18                   CLC
    2291/    12F8 : 60                   RTS
    2292/    12F9 :                      .add_digit:
    2293/    12F9 : 48                   PHA
    2294/    12FA : 84 0B                STY $B ;y_buff
    2295/    12FC : A4 0C                LDY $C ;index
    2296/    12FE : E6 14                INC $14 ;digit_count
    2297/    1300 : A5 0D                LDA $D ;which_digit
    2298/    1302 : 49 FF                EOR #$FF
    2299/    1304 : 85 0D                STA $D ;which_digit
    2300/    1306 : F0 0B                BEQ .second_digit
    2301/    1308 : 68                   PLA
    2302/    1309 : 0A                   ASL
    2303/    130A : 0A                   ASL
    2304/    130B : 0A                   ASL
    2305/    130C : 0A                   ASL
    2306/    130D : 99 87 01             STA new_stack_item,Y
    2307/    1310 : A4 0B                LDY $B ;y_buff
    2308/    1312 : 60                   RTS
    2309/    1313 :                      .second_digit:
    2310/    1313 : 68                   PLA
    2311/    1314 : 19 87 01             ORA new_stack_item,Y
    2312/    1317 : 99 87 01             STA new_stack_item,Y
    2313/    131A : C6 0C                DEC $C ;index
    2314/    131C : A4 0B                LDY $B ;y_buff
    2315/    131E : 60                   RTS
    2316/    131F : 60                   RTS
    2317/    1320 :                      
    2318/    1320 :                     ExecToken:
    2319/    1320 : A9 00                LDA #$0
    2320/    1322 : 85 21                STA ret_val
    2321/    1324 : A4 03                LDY $3 ;token
    2322/    1326 : B9 24 14             LDA JUMP_TABLE,Y
    2323/    1329 : 85 06                STA $6 ;address
    2324/    132B : B9 25 14             LDA JUMP_TABLE+$1,Y
    2325/    132E : 85 07                STA $7 ;address
    2326/    1330 : A0 00                LDY #$0
    2327/    1332 : B1 06                LDA ($6),Y ;address
    2328/    1334 : F0 27                BEQ .no_flags
    2329/    1336 : 85 04                STA $4 ;flags
    2330/    1338 : 29 03                AND #$3
    2331/    133A : 85 05                STA $5 ;temp
    2332/    133C : AD 91 01             LDA stack_count
    2333/    133F : C5 05                CMP $5 ;temp
    2334/    1341 : B0 05                BCS .no_underflow
    2335/    1343 : A9 0A                LDA #$A
    2336/    1345 : 85 21                STA ret_val
    2337/    1347 : 60                   RTS
    2338/    1348 :                      .no_underflow:
    2339/    1348 : A5 04                LDA $4 ;flags
    2340/    134A : 29 04                AND #$4
    2341/    134C : F0 0F                BEQ .no_add_item
    2342/    134E : A9 07                LDA #$7
    2343/    1350 : CD 91 01             CMP stack_count
    2344/    1353 : B0 05                BCS .no_overflow
    2345/    1355 : A9 08                LDA #$8
    2346/    1357 : 85 21                STA ret_val
    2347/    1359 : 60                   RTS
    2348/    135A :                      .no_overflow:
    2349/    135A : 20 65 13             JSR StackAddItem
    2350/    135D :                      .no_add_item:
    2351/    135D :                      .no_flags:
    2352/    135D : A5 07                LDA $7 ;address
    2353/    135F : 48                   PHA
    2354/    1360 : A5 06                LDA $6 ;address
    2355/    1362 : 48                   PHA
    2356/    1363 : 60                   RTS
    2357/    1364 : 60                   RTS
    2358/    1365 :                      
    2359/    1365 :                     StackAddItem:
    2360/    1365 : 8A                   TXA
    2361/    1366 : 38                   SEC
    2362/    1367 : E9 09                SBC #$9
    2363/    1369 : AA                   TAX
    2364/    136A : EE 91 01             INC stack_count
    2365/    136D : 60                   RTS
    2366/    136E :                      
    2367/    136E :                     FORTH_WORDS:
    2368/    136E :                      
    2369/    136E :                     WORD_DUP:
    2370/    136E : 03 44 55 50          FCB $3,"DUP"
    2371/    1372 : 85 13                FDB WORD_SWAP
    2372/    1374 : 02                   FCB $2
    2373/    1375 :                      
    2374/    1375 :                     CODE_DUP:
    2375/    1375 : 05                   FCB $5
    2376/    1376 : A0 09                LDY #$9
    2377/    1378 : 8A                   TXA
    2378/    1379 : 48                   PHA
    2379/    137A :                      .dup_loop:
    2380/    137A : B5 09                LDA $9,X
    2381/    137C : 95 00                STA $0,X
    2382/    137E : E8                   INX
    2383/    137F : 88                   DEY
    2384/    1380 : D0 F8                BNE .dup_loop
    2385/    1382 : 68                   PLA
    2386/    1383 : AA                   TAX
    2387/    1384 : 60                   RTS
    2388/    1385 :                      
    2389/    1385 :                     WORD_SWAP:
    2390/    1385 : 04 53 57 41 50       FCB $4,"SWAP"
    2391/    138A : A3 13                FDB WORD_DROP
    2392/    138C : 04                   FCB $4
    2393/    138D :                      
    2394/    138D :                     CODE_SWAP:
    2395/    138D : 02                   FCB $2
    2396/    138E : A0 09                LDY #$9
    2397/    1390 : 8A                   TXA
    2398/    1391 : 48                   PHA
    2399/    1392 :                      .swap_loop:
    2400/    1392 : B5 09                LDA $9,X
    2401/    1394 : 48                   PHA
    2402/    1395 : B5 00                LDA $0,X
    2403/    1397 : 95 09                STA $9,X
    2404/    1399 : 68                   PLA
    2405/    139A : 95 00                STA $0,X
    2406/    139C : E8                   INX
    2407/    139D : 88                   DEY
    2408/    139E : D0 F2                BNE .swap_loop
    2409/    13A0 : 68                   PLA
    2410/    13A1 : AA                   TAX
    2411/    13A2 : 60                   RTS
    2412/    13A3 :                      
    2413/    13A3 :                     WORD_DROP:
    2414/    13A3 : 04 44 52 4F 50       FCB $4,"DROP"
    2415/    13A8 : B5 13                FDB WORD_OVER
    2416/    13AA : 06                   FCB $6
    2417/    13AB :                      
    2418/    13AB :                     CODE_DROP:
    2419/    13AB : 01                   FCB $1
    2420/    13AC : 8A                   TXA
    2421/    13AD : 18                   CLC
    2422/    13AE : 69 09                ADC #$9
    2423/    13B0 : AA                   TAX
    2424/    13B1 : CE 91 01             DEC stack_count
    2425/    13B4 : 60                   RTS
    2426/    13B5 :                      
    2427/    13B5 :                     WORD_OVER:
    2428/    13B5 : 04 4F 56 45 52       FCB $4,"OVER"
    2429/    13BA : CD 13                FDB WORD_ROT
    2430/    13BC : 08                   FCB $8
    2431/    13BD :                      
    2432/    13BD :                     CODE_OVER:
    2433/    13BD : 06                   FCB $6
    2434/    13BE : A0 09                LDY #$9
    2435/    13C0 : 8A                   TXA
    2436/    13C1 : 48                   PHA
    2437/    13C2 :                      .over_loop:
    2438/    13C2 : B5 12                LDA $12,X
    2439/    13C4 : 95 00                STA $0,X
    2440/    13C6 : E8                   INX
    2441/    13C7 : 88                   DEY
    2442/    13C8 : D0 F8                BNE .over_loop
    2443/    13CA : 68                   PLA
    2444/    13CB : AA                   TAX
    2445/    13CC : 60                   RTS
    2446/    13CD :                      
    2447/    13CD :                     WORD_ROT:
    2448/    13CD : 03 52 4F 54          FCB $3,"ROT"
    2449/    13D1 : F0 13                FDB WORD_MIN_ROT
    2450/    13D3 : 0A                   FCB $A
    2451/    13D4 :                      
    2452/    13D4 :                     CODE_ROT:
    2453/    13D4 : 03                   FCB $3
    2454/    13D5 : A0 09                LDY #$9
    2455/    13D7 : 8A                   TXA
    2456/    13D8 : 48                   PHA
    2457/    13D9 :                      .rot_loop:
    2458/    13D9 : B5 12                LDA $12,X
    2459/    13DB : 48                   PHA
    2460/    13DC : B5 09                LDA $9,X
    2461/    13DE : 48                   PHA
    2462/    13DF : B5 00                LDA $0,X
    2463/    13E1 : 95 09                STA $9,X
    2464/    13E3 : 68                   PLA
    2465/    13E4 : 95 12                STA $12,X
    2466/    13E6 : 68                   PLA
    2467/    13E7 : 95 00                STA $0,X
    2468/    13E9 : E8                   INX
    2469/    13EA : 88                   DEY
    2470/    13EB : D0 EC                BNE .rot_loop
    2471/    13ED : 68                   PLA
    2472/    13EE : AA                   TAX
    2473/    13EF : 60                   RTS
    2474/    13F0 :                      
    2475/    13F0 :                     WORD_MIN_ROT:
    2476/    13F0 : 04 2D 52 4F 54       FCB $4,"-ROT"
    2477/    13F5 : 14 14                FDB WORD_CLEAR
    2478/    13F7 : 0C                   FCB $C
    2479/    13F8 :                      
    2480/    13F8 :                     CODE_MIN_ROT:
    2481/    13F8 : 03                   FCB $3
    2482/    13F9 : A0 09                LDY #$9
    2483/    13FB : 8A                   TXA
    2484/    13FC : 48                   PHA
    2485/    13FD :                      .min_rot_loop:
    2486/    13FD : B5 12                LDA $12,X
    2487/    13FF : 48                   PHA
    2488/    1400 : B5 09                LDA $9,X
    2489/    1402 : 48                   PHA
    2490/    1403 : B5 00                LDA $0,X
    2491/    1405 : 95 12                STA $12,X
    2492/    1407 : 68                   PLA
    2493/    1408 : 95 00                STA $0,X
    2494/    140A : 68                   PLA
    2495/    140B : 95 09                STA $9,X
    2496/    140D : E8                   INX
    2497/    140E : 88                   DEY
    2498/    140F : D0 EC                BNE .min_rot_loop
    2499/    1411 : 68                   PLA
    2500/    1412 : AA                   TAX
    2501/    1413 : 60                   RTS
    2502/    1414 :                      
    2503/    1414 :                     WORD_CLEAR:
    2504/    1414 : 05 43 4C 45 41 52    FCB $5,"CLEAR"
    2505/    141A : 00 00                FDB $0
    2506/    141C : 0E                   FCB $E
    2507/    141D :                      
    2508/    141D :                     CODE_CLEAR:
    2509/    141D : 00                   FCB $0
    2510/    141E : A2 00                LDX #$0
    2511/    1420 : 8E 91 01             STX stack_count
    2512/    1423 : 60                   RTS
    2513/    1424 :                      
    2514/    1424 :                     JUMP_TABLE:
    2515/    1424 : 00 00                FDB $0
    2516/    1426 : 75 13                FDB CODE_DUP
    2517/    1428 : 8D 13                FDB CODE_SWAP
    2518/    142A : AB 13                FDB CODE_DROP
    2519/    142C : BD 13                FDB CODE_OVER
    2520/    142E : D4 13                FDB CODE_ROT
    2521/    1430 : F8 13                FDB CODE_MIN_ROT
    2522/    1432 : 1D 14                FDB CODE_CLEAR
    2523/    1434 :                      
    2524/    1434 :                     main:
    2525/    1434 : A2 2F                LDX #$2F
    2526/    1436 : 9A                   TXS
    2527/    1437 : 20 33 0B             JSR setup
    2528/    143A : 20 6D C1             JSR tests
    2529/    143D :                      .input_loop:
    2530/    143D : 20 84 0D             JSR DrawStack
    2531/    1440 : 20 04 0F             JSR ReadLine
    2532/    1443 :                      .process_loop:
    2533/    1443 : 20 4D 10             JSR LineWord
    2534/    1446 : AD 73 01             LDA new_word_len
    2535/    1449 : F0 F2                BEQ .input_loop
    2536/    144B : 20 92 10             JSR FindWord
    2537/    144E : A5 21                LDA ret_val
    2538/    1450 : F0 1A                BEQ .not_found
    2539/    1452 : A5 21                LDA ret_val
    2540/    1454 : 85 03                STA $3 ;ExecToken.token
    2541/    1456 : 20 20 13             JSR ExecToken
    2542/    1459 : A5 21                LDA ret_val
    2543/    145B : F0 0C                BEQ .no_exec_error
    2544/    145D : 85 02                STA $2 ;arg
    2545/    145F : A5 02                LDA $2 ;arg
    2546/    1461 : 85 03                STA $3 ;ErrorMsg.error_code
    2547/    1463 : 20 7A 0E             JSR ErrorMsg
    2548/    1466 : 4C 3D 14             JMP .input_loop
    2549/    1469 :                      .no_exec_error:
    2550/    1469 : 4C 43 14             JMP .process_loop
    2551/    146C :                      .not_found:
    2552/    146C : 20 D9 10             JSR CheckData
    2553/    146F : AD 87 01             LDA new_stack_item
    2554/    1472 : C9 04                CMP #$4
    2555/    1474 : D0 0A                BNE .input_good
    2556/    1476 : A9 02                LDA #$2
    2557/    1478 : 85 03                STA $3 ;ErrorMsg.error_code
    2558/    147A : 20 7A 0E             JSR ErrorMsg
    2559/    147D : 4C 3D 14             JMP .input_loop
    2560/    1480 :                      .input_good:
    2561/    1480 : A9 07                LDA #$7
    2562/    1482 : CD 91 01             CMP stack_count
    2563/    1485 : B0 0A                BCS .no_overflow
    2564/    1487 : A9 08                LDA #$8
    2565/    1489 : 85 03                STA $3 ;ErrorMsg.error_code
    2566/    148B : 20 7A 0E             JSR ErrorMsg
    2567/    148E : 4C 3D 14             JMP .input_loop
    2568/    1491 :                      .no_overflow:
    2569/    1491 : 20 65 13             JSR StackAddItem
    2570/    1494 : 86 00                STX $0 ;dest
    2571/    1496 : A9 00                LDA #$0
    2572/    1498 : 85 01                STA $1 ;dest
    2573/    149A : A9 87                LDA # (new_stack_item) # $100
    2574/    149C : 85 03                STA $3 ;MemCopy.source
    2575/    149E : A9 01                LDA # (new_stack_item)/$100
    2576/    14A0 : 85 04                STA $4 ;MemCopy.source
    2577/    14A2 : A5 00                LDA $0 ;dest
    2578/    14A4 : 85 05                STA $5 ;MemCopy.dest
    2579/    14A6 : A5 01                LDA $1 ;dest
    2580/    14A8 : 85 06                STA $6 ;MemCopy.dest
    2581/    14AA : A9 09                LDA #$9
    2582/    14AC : 85 07                STA $7 ;MemCopy.count
    2583/    14AE : 20 06 0C             JSR MemCopy
    2584/    14B1 : 4C 43 14             JMP .process_loop
    2585/    14B4 : 60                   RTS
    2586/    14B5 :                      
    2587/    14B5 :                     code_end:
    2588/    14B5 :                     
    2589/    14B5 :                     
    2590/    14B5 : =$14B5              EEPROM set *
    2591/    14B5 :                     
    2592/    14B5 :                     	OUTRADIX 10
    2593/    14B5 :                     
    2594/    14B5 :                     AddCommas MACRO num
    2595/    14B5 :                     comma_ret set "\{num}"
    2596/    14B5 :                     	IF num<1000
    2597/    14B5 :                     		EXITM
    2598/    14B5 :                     	ELSE
    2599/    14B5 :                     comma_ret set "\{substr(comma_ret,0,strlen(comma_ret)-3)},\{substr(comma_ret,strlen(comma_ret)-3,strlen(comma_ret))}"
    2600/    14B5 :                     	ENDIF
    2601/    14B5 :                     	ENDM
    2602/    14B5 :                     
    2603/    14B5 :                     ;Display memory usage in console
    2604/    14B5 :                     ;===============================
 
    2605/    14B5 :                     	MESSAGE " "
Memory usage
    2606/    14B5 :                     	MESSAGE "Memory usage"
============
    2607/    14B5 :                     	MESSAGE "============"
    2608/    14B5 : (MACRO)             	AddCommas EEPROM-$900
    2608/    14B5 : =2997               comma_ret set "\{EEPROM-$900}"
    2608/    14B5 : =>FALSE                     IF EEPROM-$900<1000
    2608/    14B5 :                                     EXITM
    2608/    14B5 : =>TRUE                      ELSE
    2608/    14B5 : =2,997              comma_ret set "\{substr(comma_ret,0,strlen(comma_ret)-3)},\{substr(comma_ret,strlen(comma_ret)-3,strlen(comma_ret))}"
    2608/    14B5 : [2608]                      ENDIF
ROM size:	2,997 bytes (36%) of 8k ROM
    2609/    14B5 :                     	MESSAGE "ROM size:	\{comma_ret} bytes (\{100*(EEPROM-$900)/$2000}%) of 8k ROM"
    2610/    14B5 :                     	;AddCommas GENRAM-$200
    2611/    14B5 :                     	;MESSAGE "RAM size:	\{comma_ret} bytes (\{100*(GENRAM-$200)/($4000-$200)}%) of 15.8k bank"
    2612/    14B5 :                     	;Tell script that prints assembler output to stop outputting
    2613/    14B5 :                     	;Eliminates double output (because of multiple passes???)
END
    2614/    14B5 :                     	MESSAGE "END"
 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 2 - 9/3/2020 18:17:8


  Symbol Table (* = unused):
  --------------------------

*ARCHITECTURE :  i386-unknown-win32 - |  BCD_Reverse :                  C12 C |
 BCD_Reverse.loop :             C17 C | *BIGENDIAN :                      0 - |
*BRANCHEXT :                      0 - | *CASESENSITIVE :                  1 - |
 CODE_CLEAR :                  141D C |  CODE_DROP :                   13AB C |
 CODE_DUP :                    1375 C |  CODE_DUP.dup_loop :           137A C |
 CODE_MIN_ROT :                13F8 C |  CODE_MIN_ROT.min_rot_loop :   13FD C |
 CODE_OVER :                   13BD C |  CODE_OVER.over_loop :         13C2 C |
 CODE_ROT :                    13D4 C |  CODE_ROT.rot_loop :           13D9 C |
 CODE_SWAP :                   138D C |  CODE_SWAP.swap_loop :         1392 C |
*CONSTPI :        3.141592653589793 - |  CheckData :                   10D9 C |
 CheckData.add_digit :         12F9 C |  CheckData.dec_exp_count :     11C6 C |
 CheckData.decimal_good :      1218 C |  CheckData.digit :             12EC C |
 CheckData.digit_good :        11CB C |  CheckData.digit_ok :          11D7 C |
 CheckData.digit_zero :        11B9 C |  CheckData.exp_count_done :    127E C |
 CheckData.exp_count_neg :     1278 C |  CheckData.exp_count_neg2 :    1288 C |
 CheckData.exp_digit :         11EA C |  CheckData.exp_digit_ok :      11F2 C |
 CheckData.exp_good :          121D C |  CheckData.exp_loop :          11F7 C |
 CheckData.exp_min_loop :      1278 C |  CheckData.exp_no_neg_bit :    12CA C |
 CheckData.exp_pos_loop :      126F C |  CheckData.exp_positive :      1265 C |
 CheckData.exp_positive2 :     12B4 C |  CheckData.first_exp :         122C C |
 CheckData.float_done :        1252 C |  CheckData.float_first_done :  11A2 C |
 CheckData.float_next :        11E1 C |  CheckData.float_no_neg :      119D C |
 CheckData.float_not_digit :   120F C |  CheckData.float_not_exp :     11A2 C |
 CheckData.hex_char_next :     1167 C |  CheckData.hex_done :          1171 C |
 CheckData.hex_error :         1177 C |  CheckData.hex_rot_loop :      12E0 C |
 CheckData.hex_rotate :        12DC C |  CheckData.is_digit_no :       12F7 C |
 CheckData.loop_float :        11A2 C |  CheckData.loop_hex :          1139 C |
 CheckData.loop_str :          1102 C |  CheckData.minus_good :        124B C |
 CheckData.no_dec_yet :        11DD C |  CheckData.no_exp_overflow :   12BE C |
 CheckData.not_decimal_point : 1223 C |  CheckData.not_digit :         1153 C |
 CheckData.not_exp :           123C C |  CheckData.not_hex :           1178 C |
 CheckData.not_minus :         1251 C |  CheckData.not_single_quote :  10FF C |
 CheckData.not_string :        1125 C |  CheckData.not_zero_len :      10E4 C |
 CheckData.positive :          12D6 C |  CheckData.second_digit :      1313 C |
 CheckData.str_done :          1119 C |  CheckData.str_return :        1124 C |
 CheckData.string_too_long :   1118 C |
 CheckData.string_unterminated :                                       1118 C |
 CheckData.zero_loop :         10E8 C | *DATE :                    9/3/2020 - |
 DebugText :                   C000 C |  DebugText.done :              C00D C |
 DebugText.loop :              C002 C |  DigitHigh :                    C24 C |
 DigitLow :                     C37 C |  DrawFloat :                    C48 C |
 DrawFloat.loop :               C96 C |  DrawFloat.positive :           C6F C |
 DrawFloat.positive_e :         CC3 C |  DrawHex :                      D2A C |
 DrawStack :                    D84 C |  DrawStack.._2409.str_addr :    D94 C |
 DrawStack.._2409.str_skip :    D98 C |  DrawStack.item_done :          E07 C |
 DrawStack.loop :               DAB C |  DrawStack.loop_line :          E23 C |
 DrawStack.no_item :            E07 C |  DrawStack.not_float :          DE3 C |
 DrawStack.not_hex :            E07 C |  DrawStack.not_str :            DF5 C |
 DrawString :                   D5A C |  DrawString.done :              D7C C |
 DrawString.loop :              D65 C |  EEPROM :                      14B5 - |
 ERROR_MSG_INPUT :              E2F C |  ERROR_MSG_STACK_OVERFLOW :     E56 C |
 ERROR_MSG_STACK_UNDERFLOW :    E63 C |  ERROR_MSG_STRING :             E49 C |
 ERROR_MSG_WORD_TOO_LONG :      E3C C |  ERROR_TABLE :                  E70 C |
 ErrorMsg :                     E7A C |  ErrorMsg.._2584.str_addr :     E91 C |
 ErrorMsg.._2584.str_skip :     E9E C |  ErrorMsg.._2638.str_addr :     ECC C |
 ErrorMsg.._2638.str_skip :     ED9 C |  ErrorMsg.loop :                EE9 C |
 ExecToken :                   1320 C |  ExecToken.no_add_item :       135D C |
 ExecToken.no_flags :          135D C |  ExecToken.no_overflow :       135A C |
 ExecToken.no_underflow :      1348 C | *FALSE :                          0 - |
 FORTH_WORDS :                 136E C | *FULLPMMU :                       1 - |
 FindWord :                    1092 C |  FindWord.loop :               109A C |
 FindWord.loop_next :          10B4 C |  FindWord.no_match :           10B4 C |
 FindWord.str_loop :           10A4 C |  FindWord.word_found :         10CC C |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
 HexHigh :                      CEE C |  HexHigh.done :                 D05 C |
 HexHigh.print_digit :          D00 C |  HexLow :                       D0D C |
 HexLow.done :                  D22 C |  HexLow.print_digit :           D1D C |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      0 - | *InitForth :                    EF2 C |
 InputTest :                   C018 C |  InputTest.._101.str_addr :    C0BC C |
 InputTest.._101.str_skip :    C0CA C |  InputTest.._153.str_addr :    C0E3 C |
 InputTest.._153.str_skip :    C0F3 C |  InputTest.._178.str_addr :    C12F C |
 InputTest.._178.str_skip :    C137 C |  InputTest.._202.str_addr :    C14E C |
 InputTest.._202.str_skip :    C159 C |  InputTest.._223.no_carry :    C16C C |
 InputTest.._53.str_addr :     C083 C |  InputTest.._53.str_skip :     C08B C |
 InputTest.._77.str_addr :     C0A2 C |  InputTest.._77.str_skip :     C0AE C |
 InputTest.check_loop :        C037 C |  InputTest.continue :          C07A C |
 InputTest.done :              C12C C |  InputTest.fail_done :         C124 C |
 InputTest.fail_loop :         C106 C |  InputTest.failed :            C080 C |
 InputTest.letter :            C045 C |  InputTest.letter2 :           C05B C |
 InputTest.letter_done :       C048 C |  InputTest.letter_done2 :      C05E C |
 InputTest.loop :              C01A C |  InputTest.loop_done :         C02B C |
 InputTest.not_minus :         C024 C |  JUMP_TABLE :                  1424 C |
 LCD_char :                     B72 C |  LCD_char.._1668.skip :         B7B C |
 LCD_char.._1673.skip :         B83 C |  LCD_char.color :               BC4 C |
 LCD_char.if0 :                 B7C C |  LCD_char.if1 :                 B84 C |
 LCD_char.loop :                BAB C |  LCD_char.loop.inner :          BBC C |
 LCD_clrscr :                   B4E C |  LCD_clrscr.loop :              B5E C |
 LCD_print :                    BED C |  LCD_print.done :               C05 C |
 LCD_print.loop :               BF1 C | *LISTON :                         1 - |
 LineWord :                    104D C |  LineWord.chars_left :         105F C |
 LineWord.chars_left2 :        1085 C |  LineWord.found :              1090 C |
 LineWord.loop :               105F C |  LineWord.not_space :          1072 C |
 LineWord.word_size_good :     1085 C | *MACEXP :                         7 - |
*MOMCPU :                      6502 - | *MOMCPUNAME :                  6502 - |
 MemCopy :                      C06 C |  MemCopy.loop :                 C08 C |
*NESTMAX :                      100 - | *PACKING :                        0 - |
*PADDING :                        1 - |  R0 :                            25 C |
*R1 :                            2E C | *R2 :                            37 C |
*R3 :                            40 C | *R4 :                            49 C |
*R5 :                            52 C | *R6 :                            5B C |
*R7 :                            64 C | *RELAXED :                        0 - |
 ReadKey :                      B4A C |  ReadLine :                     F04 C |
 ReadLine.._2689.str_addr :     F13 C |  ReadLine.._2689.str_skip :     F24 C |
 ReadLine.backspace_done :      F83 C |  ReadLine.backspace_scroll :    F7D C |
 ReadLine.buffer_full :        101D C |  ReadLine.cursor_done :        1049 C |
 ReadLine.draw :               1039 C |  ReadLine.draw_blank :         1033 C |
 ReadLine.draw_done :          101D C |  ReadLine.key_done :            FC6 C |
 ReadLine.key_read :            F40 C |  ReadLine.loop :                F34 C |
 ReadLine.no_key :             101D C |  ReadLine.not_backspace :       F86 C |
 ReadLine.not_enter :           F53 C |  ReadLine.not_lower :           FC6 C |
 ReadLine.not_num :             FAC C |  ReadLine.not_upper :           FB9 C |
 ReadLine.not_valid :          101D C |  ReadLine.scroll_buffer :       FF0 C |
 ReadLine.scroll_loop :         FFA C |  ReadLine.special_loop :        F88 C |
 ReadLine.special_next :        F9A C | *STACK_END :                     6D C |
 StackAddItem :                1365 C | *TIME :                     18:17:8 - |
*TRUE :                           1 - | *VERSION :                     142F - |
 WORD_CLEAR :                  1414 C |  WORD_DROP :                   13A3 C |
*WORD_DUP :                    136E C |  WORD_MIN_ROT :                13F0 C |
 WORD_OVER :                   13B5 C |  WORD_ROT :                    13CD C |
 WORD_SWAP :                   1385 C |  code_begin :                   900 C |
 code_end :                    14B5 C |  comma_ret :                  2,997 - |
 dummy :                         20 C |  font_inverted :                190 C |
 font_table :                   903 C | *global_error :                 130 C |
*halt_test :                   C00E C |  halt_test.done :              C017 C |
 input_buff :                   133 C |  input_buff_begin :             131 C |
 input_buff_end :               132 C |  main :                        1434 C |
 main.input_good :             1480 C |  main.input_loop :             143D C |
 main.no_exec_error :          1469 C |  main.no_overflow :            1491 C |
 main.not_found :              146C C |  main.process_loop :           1443 C |
 new_stack_item :               187 C |  new_word_buff :                174 C |
 new_word_len :                 173 C |  ret_val :                       21 C |
 screen_ptr :                    23 C |  setup :                        B33 C |
 special_chars :                EFE C |  stack_count :                  191 C |
 test_count :                   192 C |  tests :                       C16D C |
 tests.._1015.str_addr :       C7EE C |  tests.._1015.str_skip :       C7FC C |
 tests.._1024.str_addr :       C807 C |  tests.._1024.str_skip :       C822 C |
 tests.._1042.str_addr :       C830 C |  tests.._1042.str_skip :       C841 C |
 tests.._1051.str_addr :       C84C C |  tests.._1051.str_skip :       C867 C |
 tests.._1069.str_addr :       C875 C |  tests.._1069.str_skip :       C877 C |
 tests.._1078.str_addr :       C882 C |  tests.._1078.str_skip :       C885 C |
 tests.._1096.str_addr :       C893 C |  tests.._1096.str_skip :       C895 C |
 tests.._1105.str_addr :       C8A0 C |  tests.._1105.str_skip :       C8A3 C |
 tests.._1123.str_addr :       C8B1 C |  tests.._1123.str_skip :       C8B4 C |
 tests.._1132.str_addr :       C8BF C |  tests.._1132.str_skip :       C8C2 C |
 tests.._1150.str_addr :       C8D0 C |  tests.._1150.str_skip :       C8D5 C |
 tests.._1159.str_addr :       C8E0 C |  tests.._1159.str_skip :       C8FB C |
 tests.._1177.str_addr :       C909 C |  tests.._1177.str_skip :       C90E C |
 tests.._1186.str_addr :       C919 C |  tests.._1186.str_skip :       C934 C |
 tests.._1204.str_addr :       C942 C |  tests.._1204.str_skip :       C947 C |
 tests.._1213.str_addr :       C952 C |  tests.._1213.str_skip :       C96D C |
 tests.._1231.str_addr :       C97B C |  tests.._1231.str_skip :       C980 C |
 tests.._1240.str_addr :       C98B C |  tests.._1240.str_skip :       C9A6 C |
 tests.._1258.str_addr :       C9B4 C |  tests.._1258.str_skip :       C9B9 C |
 tests.._1267.str_addr :       C9C4 C |  tests.._1267.str_skip :       C9DF C |
 tests.._1285.str_addr :       C9ED C |  tests.._1285.str_skip :       C9F2 C |
 tests.._1294.str_addr :       C9FD C |  tests.._1294.str_skip :       CA18 C |
 tests.._1312.str_addr :       CA26 C |  tests.._1312.str_skip :       CA2B C |
 tests.._1321.str_addr :       CA36 C |  tests.._1321.str_skip :       CA51 C |
 tests.._1339.str_addr :       CA5F C |  tests.._1339.str_skip :       CA64 C |
 tests.._1348.str_addr :       CA6F C |  tests.._1348.str_skip :       CA8A C |
 tests.._1366.str_addr :       CA98 C |  tests.._1366.str_skip :       CA9D C |
 tests.._1375.str_addr :       CAA8 C |  tests.._1375.str_skip :       CAC3 C |
 tests.._1393.str_addr :       CAD1 C |  tests.._1393.str_skip :       CAD6 C |
 tests.._1402.str_addr :       CAE1 C |  tests.._1402.str_skip :       CAFC C |
 tests.._1420.str_addr :       CB0A C |  tests.._1420.str_skip :       CB0F C |
 tests.._1429.str_addr :       CB1A C |  tests.._1429.str_skip :       CB35 C |
 tests.._1447.str_addr :       CB43 C |  tests.._1447.str_skip :       CB48 C |
 tests.._1456.str_addr :       CB53 C |  tests.._1456.str_skip :       CB6E C |
 tests.._1474.str_addr :       CB7C C |  tests.._1474.str_skip :       CB81 C |
 tests.._1483.str_addr :       CB8C C |  tests.._1483.str_skip :       CBA7 C |
 tests.._1501.str_addr :       CBB5 C |  tests.._1501.str_skip :       CBBA C |
 tests.._1510.str_addr :       CBC5 C |  tests.._1510.str_skip :       CBE0 C |
 tests.._1528.str_addr :       CBEE C |  tests.._1528.str_skip :       CC03 C |
 tests.._1547.str_addr :       CC11 C |  tests.._1547.str_skip :       CC24 C |
 tests.._1566.str_addr :       CC39 C |  tests.._1566.str_skip :       CC40 C |
 tests.._232.str_addr :        C175 C |  tests.._232.str_skip :        C177 C |
 tests.._241.str_addr :        C182 C |  tests.._241.str_skip :        C19D C |
 tests.._259.str_addr :        C1AB C |  tests.._259.str_skip :        C1AF C |
 tests.._268.str_addr :        C1BA C |  tests.._268.str_skip :        C1D5 C |
 tests.._286.str_addr :        C1E3 C |  tests.._286.str_skip :        C1E7 C |
 tests.._295.str_addr :        C1F2 C |  tests.._295.str_skip :        C20D C |
 tests.._313.str_addr :        C21B C |  tests.._313.str_skip :        C221 C |
 tests.._322.str_addr :        C22C C |  tests.._322.str_skip :        C247 C |
 tests.._340.str_addr :        C255 C |  tests.._340.str_skip :        C25C C |
 tests.._349.str_addr :        C267 C |  tests.._349.str_skip :        C282 C |
 tests.._367.str_addr :        C290 C |  tests.._367.str_skip :        C294 C |
 tests.._376.str_addr :        C29F C |  tests.._376.str_skip :        C2BA C |
 tests.._394.str_addr :        C2C8 C |  tests.._394.str_skip :        C2CE C |
 tests.._403.str_addr :        C2D9 C |  tests.._403.str_skip :        C2F4 C |
 tests.._421.str_addr :        C302 C |  tests.._421.str_skip :        C308 C |
 tests.._430.str_addr :        C313 C |  tests.._430.str_skip :        C32E C |
 tests.._448.str_addr :        C33C C |  tests.._448.str_skip :        C344 C |
 tests.._457.str_addr :        C34F C |  tests.._457.str_skip :        C36A C |
 tests.._475.str_addr :        C378 C |  tests.._475.str_skip :        C380 C |
 tests.._484.str_addr :        C38B C |  tests.._484.str_skip :        C38E C |
 tests.._502.str_addr :        C39C C |  tests.._502.str_skip :        C39F C |
 tests.._511.str_addr :        C3AA C |  tests.._511.str_skip :        C3C5 C |
 tests.._529.str_addr :        C3D3 C |  tests.._529.str_skip :        C3D8 C |
 tests.._538.str_addr :        C3E3 C |  tests.._538.str_skip :        C3FE C |
 tests.._556.str_addr :        C40C C |  tests.._556.str_skip :        C415 C |
 tests.._565.str_addr :        C420 C |  tests.._565.str_skip :        C43B C |
 tests.._583.str_addr :        C449 C |  tests.._583.str_skip :        C44E C |
 tests.._592.str_addr :        C459 C |  tests.._592.str_skip :        C474 C |
 tests.._610.str_addr :        C482 C |  tests.._610.str_skip :        C489 C |
 tests.._619.str_addr :        C494 C |  tests.._619.str_skip :        C4AF C |
 tests.._637.str_addr :        C4BD C |  tests.._637.str_skip :        C4C4 C |
 tests.._646.str_addr :        C4CF C |  tests.._646.str_skip :        C4EA C |
 tests.._664.str_addr :        C4F8 C |  tests.._664.str_skip :        C4FF C |
 tests.._673.str_addr :        C50A C |  tests.._673.str_skip :        C525 C |
 tests.._691.str_addr :        C533 C |  tests.._691.str_skip :        C53B C |
 tests.._700.str_addr :        C546 C |  tests.._700.str_skip :        C561 C |
 tests.._718.str_addr :        C56F C |  tests.._718.str_skip :        C574 C |
 tests.._727.str_addr :        C57F C |  tests.._727.str_skip :        C59A C |
 tests.._745.str_addr :        C5A8 C |  tests.._745.str_skip :        C5AD C |
 tests.._754.str_addr :        C5B8 C |  tests.._754.str_skip :        C5D3 C |
 tests.._772.str_addr :        C5E1 C |  tests.._772.str_skip :        C5EB C |
 tests.._781.str_addr :        C5F6 C |  tests.._781.str_skip :        C611 C |
 tests.._799.str_addr :        C61F C |  tests.._799.str_skip :        C629 C |
 tests.._808.str_addr :        C634 C |  tests.._808.str_skip :        C637 C |
 tests.._826.str_addr :        C645 C |  tests.._826.str_skip :        C64E C |
 tests.._835.str_addr :        C659 C |  tests.._835.str_skip :        C674 C |
 tests.._853.str_addr :        C682 C |  tests.._853.str_skip :        C68A C |
 tests.._862.str_addr :        C695 C |  tests.._862.str_skip :        C6B0 C |
 tests.._880.str_addr :        C6BE C |  tests.._880.str_skip :        C6C5 C |
 tests.._889.str_addr :        C6D0 C |  tests.._889.str_skip :        C6EB C |
 tests.._907.str_addr :        C6F9 C |  tests.._907.str_skip :        C700 C |
 tests.._916.str_addr :        C70B C |  tests.._916.str_skip :        C726 C |
 tests.._934.str_addr :        C734 C |  tests.._934.str_skip :        C73B C |
 tests.._943.str_addr :        C746 C |  tests.._943.str_skip :        C761 C |
 tests.._961.str_addr :        C76F C |  tests.._961.str_skip :        C778 C |
 tests.._970.str_addr :        C783 C |  tests.._970.str_skip :        C79E C |
 tests.._988.str_addr :        C7AC C |  tests.._988.str_skip :        C7BA C |
 tests.._997.str_addr :        C7C5 C |  tests.._997.str_skip :        C7E0 C |

    470 symbols
     40 unused symbols

 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 3 - 9/3/2020 18:17:8


  Defined Macros:
  ---------------

AddCommas                             |

      1 macro

 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 4 - 9/3/2020 18:17:8


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.03 seconds assembly time

   2614 lines source file
   2620 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
