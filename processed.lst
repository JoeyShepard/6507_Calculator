 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 1 - 8/22/2020 1:11:10


       1/       0 :                      PAGE $0
       2/    1FFC :                      ORG $1FFC
       3/    1FFC : 89 12                FDB main
       4/       0 :                      ORG $0
       5/      20 :                      ORG $20
       6/      20 :                      
       7/      20 :                     dummy:
       8/      20 :                      DFS $1
       9/      21 :                      
      10/      21 :                     ret_val:
      11/      21 :                      DFS $2
      12/      23 :                      
      13/      23 :                     screen_ptr:
      14/      23 :                      DFS $2
      15/      25 :                      
      16/      25 :                     R0:
      17/      25 :                      DFS $9
      18/      2E :                      
      19/      2E :                     R1:
      20/      2E :                      DFS $9
      21/      37 :                      
      22/      37 :                     R2:
      23/      37 :                      DFS $9
      24/      40 :                      
      25/      40 :                     R3:
      26/      40 :                      DFS $9
      27/      49 :                      
      28/      49 :                     R4:
      29/      49 :                      DFS $9
      30/      52 :                      
      31/      52 :                     R5:
      32/      52 :                      DFS $9
      33/      5B :                      
      34/      5B :                     R6:
      35/      5B :                      DFS $9
      36/      64 :                      
      37/      64 :                     R7:
      38/      64 :                      DFS $9
      39/      6D :                     
      40/      6D :                     STACK_END:
      41/     130 :                      ORG $130
      42/     130 :                      
      43/     130 :                     global_error:
      44/     130 :                      DFS $1
      45/     131 :                      
      46/     131 :                     input_buff_begin:
      47/     131 :                      DFS $1
      48/     132 :                      
      49/     132 :                     input_buff_end:
      50/     132 :                      DFS $1
      51/     133 :                      
      52/     133 :                     input_buff:
      53/     133 :                      DFS $40
      54/     173 :                      
      55/     173 :                     new_word_len:
      56/     173 :                      DFS $1
      57/     174 :                      
      58/     174 :                     new_word_buff:
      59/     174 :                      DFS $13
      60/     187 :                      
      61/     187 :                     new_stack_item:
      62/     187 :                      DFS $9
      63/     190 :                      
      64/     190 :                     font_inverted:
      65/     190 :                      DFS $1
      66/     191 :                      
      67/     191 :                     stack_count:
      68/     191 :                      DFS $1
      69/     900 :                      ORG $900
      70/     900 : 4C 89 12             JMP main
      71/     903 :                      
      72/     903 :                     font_table:
      73/     903 : 00 00 00 00 00 00    FCB $0,$0,$0,$0,$0,$0,$0,$0
                    00 00             
      74/     90B : 30 78 78 30 30 00    FCB $30,$78,$78,$30,$30,$0,$30,$0
                    30 00             
      75/     913 : 6C 6C 6C 00 00 00    FCB $6C,$6C,$6C,$0,$0,$0,$0,$0
                    00 00             
      76/     91B : 6C 6C FE 6C FE 6C    FCB $6C,$6C,$FE,$6C,$FE,$6C,$6C,$0
                    6C 00             
      77/     923 : 30 7C C0 78 0C F8    FCB $30,$7C,$C0,$78,$C,$F8,$30,$0
                    30 00             
      78/     92B : 00 C6 CC 18 30 66    FCB $0,$C6,$CC,$18,$30,$66,$C6,$0
                    C6 00             
      79/     933 : 38 6C 38 76 DC CC    FCB $38,$6C,$38,$76,$DC,$CC,$76,$0
                    76 00             
      80/     93B : 60 60 C0 00 00 00    FCB $60,$60,$C0,$0,$0,$0,$0,$0
                    00 00             
      81/     943 : 18 30 60 60 60 30    FCB $18,$30,$60,$60,$60,$30,$18,$0
                    18 00             
      82/     94B : 60 30 18 18 18 30    FCB $60,$30,$18,$18,$18,$30,$60,$0
                    60 00             
      83/     953 : 00 66 3C FF 3C 66    FCB $0,$66,$3C,$FF,$3C,$66,$0,$0
                    00 00             
      84/     95B : 00 30 30 FC 30 30    FCB $0,$30,$30,$FC,$30,$30,$0,$0
                    00 00             
      85/     963 : 00 00 00 00 00 30    FCB $0,$0,$0,$0,$0,$30,$30,$60
                    30 60             
      86/     96B : 00 00 00 FC 00 00    FCB $0,$0,$0,$FC,$0,$0,$0,$0
                    00 00             
      87/     973 : 00 00 00 00 00 30    FCB $0,$0,$0,$0,$0,$30,$30,$0
                    30 00             
      88/     97B : 06 0C 18 30 60 C0    FCB $6,$C,$18,$30,$60,$C0,$80,$0
                    80 00             
      89/     983 : 7C C6 CE DE F6 E6    FCB $7C,$C6,$CE,$DE,$F6,$E6,$7C,$0
                    7C 00             
      90/     98B : 30 70 30 30 30 30    FCB $30,$70,$30,$30,$30,$30,$FC,$0
                    FC 00             
      91/     993 : 78 CC 0C 38 60 CC    FCB $78,$CC,$C,$38,$60,$CC,$FC,$0
                    FC 00             
      92/     99B : 78 CC 0C 38 0C CC    FCB $78,$CC,$C,$38,$C,$CC,$78,$0
                    78 00             
      93/     9A3 : 1C 3C 6C CC FE 0C    FCB $1C,$3C,$6C,$CC,$FE,$C,$1E,$0
                    1E 00             
      94/     9AB : FC C0 F8 0C 0C CC    FCB $FC,$C0,$F8,$C,$C,$CC,$78,$0
                    78 00             
      95/     9B3 : 38 60 C0 F8 CC CC    FCB $38,$60,$C0,$F8,$CC,$CC,$78,$0
                    78 00             
      96/     9BB : FC CC 0C 18 30 30    FCB $FC,$CC,$C,$18,$30,$30,$30,$0
                    30 00             
      97/     9C3 : 78 CC CC 78 CC CC    FCB $78,$CC,$CC,$78,$CC,$CC,$78,$0
                    78 00             
      98/     9CB : 78 CC CC 7C 0C 18    FCB $78,$CC,$CC,$7C,$C,$18,$70,$0
                    70 00             
      99/     9D3 : 00 30 30 00 00 30    FCB $0,$30,$30,$0,$0,$30,$30,$0
                    30 00             
     100/     9DB : 00 30 30 00 00 30    FCB $0,$30,$30,$0,$0,$30,$30,$60
                    30 60             
     101/     9E3 : 18 30 60 C0 60 30    FCB $18,$30,$60,$C0,$60,$30,$18,$0
                    18 00             
     102/     9EB : 00 00 FC 00 00 FC    FCB $0,$0,$FC,$0,$0,$FC,$0,$0
                    00 00             
     103/     9F3 : 60 30 18 0C 18 30    FCB $60,$30,$18,$C,$18,$30,$60,$0
                    60 00             
     104/     9FB : 78 CC 0C 18 30 00    FCB $78,$CC,$C,$18,$30,$0,$30,$0
                    30 00             
     105/     A03 : 7C C6 DE DE DE C0    FCB $7C,$C6,$DE,$DE,$DE,$C0,$78,$0
                    78 00             
     106/     A0B : 30 78 CC CC FC CC    FCB $30,$78,$CC,$CC,$FC,$CC,$CC,$0
                    CC 00             
     107/     A13 : FC 66 66 7C 66 66    FCB $FC,$66,$66,$7C,$66,$66,$FC,$0
                    FC 00             
     108/     A1B : 3C 66 C0 C0 C0 66    FCB $3C,$66,$C0,$C0,$C0,$66,$3C,$0
                    3C 00             
     109/     A23 : F8 6C 66 66 66 6C    FCB $F8,$6C,$66,$66,$66,$6C,$F8,$0
                    F8 00             
     110/     A2B : FE 62 68 78 68 62    FCB $FE,$62,$68,$78,$68,$62,$FE,$0
                    FE 00             
     111/     A33 : FE 62 68 78 68 60    FCB $FE,$62,$68,$78,$68,$60,$F0,$0
                    F0 00             
     112/     A3B : 3C 66 C0 C0 CE 66    FCB $3C,$66,$C0,$C0,$CE,$66,$3E,$0
                    3E 00             
     113/     A43 : CC CC CC FC CC CC    FCB $CC,$CC,$CC,$FC,$CC,$CC,$CC,$0
                    CC 00             
     114/     A4B : 78 30 30 30 30 30    FCB $78,$30,$30,$30,$30,$30,$78,$0
                    78 00             
     115/     A53 : 1E 0C 0C 0C CC CC    FCB $1E,$C,$C,$C,$CC,$CC,$78,$0
                    78 00             
     116/     A5B : E6 66 6C 78 6C 66    FCB $E6,$66,$6C,$78,$6C,$66,$E6,$0
                    E6 00             
     117/     A63 : F0 60 60 60 62 66    FCB $F0,$60,$60,$60,$62,$66,$FE,$0
                    FE 00             
     118/     A6B : C6 EE FE FE D6 C6    FCB $C6,$EE,$FE,$FE,$D6,$C6,$C6,$0
                    C6 00             
     119/     A73 : C6 E6 F6 DE CE C6    FCB $C6,$E6,$F6,$DE,$CE,$C6,$C6,$0
                    C6 00             
     120/     A7B : 38 6C C6 C6 C6 6C    FCB $38,$6C,$C6,$C6,$C6,$6C,$38,$0
                    38 00             
     121/     A83 : FC 66 66 7C 60 60    FCB $FC,$66,$66,$7C,$60,$60,$F0,$0
                    F0 00             
     122/     A8B : 78 CC CC CC DC 78    FCB $78,$CC,$CC,$CC,$DC,$78,$1C,$0
                    1C 00             
     123/     A93 : FC 66 66 7C 6C 66    FCB $FC,$66,$66,$7C,$6C,$66,$E6,$0
                    E6 00             
     124/     A9B : 78 CC E0 70 1C CC    FCB $78,$CC,$E0,$70,$1C,$CC,$78,$0
                    78 00             
     125/     AA3 : FC B4 30 30 30 30    FCB $FC,$B4,$30,$30,$30,$30,$78,$0
                    78 00             
     126/     AAB : CC CC CC CC CC CC    FCB $CC,$CC,$CC,$CC,$CC,$CC,$FC,$0
                    FC 00             
     127/     AB3 : CC CC CC CC CC 78    FCB $CC,$CC,$CC,$CC,$CC,$78,$30,$0
                    30 00             
     128/     ABB : C6 C6 C6 D6 FE EE    FCB $C6,$C6,$C6,$D6,$FE,$EE,$C6,$0
                    C6 00             
     129/     AC3 : C6 C6 6C 38 38 6C    FCB $C6,$C6,$6C,$38,$38,$6C,$C6,$0
                    C6 00             
     130/     ACB : CC CC CC 78 30 30    FCB $CC,$CC,$CC,$78,$30,$30,$78,$0
                    78 00             
     131/     AD3 : FE C6 8C 18 32 66    FCB $FE,$C6,$8C,$18,$32,$66,$FE,$0
                    FE 00             
     132/     ADB : 78 60 60 60 60 60    FCB $78,$60,$60,$60,$60,$60,$78,$0
                    78 00             
     133/     AE3 : C0 60 30 18 0C 06    FCB $C0,$60,$30,$18,$C,$6,$2,$0
                    02 00             
     134/     AEB : 78 18 18 18 18 18    FCB $78,$18,$18,$18,$18,$18,$78,$0
                    78 00             
     135/     AF3 : 10 38 6C C6 00 00    FCB $10,$38,$6C,$C6,$0,$0,$0,$0
                    00 00             
     136/     AFB : 00 00 00 00 00 00    FCB $0,$0,$0,$0,$0,$0,$0,$FF
                    00 FF             
     137/     B03 : FF FF FF FF FF FF    FCB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
                    FF FF             
     138/     B0B : 08 18 38 78 38 18    FCB $8,$18,$38,$78,$38,$18,$8,$0
                    08 00             
     139/     B13 : 00 00 00 00 FF FF    FCB $0,$0,$0,$0,$FF,$FF,$FF,$FF
                    FF FF             
     140/     B1B : FF FF FF FF 00 00    FCB $FF,$FF,$FF,$FF,$0,$0,$0,$0
                    00 00             
     141/     B23 : FF FF FF FF FF FF    FCB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
                    FF FF             
     142/     B2B : 00 00 EE 88 EE 88    FCB $0,$0,$EE,$88,$EE,$88,$EE,$0
                    EE 00             
     143/     B33 :                      
     144/     B33 :                     setup:
     145/     B33 : 78                   SEI
     146/     B34 : D8                   CLD
     147/     B35 : A2 00                LDX #$0
     148/     B37 : 8E 91 01             STX stack_count
     149/     B3A : A9 00                LDA #$0
     150/     B3C : 8D 90 01             STA font_inverted
     151/     B3F : A9 04                LDA #$4
     152/     B41 : 8D E1 FF             STA $FFE1
     153/     B44 : A9 05                LDA #$5
     154/     B46 : 8D E2 FF             STA $FFE2
     155/     B49 : 60                   RTS
     156/     B4A :                      
     157/     B4A :                     ReadKey:
     158/     B4A : AD E4 FF             LDA $FFE4
     159/     B4D : 60                   RTS
     160/     B4E :                      
     161/     B4E :                     LCD_clrscr:
     162/     B4E : A9 00                LDA #$0
     163/     B50 : 85 23                STA screen_ptr
     164/     B52 : A9 40                LDA #$40
     165/     B54 : 85 24                STA screen_ptr+$1
     166/     B56 : A9 80                LDA #$80
     167/     B58 : 85 06                STA $6 ;counter
     168/     B5A : A9 2A                LDA #$2A
     169/     B5C : A0 00                LDY #$0
     170/     B5E :                      .loop:
     171/     B5E : 91 23                STA (screen_ptr),Y
     172/     B60 : C8                   INY
     173/     B61 : D0 FB                BNE .loop
     174/     B63 : E6 24                INC screen_ptr+$1
     175/     B65 : C6 06                DEC $6 ;counter
     176/     B67 : D0 F5                BNE .loop
     177/     B69 : A9 00                LDA #$0
     178/     B6B : 85 23                STA screen_ptr
     179/     B6D : A9 40                LDA #$40
     180/     B6F : 85 24                STA screen_ptr+$1
     181/     B71 : 60                   RTS
     182/     B72 :                      
     183/     B72 :                     LCD_char:
     184/     B72 : A5 0E                LDA $E ;c_out
     185/     B74 : C9 20                CMP #$20
     186/     B76 : 90 03                BCC .._98.skip
     187/     B78 : 4C 7C 0B             JMP .if0
     188/     B7B :                      .._98.skip:
     189/     B7B : 60                   RTS
     190/     B7C :                      .if0:
     191/     B7C : C9 66                CMP #$66
     192/     B7E : B0 03                BCS .._103.skip
     193/     B80 : 4C 84 0B             JMP .if1
     194/     B83 :                      .._103.skip:
     195/     B83 : 60                   RTS
     196/     B84 :                      .if1:
     197/     B84 : 38                   SEC
     198/     B85 : E9 20                SBC #$20
     199/     B87 : 85 0F                STA $F ;pixel_ptr
     200/     B89 : A9 00                LDA #$0
     201/     B8B : 85 10                STA $10 ;pixel_ptr
     202/     B8D : 06 0F                ASL $F ;pixel_ptr
     203/     B8F : 06 0F                ASL $F ;pixel_ptr
     204/     B91 : 26 10                ROL $10 ;pixel_ptr
     205/     B93 : 06 0F                ASL $F ;pixel_ptr
     206/     B95 : 26 10                ROL $10 ;pixel_ptr
     207/     B97 : A9 03                LDA #font_table # $100
     208/     B99 : 65 0F                ADC $F ;pixel_ptr
     209/     B9B : 85 0F                STA $F ;pixel_ptr
     210/     B9D : A9 09                LDA #font_table/$100
     211/     B9F : 65 10                ADC $10 ;pixel_ptr
     212/     BA1 : 85 10                STA $10 ;pixel_ptr
     213/     BA3 : A9 00                LDA #$0
     214/     BA5 : 85 11                STA $11 ;pixel_index
     215/     BA7 : A9 08                LDA #$8
     216/     BA9 : 85 13                STA $13 ;lc1
     217/     BAB :                      .loop:
     218/     BAB : A9 08                LDA #$8
     219/     BAD : 85 14                STA $14 ;lc2
     220/     BAF : A4 11                LDY $11 ;pixel_index
     221/     BB1 : E6 11                INC $11 ;pixel_index
     222/     BB3 : B1 0F                LDA ($F),Y ;pixel_ptr
     223/     BB5 : 4D 90 01             EOR font_inverted
     224/     BB8 : 85 12                STA $12 ;pixel
     225/     BBA : A0 00                LDY #$0
     226/     BBC :                      .loop.inner:
     227/     BBC : 26 12                ROL $12 ;pixel
     228/     BBE : A9 00                LDA #$0
     229/     BC0 : B0 02                BCS .color
     230/     BC2 : A9 2A                LDA #$2A
     231/     BC4 :                      .color:
     232/     BC4 : 91 23                STA (screen_ptr),Y
     233/     BC6 : E6 24                INC screen_ptr+$1
     234/     BC8 : 91 23                STA (screen_ptr),Y
     235/     BCA : C8                   INY
     236/     BCB : 91 23                STA (screen_ptr),Y
     237/     BCD : C6 24                DEC screen_ptr+$1
     238/     BCF : 91 23                STA (screen_ptr),Y
     239/     BD1 : C8                   INY
     240/     BD2 : C6 14                DEC $14 ;lc2
     241/     BD4 : D0 E6                BNE .loop.inner
     242/     BD6 : E6 24                INC screen_ptr+$1
     243/     BD8 : E6 24                INC screen_ptr+$1
     244/     BDA : C6 13                DEC $13 ;lc1
     245/     BDC : D0 CD                BNE .loop
     246/     BDE : 18                   CLC
     247/     BDF : A5 23                LDA screen_ptr
     248/     BE1 : 69 10                ADC #$10
     249/     BE3 : 85 23                STA screen_ptr
     250/     BE5 : 38                   SEC
     251/     BE6 : A5 24                LDA screen_ptr+$1
     252/     BE8 : E9 10                SBC #$10
     253/     BEA : 85 24                STA screen_ptr+$1
     254/     BEC : 60                   RTS
     255/     BED :                      
     256/     BED :                     LCD_print:
     257/     BED : A9 00                LDA #$0
     258/     BEF : 85 09                STA $9 ;index
     259/     BF1 :                      .loop:
     260/     BF1 : A4 09                LDY $9 ;index
     261/     BF3 : B1 07                LDA ($7),Y ;source
     262/     BF5 : F0 0E                BEQ .done
     263/     BF7 : 85 0A                STA $A ;arg
     264/     BF9 : A5 0A                LDA $A ;arg
     265/     BFB : 85 0E                STA $E ;LCD_char.c_out
     266/     BFD : 20 72 0B             JSR LCD_char
     267/     C00 : E6 09                INC $9 ;index
     268/     C02 : 4C F1 0B             JMP .loop
     269/     C05 :                      .done:
     270/     C05 : 60                   RTS
     271/     C06 :                      
     272/     C06 :                     MemCopy:
     273/     C06 : A0 00                LDY #$0
     274/     C08 :                      .loop:
     275/     C08 : B1 0D                LDA ($D),Y ;source
     276/     C0A : 91 0F                STA ($F),Y ;dest
     277/     C0C : C8                   INY
     278/     C0D : C4 11                CPY $11 ;count
     279/     C0F : D0 F7                BNE .loop
     280/     C11 : 60                   RTS
     281/     C12 :                      
     282/     C12 :                     BCD_Reverse:
     283/     C12 : A0 00                LDY #$0
     284/     C14 : F8                   SED
     285/     C15 : 38                   SEC
     286/     C16 :                      .loop:
     287/     C16 : A9 00                LDA #$0
     288/     C18 : F1 0D                SBC ($D),Y ;source
     289/     C1A : 91 0D                STA ($D),Y ;source
     290/     C1C : C8                   INY
     291/     C1D : C4 0F                CPY $F ;count
     292/     C1F : D0 F5                BNE .loop
     293/     C21 : D8                   CLD
     294/     C22 : 60                   RTS
     295/     C23 :                      
     296/     C23 :                     DigitHigh:
     297/     C23 : A5 0D                LDA $D ;digit
     298/     C25 : 4A                   LSR
     299/     C26 : 4A                   LSR
     300/     C27 : 4A                   LSR
     301/     C28 : 4A                   LSR
     302/     C29 : 18                   CLC
     303/     C2A : 69 30                ADC #$30
     304/     C2C : 85 0D                STA $D ;digit
     305/     C2E : A5 0D                LDA $D ;digit
     306/     C30 : 85 0E                STA $E ;LCD_char.c_out
     307/     C32 : 20 72 0B             JSR LCD_char
     308/     C35 : 60                   RTS
     309/     C36 :                      
     310/     C36 :                     DigitLow:
     311/     C36 : A5 0D                LDA $D ;digit
     312/     C38 : 29 0F                AND #$F
     313/     C3A : 18                   CLC
     314/     C3B : 69 30                ADC #$30
     315/     C3D : 85 0D                STA $D ;digit
     316/     C3F : A5 0D                LDA $D ;digit
     317/     C41 : 85 0E                STA $E ;LCD_char.c_out
     318/     C43 : 20 72 0B             JSR LCD_char
     319/     C46 : 60                   RTS
     320/     C47 :                      
     321/     C47 :                     DrawFloat:
     322/     C47 : A5 06                LDA $6 ;source
     323/     C49 : 85 0D                STA $D ;MemCopy.source
     324/     C4B : A5 07                LDA $7 ;source
     325/     C4D : 85 0E                STA $E ;MemCopy.source
     326/     C4F : A9 25                LDA # (R0) # $100
     327/     C51 : 85 0F                STA $F ;MemCopy.dest
     328/     C53 : A9 00                LDA # (R0)/$100
     329/     C55 : 85 10                STA $10 ;MemCopy.dest
     330/     C57 : A9 09                LDA #$9
     331/     C59 : 85 11                STA $11 ;MemCopy.count
     332/     C5B : 20 06 0C             JSR MemCopy
     333/     C5E : A9 20                LDA #$20
     334/     C60 : 85 0A                STA $A ;sign
     335/     C62 : A0 06                LDY #$6
     336/     C64 : B1 06                LDA ($6),Y ;source
     337/     C66 : C9 50                CMP #$50
     338/     C68 : 90 13                BCC .positive
     339/     C6A : A9 2D                LDA #$2D
     340/     C6C : 85 0A                STA $A ;sign
     341/     C6E : A9 26                LDA # (R0+$1) # $100
     342/     C70 : 85 0D                STA $D ;BCD_Reverse.source
     343/     C72 : A9 00                LDA # (R0+$1)/$100
     344/     C74 : 85 0E                STA $E ;BCD_Reverse.source
     345/     C76 : A9 06                LDA #$6
     346/     C78 : 85 0F                STA $F ;BCD_Reverse.count
     347/     C7A : 20 12 0C             JSR BCD_Reverse
     348/     C7D :                      .positive:
     349/     C7D : A5 0A                LDA $A ;sign
     350/     C7F : 85 0E                STA $E ;LCD_char.c_out
     351/     C81 : 20 72 0B             JSR LCD_char
     352/     C84 : A0 06                LDY #$6
     353/     C86 : B9 25 00             LDA R0,Y
     354/     C89 : 85 09                STA $9 ;arg
     355/     C8B : A5 09                LDA $9 ;arg
     356/     C8D : 85 0D                STA $D ;DigitHigh.digit
     357/     C8F : 20 23 0C             JSR DigitHigh
     358/     C92 : A9 2E                LDA #$2E
     359/     C94 : 85 0E                STA $E ;LCD_char.c_out
     360/     C96 : 20 72 0B             JSR LCD_char
     361/     C99 : A5 09                LDA $9 ;arg
     362/     C9B : 85 0D                STA $D ;DigitLow.digit
     363/     C9D : 20 36 0C             JSR DigitLow
     364/     CA0 : A9 05                LDA #$5
     365/     CA2 : 85 08                STA $8 ;index
     366/     CA4 :                      .loop:
     367/     CA4 : A4 08                LDY $8 ;index
     368/     CA6 : B9 25 00             LDA R0,Y
     369/     CA9 : 85 09                STA $9 ;arg
     370/     CAB : A5 09                LDA $9 ;arg
     371/     CAD : 85 0D                STA $D ;DigitHigh.digit
     372/     CAF : 20 23 0C             JSR DigitHigh
     373/     CB2 : A5 09                LDA $9 ;arg
     374/     CB4 : 85 0D                STA $D ;DigitLow.digit
     375/     CB6 : 20 36 0C             JSR DigitLow
     376/     CB9 : C6 08                DEC $8 ;index
     377/     CBB : A5 08                LDA $8 ;index
     378/     CBD : C9 02                CMP #$2
     379/     CBF : D0 E3                BNE .loop
     380/     CC1 : A9 2B                LDA #$2B
     381/     CC3 : 85 0A                STA $A ;sign
     382/     CC5 : A0 08                LDY #$8
     383/     CC7 : B1 06                LDA ($6),Y ;source
     384/     CC9 : C9 50                CMP #$50
     385/     CCB : 90 13                BCC .positive_e
     386/     CCD : A9 2D                LDA #$2D
     387/     CCF : 85 0A                STA $A ;sign
     388/     CD1 : A9 2C                LDA # (R0+$7) # $100
     389/     CD3 : 85 0D                STA $D ;BCD_Reverse.source
     390/     CD5 : A9 00                LDA # (R0+$7)/$100
     391/     CD7 : 85 0E                STA $E ;BCD_Reverse.source
     392/     CD9 : A9 02                LDA #$2
     393/     CDB : 85 0F                STA $F ;BCD_Reverse.count
     394/     CDD : 20 12 0C             JSR BCD_Reverse
     395/     CE0 :                      .positive_e:
     396/     CE0 : A5 0A                LDA $A ;sign
     397/     CE2 : 85 0E                STA $E ;LCD_char.c_out
     398/     CE4 : 20 72 0B             JSR LCD_char
     399/     CE7 : A0 08                LDY #$8
     400/     CE9 : B9 25 00             LDA R0,Y
     401/     CEC : 85 09                STA $9 ;arg
     402/     CEE : A5 09                LDA $9 ;arg
     403/     CF0 : 85 0D                STA $D ;DigitLow.digit
     404/     CF2 : 20 36 0C             JSR DigitLow
     405/     CF5 : A0 07                LDY #$7
     406/     CF7 : B9 25 00             LDA R0,Y
     407/     CFA : 85 09                STA $9 ;arg
     408/     CFC : A5 09                LDA $9 ;arg
     409/     CFE : 85 0D                STA $D ;DigitHigh.digit
     410/     D00 : 20 23 0C             JSR DigitHigh
     411/     D03 : A5 09                LDA $9 ;arg
     412/     D05 : 85 0D                STA $D ;DigitLow.digit
     413/     D07 : 20 36 0C             JSR DigitLow
     414/     D0A : 60                   RTS
     415/     D0B :                      
     416/     D0B :                     HexHigh:
     417/     D0B : A5 06                LDA $6 ;digit
     418/     D0D : 4A                   LSR
     419/     D0E : 4A                   LSR
     420/     D0F : 4A                   LSR
     421/     D10 : 4A                   LSR
     422/     D11 : C9 0A                CMP #$A
     423/     D13 : 90 08                BCC .print_digit
     424/     D15 : 18                   CLC
     425/     D16 : 69 37                ADC #$37
     426/     D18 : 85 07                STA $7 ;arg
     427/     D1A : 4C 22 0D             JMP .done
     428/     D1D :                      .print_digit:
     429/     D1D : 18                   CLC
     430/     D1E : 69 30                ADC #$30
     431/     D20 : 85 07                STA $7 ;arg
     432/     D22 :                      .done:
     433/     D22 : A5 07                LDA $7 ;arg
     434/     D24 : 85 0E                STA $E ;LCD_char.c_out
     435/     D26 : 20 72 0B             JSR LCD_char
     436/     D29 : 60                   RTS
     437/     D2A :                      
     438/     D2A :                     HexLow:
     439/     D2A : A5 06                LDA $6 ;digit
     440/     D2C : 29 0F                AND #$F
     441/     D2E : C9 0A                CMP #$A
     442/     D30 : 90 08                BCC .print_digit
     443/     D32 : 18                   CLC
     444/     D33 : 69 37                ADC #$37
     445/     D35 : 85 07                STA $7 ;arg
     446/     D37 : 4C 3F 0D             JMP .done
     447/     D3A :                      .print_digit:
     448/     D3A : 18                   CLC
     449/     D3B : 69 30                ADC #$30
     450/     D3D : 85 07                STA $7 ;arg
     451/     D3F :                      .done:
     452/     D3F : A5 07                LDA $7 ;arg
     453/     D41 : 85 0E                STA $E ;LCD_char.c_out
     454/     D43 : 20 72 0B             JSR LCD_char
     455/     D46 : 60                   RTS
     456/     D47 :                      
     457/     D47 :                     DrawHex:
     458/     D47 : A9 24                LDA #$24
     459/     D49 : 85 0E                STA $E ;LCD_char.c_out
     460/     D4B : 20 72 0B             JSR LCD_char
     461/     D4E : A0 02                LDY #$2
     462/     D50 : B1 08                LDA ($8),Y ;source
     463/     D52 : 85 0A                STA $A ;arg
     464/     D54 : A5 0A                LDA $A ;arg
     465/     D56 : 85 06                STA $6 ;HexHigh.digit
     466/     D58 : 20 0B 0D             JSR HexHigh
     467/     D5B : A5 0A                LDA $A ;arg
     468/     D5D : 85 06                STA $6 ;HexLow.digit
     469/     D5F : 20 2A 0D             JSR HexLow
     470/     D62 : A0 01                LDY #$1
     471/     D64 : B1 08                LDA ($8),Y ;source
     472/     D66 : 85 0A                STA $A ;arg
     473/     D68 : A5 0A                LDA $A ;arg
     474/     D6A : 85 06                STA $6 ;HexHigh.digit
     475/     D6C : 20 0B 0D             JSR HexHigh
     476/     D6F : A5 0A                LDA $A ;arg
     477/     D71 : 85 06                STA $6 ;HexLow.digit
     478/     D73 : 20 2A 0D             JSR HexLow
     479/     D76 : 60                   RTS
     480/     D77 :                      
     481/     D77 :                     DrawString:
     482/     D77 : A9 22                LDA #$22
     483/     D79 : 85 0E                STA $E ;LCD_char.c_out
     484/     D7B : 20 72 0B             JSR LCD_char
     485/     D7E : A9 01                LDA #$1
     486/     D80 : 85 09                STA $9 ;index
     487/     D82 :                      .loop:
     488/     D82 : A4 09                LDY $9 ;index
     489/     D84 : B1 06                LDA ($6),Y ;source
     490/     D86 : F0 11                BEQ .done
     491/     D88 : 85 08                STA $8 ;arg
     492/     D8A : A5 08                LDA $8 ;arg
     493/     D8C : 85 0E                STA $E ;LCD_char.c_out
     494/     D8E : 20 72 0B             JSR LCD_char
     495/     D91 : E6 09                INC $9 ;index
     496/     D93 : A5 09                LDA $9 ;index
     497/     D95 : C9 09                CMP #$9
     498/     D97 : D0 E9                BNE .loop
     499/     D99 :                      .done:
     500/     D99 : A9 22                LDA #$22
     501/     D9B : 85 0E                STA $E ;LCD_char.c_out
     502/     D9D : 20 72 0B             JSR LCD_char
     503/     DA0 : 60                   RTS
     504/     DA1 :                      
     505/     DA1 :                     DrawStack:
     506/     DA1 : 8A                   TXA
     507/     DA2 : 18                   CLC
     508/     DA3 : 69 24                ADC #$24
     509/     DA5 : 85 04                STA $4 ;address
     510/     DA7 : A9 00                LDA #$0
     511/     DA9 : 85 05                STA $5 ;address
     512/     DAB : 20 4E 0B             JSR LCD_clrscr
     513/     DAE : 4C B5 0D             JMP .._913.str_skip
     514/     DB1 :                      .._913.str_addr:
     515/     DB1 : 52 41 44 00          FCB "RAD",$0
     516/     DB5 :                      .._913.str_skip:
     517/     DB5 : A9 B1                LDA # (.._913.str_addr) # $100
     518/     DB7 : 85 07                STA $7 ;LCD_print.source
     519/     DB9 : A9 0D                LDA # (.._913.str_addr)/$100
     520/     DBB : 85 08                STA $8 ;LCD_print.source
     521/     DBD : 20 ED 0B             JSR LCD_print
     522/     DC0 : A9 35                LDA #$35
     523/     DC2 : 85 02                STA $2 ;character
     524/     DC4 : A9 05                LDA #$5
     525/     DC6 : 85 03                STA $3 ;counter
     526/     DC8 :                      .loop:
     527/     DC8 : A9 00                LDA #$0
     528/     DCA : 85 23                STA screen_ptr
     529/     DCC : A5 24                LDA screen_ptr+$1
     530/     DCE : 18                   CLC
     531/     DCF : 69 10                ADC #$10
     532/     DD1 : 85 24                STA screen_ptr+$1
     533/     DD3 : A5 02                LDA $2 ;character
     534/     DD5 : 85 0E                STA $E ;LCD_char.c_out
     535/     DD7 : 20 72 0B             JSR LCD_char
     536/     DDA : A9 3A                LDA #$3A
     537/     DDC : 85 0E                STA $E ;LCD_char.c_out
     538/     DDE : 20 72 0B             JSR LCD_char
     539/     DE1 : C6 03                DEC $3 ;counter
     540/     DE3 : A5 03                LDA $3 ;counter
     541/     DE5 : CD 91 01             CMP stack_count
     542/     DE8 : B0 3A                BCS .no_item
     543/     DEA : A0 00                LDY #$0
     544/     DEC : B1 04                LDA ($4),Y ;address
     545/     DEE : C9 01                CMP #$1
     546/     DF0 : D0 0E                BNE .not_float
     547/     DF2 : A5 04                LDA $4 ;address
     548/     DF4 : 85 06                STA $6 ;DrawFloat.source
     549/     DF6 : A5 05                LDA $5 ;address
     550/     DF8 : 85 07                STA $7 ;DrawFloat.source
     551/     DFA : 20 47 0C             JSR DrawFloat
     552/     DFD : 4C 24 0E             JMP .item_done
     553/     E00 :                      .not_float:
     554/     E00 : C9 02                CMP #$2
     555/     E02 : D0 0E                BNE .not_str
     556/     E04 : A5 04                LDA $4 ;address
     557/     E06 : 85 06                STA $6 ;DrawString.source
     558/     E08 : A5 05                LDA $5 ;address
     559/     E0A : 85 07                STA $7 ;DrawString.source
     560/     E0C : 20 77 0D             JSR DrawString
     561/     E0F : 4C 24 0E             JMP .item_done
     562/     E12 :                      .not_str:
     563/     E12 : C9 03                CMP #$3
     564/     E14 : D0 0E                BNE .not_hex
     565/     E16 : A5 04                LDA $4 ;address
     566/     E18 : 85 08                STA $8 ;DrawHex.source
     567/     E1A : A5 05                LDA $5 ;address
     568/     E1C : 85 09                STA $9 ;DrawHex.source
     569/     E1E : 20 47 0D             JSR DrawHex
     570/     E21 : 4C 24 0E             JMP .item_done
     571/     E24 :                      .not_hex:
     572/     E24 :                      .item_done:
     573/     E24 :                      .no_item:
     574/     E24 : A5 04                LDA $4 ;address
     575/     E26 : 38                   SEC
     576/     E27 : E9 09                SBC #$9
     577/     E29 : 85 04                STA $4 ;address
     578/     E2B : C6 02                DEC $2 ;character
     579/     E2D : A5 03                LDA $3 ;counter
     580/     E2F : D0 97                BNE .loop
     581/     E31 : A9 00                LDA #$0
     582/     E33 : 85 23                STA screen_ptr
     583/     E35 : A5 24                LDA screen_ptr+$1
     584/     E37 : 18                   CLC
     585/     E38 : 69 14                ADC #$14
     586/     E3A : 85 24                STA screen_ptr+$1
     587/     E3C : A0 00                LDY #$0
     588/     E3E : A9 00                LDA #$0
     589/     E40 :                      .loop_line:
     590/     E40 : 91 23                STA (screen_ptr),Y
     591/     E42 : E6 24                INC screen_ptr+$1
     592/     E44 : 91 23                STA (screen_ptr),Y
     593/     E46 : C6 24                DEC screen_ptr+$1
     594/     E48 : C8                   INY
     595/     E49 : D0 F5                BNE .loop_line
     596/     E4B : 60                   RTS
     597/     E4C :                      
     598/     E4C :                     ErrorMsg:
     599/     E4C : A9 20                LDA #$20
     600/     E4E : 85 23                STA screen_ptr
     601/     E50 : A9 60                LDA #$60
     602/     E52 : 85 24                STA screen_ptr+$1
     603/     E54 : 4C 64 0E             JMP .._1087.str_skip
     604/     E57 :                      .._1087.str_addr:
     605/     E57 : 62 62 62 62 62 62    FCB "bbbbbbbbbbbb",$0
                    62 62 62 62 62 62 
                    00                
     606/     E64 :                      .._1087.str_skip:
     607/     E64 : A9 57                LDA # (.._1087.str_addr) # $100
     608/     E66 : 85 07                STA $7 ;LCD_print.source
     609/     E68 : A9 0E                LDA # (.._1087.str_addr)/$100
     610/     E6A : 85 08                STA $8 ;LCD_print.source
     611/     E6C : 20 ED 0B             JSR LCD_print
     612/     E6F : A9 20                LDA #$20
     613/     E71 : 85 23                STA screen_ptr
     614/     E73 : A9 70                LDA #$70
     615/     E75 : 85 24                STA screen_ptr+$1
     616/     E77 : A9 FF                LDA #$FF
     617/     E79 : 8D 90 01             STA font_inverted
     618/     E7C : A5 02                LDA $2 ;msg
     619/     E7E : 85 07                STA $7 ;LCD_print.source
     620/     E80 : A5 03                LDA $3 ;msg
     621/     E82 : 85 08                STA $8 ;LCD_print.source
     622/     E84 : 20 ED 0B             JSR LCD_print
     623/     E87 : A9 20                LDA #$20
     624/     E89 : 85 23                STA screen_ptr
     625/     E8B : A9 80                LDA #$80
     626/     E8D : 85 24                STA screen_ptr+$1
     627/     E8F : 4C 9F 0E             JMP .._1137.str_skip
     628/     E92 :                      .._1137.str_addr:
     629/     E92 : 62 62 62 62 62 62    FCB "bbbbbbbbbbbb",$0
                    62 62 62 62 62 62 
                    00                
     630/     E9F :                      .._1137.str_skip:
     631/     E9F : A9 92                LDA # (.._1137.str_addr) # $100
     632/     EA1 : 85 07                STA $7 ;LCD_print.source
     633/     EA3 : A9 0E                LDA # (.._1137.str_addr)/$100
     634/     EA5 : 85 08                STA $8 ;LCD_print.source
     635/     EA7 : 20 ED 0B             JSR LCD_print
     636/     EAA : A9 00                LDA #$0
     637/     EAC : 8D 90 01             STA font_inverted
     638/     EAF :                      .loop:
     639/     EAF : 20 4A 0B             JSR ReadKey
     640/     EB2 : C9 0D                CMP #$D
     641/     EB4 : D0 F9                BNE .loop
     642/     EB6 : 60                   RTS
     643/     EB7 : 60                   RTS
     644/     EB8 :                      
     645/     EB8 :                     InitForth:
     646/     EB8 : A9 00                LDA #$0
     647/     EBA : 8D 31 01             STA input_buff_begin
     648/     EBD : 8D 32 01             STA input_buff_end
     649/     EC0 : 8D 73 01             STA new_word_len
     650/     EC3 : 60                   RTS
     651/     EC4 :                      
     652/     EC4 :                     special_chars:
     653/     EC4 : 65 22                FCB 'e',$22
     654/     EC6 : 20 2E 24 2D          FCB " .$-"
     655/     ECA :                      
     656/     ECA :                     ReadLine:
     657/     ECA : A9 00                LDA #$0
     658/     ECC : 85 02                STA $2 ;cursor
     659/     ECE : 85 05                STA $5 ;index
     660/     ED0 : 85 23                STA screen_ptr
     661/     ED2 : A9 AC                LDA #$AC
     662/     ED4 : 85 24                STA screen_ptr+$1
     663/     ED6 : 4C EA 0E             JMP .._1186.str_skip
     664/     ED9 :                      .._1186.str_addr:
     665/     ED9 : 61 20 20 20 20 20    FCB "a               ",$0
                    20 20 20 20 20 20 
                    20 20 20 20 00    
     666/     EEA :                      .._1186.str_skip:
     667/     EEA : A9 D9                LDA # (.._1186.str_addr) # $100
     668/     EEC : 85 07                STA $7 ;LCD_print.source
     669/     EEE : A9 0E                LDA # (.._1186.str_addr)/$100
     670/     EF0 : 85 08                STA $8 ;LCD_print.source
     671/     EF2 : 20 ED 0B             JSR LCD_print
     672/     EF5 : AD E6 FF             LDA $FFE6
     673/     EF8 : 85 03                STA $3 ;cursor_timer
     674/     EFA :                      .loop:
     675/     EFA : A9 00                LDA #$0
     676/     EFC : 85 04                STA $4 ;arg
     677/     EFE : 20 4A 0B             JSR ReadKey
     678/     F01 : D0 03                BNE .key_read
     679/     F03 : 4C DB 0F             JMP .no_key
     680/     F06 :                      .key_read:
     681/     F06 : C9 0D                CMP #$D
     682/     F08 : D0 0F                BNE .not_enter
     683/     F0A : A5 05                LDA $5 ;index
     684/     F0C : F0 EC                BEQ .loop
     685/     F0E : A9 00                LDA #$0
     686/     F10 : 8D 31 01             STA input_buff_begin
     687/     F13 : A5 05                LDA $5 ;index
     688/     F15 : 8D 32 01             STA input_buff_end
     689/     F18 : 60                   RTS
     690/     F19 :                      .not_enter:
     691/     F19 : C9 08                CMP #$8
     692/     F1B : D0 2F                BNE .not_backspace
     693/     F1D : A5 05                LDA $5 ;index
     694/     F1F : F0 28                BEQ .backspace_done
     695/     F21 : C6 05                DEC $5 ;index
     696/     F23 : C9 10                CMP #$10
     697/     F25 : B0 1C                BCS .backspace_scroll
     698/     F27 : A9 20                LDA #$20
     699/     F29 : 85 0E                STA $E ;LCD_char.c_out
     700/     F2B : 20 72 0B             JSR LCD_char
     701/     F2E : A5 23                LDA screen_ptr
     702/     F30 : 38                   SEC
     703/     F31 : E9 20                SBC #$20
     704/     F33 : 85 23                STA screen_ptr
     705/     F35 : 48                   PHA
     706/     F36 : A9 61                LDA #$61
     707/     F38 : 85 0E                STA $E ;LCD_char.c_out
     708/     F3A : 20 72 0B             JSR LCD_char
     709/     F3D : 68                   PLA
     710/     F3E : 85 23                STA screen_ptr
     711/     F40 : 4C DB 0F             JMP .draw_done
     712/     F43 :                      .backspace_scroll:
     713/     F43 : A4 05                LDY $5 ;index
     714/     F45 : 88                   DEY
     715/     F46 : 4C AE 0F             JMP .scroll_buffer
     716/     F49 :                      .backspace_done:
     717/     F49 : 4C DB 0F             JMP .no_key
     718/     F4C :                      .not_backspace:
     719/     F4C : A0 00                LDY #$0
     720/     F4E :                      .special_loop:
     721/     F4E : D9 C4 0E             CMP special_chars,Y
     722/     F51 : D0 05                BNE .special_next
     723/     F53 : 85 04                STA $4 ;arg
     724/     F55 : 4C 84 0F             JMP .key_done
     725/     F58 :                      .special_next:
     726/     F58 : C8                   INY
     727/     F59 : C0 06                CPY #$6
     728/     F5B : D0 F1                BNE .special_loop
     729/     F5D : C9 30                CMP #$30
     730/     F5F : 90 09                BCC .not_num
     731/     F61 : C9 3A                CMP #$3A
     732/     F63 : B0 05                BCS .not_num
     733/     F65 : 85 04                STA $4 ;arg
     734/     F67 : 4C 84 0F             JMP .key_done
     735/     F6A :                      .not_num:
     736/     F6A : C9 41                CMP #$41
     737/     F6C : 90 09                BCC .not_upper
     738/     F6E : C9 5B                CMP #$5B
     739/     F70 : B0 05                BCS .not_upper
     740/     F72 : 85 04                STA $4 ;arg
     741/     F74 : 4C 84 0F             JMP .key_done
     742/     F77 :                      .not_upper:
     743/     F77 : C9 61                CMP #$61
     744/     F79 : 90 09                BCC .not_lower
     745/     F7B : C9 7B                CMP #$7B
     746/     F7D : B0 05                BCS .not_lower
     747/     F7F : 38                   SEC
     748/     F80 : E9 20                SBC #$20
     749/     F82 : 85 04                STA $4 ;arg
     750/     F84 :                      .not_lower:
     751/     F84 :                      .key_done:
     752/     F84 : A5 04                LDA $4 ;arg
     753/     F86 : F0 53                BEQ .not_valid
     754/     F88 : A4 05                LDY $5 ;index
     755/     F8A : C0 40                CPY #$40
     756/     F8C : B0 4D                BCS .buffer_full
     757/     F8E : 99 33 01             STA input_buff,Y
     758/     F91 : E6 05                INC $5 ;index
     759/     F93 : C0 0F                CPY #$F
     760/     F95 : B0 17                BCS .scroll_buffer
     761/     F97 : A5 04                LDA $4 ;arg
     762/     F99 : 85 0E                STA $E ;LCD_char.c_out
     763/     F9B : 20 72 0B             JSR LCD_char
     764/     F9E : A5 23                LDA screen_ptr
     765/     FA0 : 48                   PHA
     766/     FA1 : A9 61                LDA #$61
     767/     FA3 : 85 0E                STA $E ;LCD_char.c_out
     768/     FA5 : 20 72 0B             JSR LCD_char
     769/     FA8 : 68                   PLA
     770/     FA9 : 85 23                STA screen_ptr
     771/     FAB : 4C DB 0F             JMP .draw_done
     772/     FAE :                      .scroll_buffer:
     773/     FAE : A9 00                LDA #$0
     774/     FB0 : 85 23                STA screen_ptr
     775/     FB2 : 98                   TYA
     776/     FB3 : 38                   SEC
     777/     FB4 : E9 0E                SBC #$E
     778/     FB6 : 85 06                STA $6 ;str_index
     779/     FB8 :                      .scroll_loop:
     780/     FB8 : A4 06                LDY $6 ;str_index
     781/     FBA : E6 06                INC $6 ;str_index
     782/     FBC : B9 33 01             LDA input_buff,Y
     783/     FBF : 85 04                STA $4 ;arg
     784/     FC1 : A5 04                LDA $4 ;arg
     785/     FC3 : 85 0E                STA $E ;LCD_char.c_out
     786/     FC5 : 20 72 0B             JSR LCD_char
     787/     FC8 : A5 05                LDA $5 ;index
     788/     FCA : C5 06                CMP $6 ;str_index
     789/     FCC : D0 EA                BNE .scroll_loop
     790/     FCE : A5 23                LDA screen_ptr
     791/     FD0 : 48                   PHA
     792/     FD1 : A9 61                LDA #$61
     793/     FD3 : 85 0E                STA $E ;LCD_char.c_out
     794/     FD5 : 20 72 0B             JSR LCD_char
     795/     FD8 : 68                   PLA
     796/     FD9 : 85 23                STA screen_ptr
     797/     FDB :                      .draw_done:
     798/     FDB :                      .buffer_full:
     799/     FDB :                      .not_valid:
     800/     FDB :                      .no_key:
     801/     FDB : AD E6 FF             LDA $FFE6
     802/     FDE : C5 03                CMP $3 ;cursor_timer
     803/     FE0 : F0 25                BEQ .cursor_done
     804/     FE2 : 85 03                STA $3 ;cursor_timer
     805/     FE4 : A5 02                LDA $2 ;cursor
     806/     FE6 : F0 09                BEQ .draw_blank
     807/     FE8 : A9 00                LDA #$0
     808/     FEA : 85 02                STA $2 ;cursor
     809/     FEC : A9 20                LDA #$20
     810/     FEE : 4C F7 0F             JMP .draw
     811/     FF1 :                      .draw_blank:
     812/     FF1 : A9 FF                LDA #$FF
     813/     FF3 : 85 02                STA $2 ;cursor
     814/     FF5 : A9 61                LDA #$61
     815/     FF7 :                      .draw:
     816/     FF7 : 85 04                STA $4 ;arg
     817/     FF9 : A5 04                LDA $4 ;arg
     818/     FFB : 85 0E                STA $E ;LCD_char.c_out
     819/     FFD : 20 72 0B             JSR LCD_char
     820/    1000 : A5 23                LDA screen_ptr
     821/    1002 : 38                   SEC
     822/    1003 : E9 10                SBC #$10
     823/    1005 : 85 23                STA screen_ptr
     824/    1007 :                      .cursor_done:
     825/    1007 : 4C FA 0E             JMP .loop
     826/    100A : 60                   RTS
     827/    100B :                      
     828/    100B :                     LineWord:
     829/    100B : A9 00                LDA #$0
     830/    100D : 8D 30 01             STA global_error
     831/    1010 : A9 00                LDA #$0
     832/    1012 : 8D 73 01             STA new_word_len
     833/    1015 : AC 31 01             LDY input_buff_begin
     834/    1018 : CC 32 01             CPY input_buff_end
     835/    101B : D0 01                BNE .chars_left
     836/    101D : 60                   RTS
     837/    101E :                      .chars_left:
     838/    101E :                      .loop:
     839/    101E : AC 31 01             LDY input_buff_begin
     840/    1021 : B9 33 01             LDA input_buff,Y
     841/    1024 : EE 31 01             INC input_buff_begin
     842/    1027 : C9 20                CMP #$20
     843/    1029 : D0 06                BNE .not_space
     844/    102B : AD 73 01             LDA new_word_len
     845/    102E : F0 15                BEQ .chars_left2
     846/    1030 : 60                   RTS
     847/    1031 :                      .not_space:
     848/    1031 : AC 73 01             LDY new_word_len
     849/    1034 : 99 74 01             STA new_word_buff,Y
     850/    1037 : C8                   INY
     851/    1038 : 8C 73 01             STY new_word_len
     852/    103B : C0 13                CPY #$13
     853/    103D : D0 06                BNE .word_size_good
     854/    103F : A9 01                LDA #$1
     855/    1041 : 8D 30 01             STA global_error
     856/    1044 : 60                   RTS
     857/    1045 :                      .word_size_good:
     858/    1045 :                      .chars_left2:
     859/    1045 : AD 31 01             LDA input_buff_begin
     860/    1048 : CD 32 01             CMP input_buff_end
     861/    104B : F0 03                BEQ .found
     862/    104D : 4C 1E 10             JMP .loop
     863/    1050 :                      .found:
     864/    1050 : 60                   RTS
     865/    1051 : 60                   RTS
     866/    1052 :                      
     867/    1052 :                     FindWord:
     868/    1052 : A9 54                LDA # (FORTH_WORDS) # $100
     869/    1054 : 85 21                STA ret_val
     870/    1056 : A9 12                LDA # (FORTH_WORDS)/$100
     871/    1058 : 85 22                STA ret_val+$1
     872/    105A :                      .loop:
     873/    105A : A0 00                LDY #$0
     874/    105C : B1 21                LDA (ret_val),Y
     875/    105E : CD 73 01             CMP new_word_len
     876/    1061 : D0 11                BNE .loop_next
     877/    1063 : C8                   INY
     878/    1064 :                      .str_loop:
     879/    1064 : B1 21                LDA (ret_val),Y
     880/    1066 : D9 73 01             CMP new_word_buff-$1,Y
     881/    1069 : D0 09                BNE .no_match
     882/    106B : CC 73 01             CPY new_word_len
     883/    106E : F0 1D                BEQ .word_found
     884/    1070 : C8                   INY
     885/    1071 : 4C 64 10             JMP .str_loop
     886/    1074 :                      .no_match:
     887/    1074 :                      .loop_next:
     888/    1074 : A0 00                LDY #$0
     889/    1076 : B1 21                LDA (ret_val),Y
     890/    1078 : A8                   TAY
     891/    1079 : C8                   INY
     892/    107A : B1 21                LDA (ret_val),Y
     893/    107C : 48                   PHA
     894/    107D : C8                   INY
     895/    107E : B1 21                LDA (ret_val),Y
     896/    1080 : 85 22                STA ret_val+$1
     897/    1082 : 68                   PLA
     898/    1083 : 85 21                STA ret_val
     899/    1085 : 05 22                ORA ret_val+$1
     900/    1087 : D0 D1                BNE .loop
     901/    1089 : 85 21                STA ret_val
     902/    108B : 85 22                STA ret_val+$1
     903/    108D :                      .word_found:
     904/    108D : 60                   RTS
     905/    108E :                      
     906/    108E :                     CheckData:
     907/    108E : A9 04                LDA #$4
     908/    1090 : 8D 87 01             STA new_stack_item
     909/    1093 : AD 73 01             LDA new_word_len
     910/    1096 : D0 01                BNE .not_zero_len
     911/    1098 : 60                   RTS
     912/    1099 :                      .not_zero_len:
     913/    1099 : A0 08                LDY #$8
     914/    109B : A9 00                LDA #$0
     915/    109D :                      .zero_loop:
     916/    109D : 99 87 01             STA new_stack_item,Y
     917/    10A0 : 88                   DEY
     918/    10A1 : D0 FA                BNE .zero_loop
     919/    10A3 : A0 00                LDY #$0
     920/    10A5 : AD 74 01             LDA new_word_buff
     921/    10A8 : C9 22                CMP #$22
     922/    10AA : D0 2E                BNE .not_string
     923/    10AC : AD 73 01             LDA new_word_len
     924/    10AF : C9 01                CMP #$1
     925/    10B1 : D0 01                BNE .not_single_quote
     926/    10B3 : 60                   RTS
     927/    10B4 :                      .not_single_quote:
     928/    10B4 : CE 73 01             DEC new_word_len
     929/    10B7 :                      .loop_str:
     930/    10B7 : B9 75 01             LDA new_word_buff+$1,y
     931/    10BA : C9 22                CMP #$22
     932/    10BC : F0 10                BEQ .str_done
     933/    10BE : C0 08                CPY #$8
     934/    10C0 : F0 0B                BEQ .string_too_long
     935/    10C2 : 99 88 01             STA new_stack_item+$1,Y
     936/    10C5 : C8                   INY
     937/    10C6 : CC 73 01             CPY new_word_len
     938/    10C9 : F0 02                BEQ .string_unterminated
     939/    10CB : D0 EA                BNE .loop_str
     940/    10CD :                      .string_too_long:
     941/    10CD :                      .string_unterminated:
     942/    10CD : 60                   RTS
     943/    10CE :                      .str_done:
     944/    10CE : C8                   INY
     945/    10CF : CC 73 01             CPY new_word_len
     946/    10D2 : D0 05                BNE .str_return
     947/    10D4 : A9 02                LDA #$2
     948/    10D6 : 8D 87 01             STA new_stack_item
     949/    10D9 :                      .str_return:
     950/    10D9 : 60                   RTS
     951/    10DA :                      .not_string:
     952/    10DA : C9 24                CMP #$24
     953/    10DC : D0 4F                BNE .not_hex
     954/    10DE : AD 73 01             LDA new_word_len
     955/    10E1 : C9 01                CMP #$1
     956/    10E3 : F0 47                BEQ .hex_error
     957/    10E5 : C9 06                CMP #$6
     958/    10E7 : B0 43                BCS .hex_error
     959/    10E9 : CE 73 01             DEC new_word_len
     960/    10EC : A0 00                LDY #$0
     961/    10EE :                      .loop_hex:
     962/    10EE : B9 75 01             LDA new_word_buff+$1,Y
     963/    10F1 : C9 30                CMP #$30
     964/    10F3 : 90 37                BCC .hex_error
     965/    10F5 : C9 3A                CMP #$3A
     966/    10F7 : B0 0F                BCS .not_digit
     967/    10F9 : 38                   SEC
     968/    10FA : E9 30                SBC #$30
     969/    10FC : 20 FE 11             JSR .hex_rotate
     970/    10FF : 0D 88 01             ORA new_stack_item+$1
     971/    1102 : 8D 88 01             STA new_stack_item+$1
     972/    1105 : 4C 1C 11             JMP .hex_char_next
     973/    1108 :                      .not_digit:
     974/    1108 : C9 41                CMP #$41
     975/    110A : 90 20                BCC .hex_error
     976/    110C : C9 47                CMP #$47
     977/    110E : B0 1C                BCS .hex_error
     978/    1110 : 38                   SEC
     979/    1111 : E9 37                SBC #$37
     980/    1113 : 20 FE 11             JSR .hex_rotate
     981/    1116 : 0D 88 01             ORA new_stack_item+$1
     982/    1119 : 8D 88 01             STA new_stack_item+$1
     983/    111C :                      .hex_char_next:
     984/    111C : C8                   INY
     985/    111D : CC 73 01             CPY new_word_len
     986/    1120 : F0 04                BEQ .hex_done
     987/    1122 : C0 04                CPY #$4
     988/    1124 : D0 C8                BNE .loop_hex
     989/    1126 :                      .hex_done:
     990/    1126 : A9 03                LDA #$3
     991/    1128 : 8D 87 01             STA new_stack_item
     992/    112B : 60                   RTS
     993/    112C :                      .hex_error:
     994/    112C : 60                   RTS
     995/    112D :                      .not_hex:
     996/    112D : A9 06                LDA #$6
     997/    112F : 85 04                STA $4 ;index
     998/    1131 : A9 00                LDA #$0
     999/    1133 : 85 05                STA $5 ;which_digit
    1000/    1135 : 85 06                STA $6 ;negative
    1001/    1137 : 85 07                STA $7 ;exp_negative
    1002/    1139 : 85 08                STA $8 ;exp_count
    1003/    113B : 85 0C                STA $C ;digit_count
    1004/    113D : 85 0B                STA $B ;nonzero_found
    1005/    113F : 85 0A                STA $A ;dec_found
    1006/    1141 : 85 09                STA $9 ;exp_found
    1007/    1143 : AD 74 01             LDA new_word_buff
    1008/    1146 : C9 2D                CMP #$2D
    1009/    1148 : D0 05                BNE .float_no_neg
    1010/    114A : A9 FF                LDA #$FF
    1011/    114C : 85 06                STA $6 ;negative
    1012/    114E : C8                   INY
    1013/    114F :                      .float_no_neg:
    1014/    114F :                      .loop_float:
    1015/    114F : B9 74 01             LDA new_word_buff,Y
    1016/    1152 : 20 0E 12             JSR .digit
    1017/    1155 : 90 5E                BCC .float_not_digit
    1018/    1157 : 48                   PHA
    1019/    1158 : A5 0B                LDA $B ;nonzero_found
    1020/    115A : D0 17                BNE .digit_good
    1021/    115C : 68                   PLA
    1022/    115D : 48                   PHA
    1023/    115E : F0 06                BEQ .digit_zero
    1024/    1160 : A9 FF                LDA #$FF
    1025/    1162 : 85 0B                STA $B ;nonzero_found
    1026/    1164 : D0 0D                BNE .digit_good
    1027/    1166 :                      .digit_zero:
    1028/    1166 : 68                   PLA
    1029/    1167 : A5 09                LDA $9 ;exp_found
    1030/    1169 : D0 1E                BNE .float_next
    1031/    116B : A5 0A                LDA $A ;dec_found
    1032/    116D : F0 1A                BEQ .float_next
    1033/    116F : C6 08                DEC $8 ;exp_count
    1034/    1171 : D0 16                BNE .float_next
    1035/    1173 :                      .digit_good:
    1036/    1173 : A5 09                LDA $9 ;exp_found
    1037/    1175 : D0 1B                BNE .exp_digit
    1038/    1177 : A5 0C                LDA $C ;digit_count
    1039/    1179 : C9 0C                CMP #$C
    1040/    117B : D0 02                BNE .digit_ok
    1041/    117D : 68                   PLA
    1042/    117E : 60                   RTS
    1043/    117F :                      .digit_ok:
    1044/    117F : A5 0A                LDA $A ;dec_found
    1045/    1181 : D0 02                BNE .no_dec_yet
    1046/    1183 : E6 08                INC $8 ;exp_count
    1047/    1185 :                      .no_dec_yet:
    1048/    1185 : 68                   PLA
    1049/    1186 : 20 1B 12             JSR .add_digit
    1050/    1189 :                      .float_next:
    1051/    1189 : C8                   INY
    1052/    118A : CC 73 01             CPY new_word_len
    1053/    118D : F0 69                BEQ .float_done
    1054/    118F : 4C 4F 11             JMP .loop_float
    1055/    1192 :                      .exp_digit:
    1056/    1192 : A5 0C                LDA $C ;digit_count
    1057/    1194 : C9 03                CMP #$3
    1058/    1196 : D0 02                BNE .exp_digit_ok
    1059/    1198 : 68                   PLA
    1060/    1199 : 60                   RTS
    1061/    119A :                      .exp_digit_ok:
    1062/    119A : 68                   PLA
    1063/    119B : 84 03                STY $3 ;y_buff
    1064/    119D : A0 04                LDY #$4
    1065/    119F :                      .exp_loop:
    1066/    119F : 0E 8E 01             ASL new_stack_item+$7
    1067/    11A2 : 2E 8F 01             ROL new_stack_item+$8
    1068/    11A5 : 88                   DEY
    1069/    11A6 : D0 F7                BNE .exp_loop
    1070/    11A8 : A4 03                LDY $3 ;y_buff
    1071/    11AA : 0D 8E 01             ORA new_stack_item+$7
    1072/    11AD : 8D 8E 01             STA new_stack_item+$7
    1073/    11B0 : E6 04                INC $4 ;index
    1074/    11B2 : 4C 89 11             JMP .float_next
    1075/    11B5 :                      .float_not_digit:
    1076/    11B5 : C9 2E                CMP #$2E
    1077/    11B7 : D0 10                BNE .not_decimal_point
    1078/    11B9 : A5 0A                LDA $A ;dec_found
    1079/    11BB : F0 01                BEQ .decimal_good
    1080/    11BD : 60                   RTS
    1081/    11BE :                      .decimal_good:
    1082/    11BE : A5 09                LDA $9 ;exp_found
    1083/    11C0 : F0 01                BEQ .exp_good
    1084/    11C2 : 60                   RTS
    1085/    11C3 :                      .exp_good:
    1086/    11C3 : A9 FF                LDA #$FF
    1087/    11C5 : 85 0A                STA $A ;dec_found
    1088/    11C7 : D0 C0                BNE .float_next
    1089/    11C9 :                      .not_decimal_point:
    1090/    11C9 : C9 65                CMP #$65
    1091/    11CB : D0 15                BNE .not_exp
    1092/    11CD : A5 09                LDA $9 ;exp_found
    1093/    11CF : F0 01                BEQ .first_exp
    1094/    11D1 : 60                   RTS
    1095/    11D2 :                      .first_exp:
    1096/    11D2 : A9 00                LDA #$0
    1097/    11D4 : 85 04                STA $4 ;index
    1098/    11D6 : 85 05                STA $5 ;which_digit
    1099/    11D8 : 85 0C                STA $C ;digit_count
    1100/    11DA : 85 0B                STA $B ;nonzero_found
    1101/    11DC : A9 FF                LDA #$FF
    1102/    11DE : 85 09                STA $9 ;exp_found
    1103/    11E0 : D0 A7                BNE .float_next
    1104/    11E2 :                      .not_exp:
    1105/    11E2 : C9 2D                CMP #$2D
    1106/    11E4 : D0 11                BNE .not_minus
    1107/    11E6 : A5 09                LDA $9 ;exp_found
    1108/    11E8 : 49 FF                EOR #$FF
    1109/    11EA : 05 04                ORA $4 ;index
    1110/    11EC : 05 07                ORA $7 ;exp_negative
    1111/    11EE : F0 01                BEQ .minus_good
    1112/    11F0 : 60                   RTS
    1113/    11F1 :                      .minus_good:
    1114/    11F1 : A9 FF                LDA #$FF
    1115/    11F3 : 85 07                STA $7 ;exp_negative
    1116/    11F5 : D0 92                BNE .float_next
    1117/    11F7 :                      .not_minus:
    1118/    11F7 : 60                   RTS
    1119/    11F8 :                      .float_done:
    1120/    11F8 : A9 01                LDA #$1
    1121/    11FA : 8D 87 01             STA new_stack_item
    1122/    11FD : 60                   RTS
    1123/    11FE :                      .hex_rotate:
    1124/    11FE : 84 03                STY $3 ;y_buff
    1125/    1200 : A0 04                LDY #$4
    1126/    1202 :                      .hex_rot_loop:
    1127/    1202 : 0E 88 01             ASL new_stack_item+$1
    1128/    1205 : 2E 89 01             ROL new_stack_item+$2
    1129/    1208 : 88                   DEY
    1130/    1209 : D0 F7                BNE .hex_rot_loop
    1131/    120B : A4 03                LDY $3 ;y_buff
    1132/    120D : 60                   RTS
    1133/    120E :                      .digit:
    1134/    120E : C9 3A                CMP #$3A
    1135/    1210 : B0 07                BCS .is_digit_no
    1136/    1212 : C9 30                CMP #$30
    1137/    1214 : 90 03                BCC .is_digit_no
    1138/    1216 : E9 30                SBC #$30
    1139/    1218 : 60                   RTS
    1140/    1219 :                      .is_digit_no:
    1141/    1219 : 18                   CLC
    1142/    121A : 60                   RTS
    1143/    121B :                      .add_digit:
    1144/    121B : 48                   PHA
    1145/    121C : 84 03                STY $3 ;y_buff
    1146/    121E : A4 04                LDY $4 ;index
    1147/    1220 : E6 0C                INC $C ;digit_count
    1148/    1222 : A5 05                LDA $5 ;which_digit
    1149/    1224 : 49 FF                EOR #$FF
    1150/    1226 : 85 05                STA $5 ;which_digit
    1151/    1228 : F0 0B                BEQ .second_digit
    1152/    122A : 68                   PLA
    1153/    122B : 0A                   ASL
    1154/    122C : 0A                   ASL
    1155/    122D : 0A                   ASL
    1156/    122E : 0A                   ASL
    1157/    122F : 99 87 01             STA new_stack_item,Y
    1158/    1232 : A4 03                LDY $3 ;y_buff
    1159/    1234 : 60                   RTS
    1160/    1235 :                      .second_digit:
    1161/    1235 : 68                   PLA
    1162/    1236 : 19 87 01             ORA new_stack_item,Y
    1163/    1239 : 99 87 01             STA new_stack_item,Y
    1164/    123C : C6 04                DEC $4 ;index
    1165/    123E : A4 03                LDY $3 ;y_buff
    1166/    1240 : 60                   RTS
    1167/    1241 : 60                   RTS
    1168/    1242 :                      
    1169/    1242 :                     Execute:
    1170/    1242 : A0 00                LDY #$0
    1171/    1244 : B1 02                LDA ($2),Y ;address
    1172/    1246 : 18                   CLC
    1173/    1247 : 69 04                ADC #$4
    1174/    1249 : 65 02                ADC $2 ;address
    1175/    124B : A8                   TAY
    1176/    124C : A9 00                LDA #$0
    1177/    124E : 65 03                ADC $3 ;address
    1178/    1250 : 48                   PHA
    1179/    1251 : 98                   TYA
    1180/    1252 : 48                   PHA
    1181/    1253 : 60                   RTS
    1182/    1254 :                      
    1183/    1254 :                     FORTH_WORDS:
    1184/    1254 :                      
    1185/    1254 :                     WORD_DUP:
    1186/    1254 : 03 44 55 50          FCB $3,"DUP"
    1187/    1258 : 5F 12                FDB WORD_SWAP
    1188/    125A : 05                   FCB $5
    1189/    125B : 02                   FCB $2
    1190/    125C :                      
    1191/    125C :                     CODE_DUP:
    1192/    125C : A9 05                LDA #$5
    1193/    125E : 60                   RTS
    1194/    125F :                      
    1195/    125F :                     WORD_SWAP:
    1196/    125F : 04 53 57 41 50       FCB $4,"SWAP"
    1197/    1264 : 6B 12                FDB WORD_DROP
    1198/    1266 : 02                   FCB $2
    1199/    1267 : 04                   FCB $4
    1200/    1268 :                      
    1201/    1268 :                     CODE_SWAP:
    1202/    1268 : A9 06                LDA #$6
    1203/    126A : 60                   RTS
    1204/    126B :                      
    1205/    126B :                     WORD_DROP:
    1206/    126B : 04 44 52 4F 50       FCB $4,"DROP"
    1207/    1270 : 7D 12                FDB WORD_OVER
    1208/    1272 : 01                   FCB $1
    1209/    1273 : 06                   FCB $6
    1210/    1274 :                      
    1211/    1274 :                     CODE_DROP:
    1212/    1274 : 8A                   TXA
    1213/    1275 : 18                   CLC
    1214/    1276 : 69 09                ADC #$9
    1215/    1278 : AA                   TAX
    1216/    1279 : CE 91 01             DEC stack_count
    1217/    127C : 60                   RTS
    1218/    127D :                      
    1219/    127D :                     WORD_OVER:
    1220/    127D : 04 4F 56 45 52       FCB $4,"OVER"
    1221/    1282 : 00 00                FDB $0
    1222/    1284 : 06                   FCB $6
    1223/    1285 : 08                   FCB $8
    1224/    1286 :                      
    1225/    1286 :                     CODE_OVER:
    1226/    1286 : A9 08                LDA #$8
    1227/    1288 : 60                   RTS
    1228/    1289 :                      
    1229/    1289 :                     main:
    1230/    1289 : A2 2F                LDX #$2F
    1231/    128B : 9A                   TXS
    1232/    128C : 20 33 0B             JSR setup
    1233/    128F :                      .input_loop:
    1234/    128F : 20 A1 0D             JSR DrawStack
    1235/    1292 : 20 CA 0E             JSR ReadLine
    1236/    1295 :                      .process_loop:
    1237/    1295 : 20 0B 10             JSR LineWord
    1238/    1298 : AD 73 01             LDA new_word_len
    1239/    129B : F0 F2                BEQ .input_loop
    1240/    129D : 20 52 10             JSR FindWord
    1241/    12A0 : A5 21                LDA ret_val
    1242/    12A2 : 05 22                ORA ret_val+$1
    1243/    12A4 : F0 0E                BEQ .not_found
    1244/    12A6 : A5 21                LDA ret_val
    1245/    12A8 : 85 02                STA $2 ;Execute.address
    1246/    12AA : A5 22                LDA ret_val+$1
    1247/    12AC : 85 03                STA $3 ;Execute.address
    1248/    12AE : 20 42 12             JSR Execute
    1249/    12B1 : 4C 8F 12             JMP .input_loop
    1250/    12B4 :                      .not_found:
    1251/    12B4 : 20 8E 10             JSR CheckData
    1252/    12B7 : AD 87 01             LDA new_stack_item
    1253/    12BA : C9 04                CMP #$4
    1254/    12BC : D0 1E                BNE .input_good
    1255/    12BE : 4C CE 12             JMP .._1480.str_skip
    1256/    12C1 :                      .._1480.str_addr:
    1257/    12C1 : 49 4E 50 55 54 20    FCB "INPUT ERROR ",$0
                    45 52 52 4F 52 20 
                    00                
    1258/    12CE :                      .._1480.str_skip:
    1259/    12CE : A9 C1                LDA # (.._1480.str_addr) # $100
    1260/    12D0 : 85 02                STA $2 ;ErrorMsg.msg
    1261/    12D2 : A9 12                LDA # (.._1480.str_addr)/$100
    1262/    12D4 : 85 03                STA $3 ;ErrorMsg.msg
    1263/    12D6 : 20 4C 0E             JSR ErrorMsg
    1264/    12D9 : 4C 8F 12             JMP .input_loop
    1265/    12DC :                      .input_good:
    1266/    12DC : 8A                   TXA
    1267/    12DD : 38                   SEC
    1268/    12DE : E9 09                SBC #$9
    1269/    12E0 : AA                   TAX
    1270/    12E1 : EE 91 01             INC stack_count
    1271/    12E4 : 85 00                STA $0 ;dest
    1272/    12E6 : A9 00                LDA #$0
    1273/    12E8 : 85 01                STA $1 ;dest
    1274/    12EA : A9 87                LDA # (new_stack_item) # $100
    1275/    12EC : 85 0D                STA $D ;MemCopy.source
    1276/    12EE : A9 01                LDA # (new_stack_item)/$100
    1277/    12F0 : 85 0E                STA $E ;MemCopy.source
    1278/    12F2 : A5 00                LDA $0 ;dest
    1279/    12F4 : 85 0F                STA $F ;MemCopy.dest
    1280/    12F6 : A5 01                LDA $1 ;dest
    1281/    12F8 : 85 10                STA $10 ;MemCopy.dest
    1282/    12FA : A9 09                LDA #$9
    1283/    12FC : 85 11                STA $11 ;MemCopy.count
    1284/    12FE : 20 06 0C             JSR MemCopy
    1285/    1301 : 4C 95 12             JMP .process_loop
    1286/    1304 : 60                   RTS
    1287/    1305 :                     
    1288/    1305 :                     
    1289/    1305 : =$1305              EEPROM set *
    1290/    1305 :                     
    1291/    1305 :                     	OUTRADIX 10
    1292/    1305 :                     
    1293/    1305 :                     AddCommas MACRO num
    1294/    1305 :                     comma_ret set "\{num}"
    1295/    1305 :                     	IF num<1000
    1296/    1305 :                     		EXITM
    1297/    1305 :                     	ELSE
    1298/    1305 :                     comma_ret set "\{substr(comma_ret,0,strlen(comma_ret)-3)},\{substr(comma_ret,strlen(comma_ret)-3,strlen(comma_ret))}"
    1299/    1305 :                     	ENDIF
    1300/    1305 :                     	ENDM
    1301/    1305 :                     
    1302/    1305 :                     ;Display memory usage in console
    1303/    1305 :                     ;===============================
 
    1304/    1305 :                     	MESSAGE " "
Memory usage
    1305/    1305 :                     	MESSAGE "Memory usage"
============
    1306/    1305 :                     	MESSAGE "============"
    1307/    1305 : (MACRO)             	AddCommas EEPROM-$900
    1307/    1305 : =2565               comma_ret set "\{EEPROM-$900}"
    1307/    1305 : =>FALSE                     IF EEPROM-$900<1000
    1307/    1305 :                                     EXITM
    1307/    1305 : =>TRUE                      ELSE
    1307/    1305 : =2,565              comma_ret set "\{substr(comma_ret,0,strlen(comma_ret)-3)},\{substr(comma_ret,strlen(comma_ret)-3,strlen(comma_ret))}"
    1307/    1305 : [1307]                      ENDIF
ROM size:	2,565 bytes (43%) of 5.75k bank
    1308/    1305 :                     	MESSAGE "ROM size:	\{comma_ret} bytes (\{100*(EEPROM-$900)/$1700}%) of 5.75k bank"
    1309/    1305 :                     	;AddCommas GENRAM-$200
    1310/    1305 :                     	;MESSAGE "RAM size:	\{comma_ret} bytes (\{100*(GENRAM-$200)/($4000-$200)}%) of 15.8k bank"
    1311/    1305 :                     	;Tell script that prints assembler output to stop outputting
    1312/    1305 :                     	;Eliminates double output (because of multiple passes???)
END
    1313/    1305 :                     	MESSAGE "END"
 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 2 - 8/22/2020 1:11:10


  Symbol Table (* = unused):
  --------------------------

*ARCHITECTURE :  i386-unknown-win32 - |  BCD_Reverse :                  C12 C |
 BCD_Reverse.loop :             C16 C | *BIGENDIAN :                      0 - |
*BRANCHEXT :                      0 - | *CASESENSITIVE :                  1 - |
*CODE_DROP :                   1274 C | *CODE_DUP :                    125C C |
*CODE_OVER :                   1286 C | *CODE_SWAP :                   1268 C |
*CONSTPI :        3.141592653589793 - |  CheckData :                   108E C |
 CheckData.add_digit :         121B C |  CheckData.decimal_good :      11BE C |
 CheckData.digit :             120E C |  CheckData.digit_good :        1173 C |
 CheckData.digit_ok :          117F C |  CheckData.digit_zero :        1166 C |
 CheckData.exp_digit :         1192 C |  CheckData.exp_digit_ok :      119A C |
 CheckData.exp_good :          11C3 C |  CheckData.exp_loop :          119F C |
 CheckData.first_exp :         11D2 C |  CheckData.float_done :        11F8 C |
 CheckData.float_next :        1189 C |  CheckData.float_no_neg :      114F C |
 CheckData.float_not_digit :   11B5 C |  CheckData.hex_char_next :     111C C |
 CheckData.hex_done :          1126 C |  CheckData.hex_error :         112C C |
 CheckData.hex_rot_loop :      1202 C |  CheckData.hex_rotate :        11FE C |
 CheckData.is_digit_no :       1219 C |  CheckData.loop_float :        114F C |
 CheckData.loop_hex :          10EE C |  CheckData.loop_str :          10B7 C |
 CheckData.minus_good :        11F1 C |  CheckData.no_dec_yet :        1185 C |
 CheckData.not_decimal_point : 11C9 C |  CheckData.not_digit :         1108 C |
 CheckData.not_exp :           11E2 C |  CheckData.not_hex :           112D C |
 CheckData.not_minus :         11F7 C |  CheckData.not_single_quote :  10B4 C |
 CheckData.not_string :        10DA C |  CheckData.not_zero_len :      1099 C |
 CheckData.second_digit :      1235 C |  CheckData.str_done :          10CE C |
 CheckData.str_return :        10D9 C |  CheckData.string_too_long :   10CD C |
 CheckData.string_unterminated :                                       10CD C |
 CheckData.zero_loop :         109D C | *DATE :                   8/22/2020 - |
 DigitHigh :                    C23 C |  DigitLow :                     C36 C |
 DrawFloat :                    C47 C |  DrawFloat.loop :               CA4 C |
 DrawFloat.positive :           C7D C |  DrawFloat.positive_e :         CE0 C |
 DrawHex :                      D47 C |  DrawStack :                    DA1 C |
 DrawStack.._913.str_addr :     DB1 C |  DrawStack.._913.str_skip :     DB5 C |
 DrawStack.item_done :          E24 C |  DrawStack.loop :               DC8 C |
 DrawStack.loop_line :          E40 C |  DrawStack.no_item :            E24 C |
 DrawStack.not_float :          E00 C |  DrawStack.not_hex :            E24 C |
 DrawStack.not_str :            E12 C |  DrawString :                   D77 C |
 DrawString.done :              D99 C |  DrawString.loop :              D82 C |
 EEPROM :                      1305 - |  ErrorMsg :                     E4C C |
 ErrorMsg.._1087.str_addr :     E57 C |  ErrorMsg.._1087.str_skip :     E64 C |
 ErrorMsg.._1137.str_addr :     E92 C |  ErrorMsg.._1137.str_skip :     E9F C |
 ErrorMsg.loop :                EAF C |  Execute :                     1242 C |
*FALSE :                          0 - |  FORTH_WORDS :                 1254 C |
*FULLPMMU :                       1 - |  FindWord :                    1052 C |
 FindWord.loop :               105A C |  FindWord.loop_next :          1074 C |
 FindWord.no_match :           1074 C |  FindWord.str_loop :           1064 C |
 FindWord.word_found :         108D C | *HAS64 :                          1 - |
*HASDSP :                         0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  HexHigh :                      D0B C |
 HexHigh.done :                 D22 C |  HexHigh.print_digit :          D1D C |
 HexLow :                       D2A C |  HexLow.done :                  D3F C |
 HexLow.print_digit :           D3A C | *INEXTMODE :                      0 - |
*INLWORDMODE :                    0 - | *INMAXMODE :                      0 - |
*INSRCMODE :                      0 - | *INSUPMODE :                      0 - |
*InitForth :                    EB8 C |  LCD_char :                     B72 C |
 LCD_char.._103.skip :          B83 C |  LCD_char.._98.skip :           B7B C |
 LCD_char.color :               BC4 C |  LCD_char.if0 :                 B7C C |
 LCD_char.if1 :                 B84 C |  LCD_char.loop :                BAB C |
 LCD_char.loop.inner :          BBC C |  LCD_clrscr :                   B4E C |
 LCD_clrscr.loop :              B5E C |  LCD_print :                    BED C |
 LCD_print.done :               C05 C |  LCD_print.loop :               BF1 C |
*LISTON :                         1 - |  LineWord :                    100B C |
 LineWord.chars_left :         101E C |  LineWord.chars_left2 :        1045 C |
 LineWord.found :              1050 C |  LineWord.loop :               101E C |
 LineWord.not_space :          1031 C |  LineWord.word_size_good :     1045 C |
*MACEXP :                         7 - | *MOMCPU :                      6502 - |
*MOMCPUNAME :                  6502 - |  MemCopy :                      C06 C |
 MemCopy.loop :                 C08 C | *NESTMAX :                      100 - |
*PACKING :                        0 - | *PADDING :                        1 - |
 R0 :                            25 C | *R1 :                            2E C |
*R2 :                            37 C | *R3 :                            40 C |
*R4 :                            49 C | *R5 :                            52 C |
*R6 :                            5B C | *R7 :                            64 C |
*RELAXED :                        0 - |  ReadKey :                      B4A C |
 ReadLine :                     ECA C |  ReadLine.._1186.str_addr :     ED9 C |
 ReadLine.._1186.str_skip :     EEA C |  ReadLine.backspace_done :      F49 C |
 ReadLine.backspace_scroll :    F43 C |  ReadLine.buffer_full :         FDB C |
 ReadLine.cursor_done :        1007 C |  ReadLine.draw :                FF7 C |
 ReadLine.draw_blank :          FF1 C |  ReadLine.draw_done :           FDB C |
 ReadLine.key_done :            F84 C |  ReadLine.key_read :            F06 C |
 ReadLine.loop :                EFA C |  ReadLine.no_key :              FDB C |
 ReadLine.not_backspace :       F4C C |  ReadLine.not_enter :           F19 C |
 ReadLine.not_lower :           F84 C |  ReadLine.not_num :             F6A C |
 ReadLine.not_upper :           F77 C |  ReadLine.not_valid :           FDB C |
 ReadLine.scroll_buffer :       FAE C |  ReadLine.scroll_loop :         FB8 C |
 ReadLine.special_loop :        F4E C |  ReadLine.special_next :        F58 C |
*STACK_END :                     6D C | *TIME :                     1:11:10 - |
*TRUE :                           1 - | *VERSION :                     142F - |
 WORD_DROP :                   126B C | *WORD_DUP :                    1254 C |
 WORD_OVER :                   127D C |  WORD_SWAP :                   125F C |
 comma_ret :                  2,565 - | *dummy :                         20 C |
 font_inverted :                190 C |  font_table :                   903 C |
 global_error :                 130 C |  input_buff :                   133 C |
 input_buff_begin :             131 C |  input_buff_end :               132 C |
 main :                        1289 C |  main.._1480.str_addr :        12C1 C |
 main.._1480.str_skip :        12CE C |  main.input_good :             12DC C |
 main.input_loop :             128F C |  main.not_found :              12B4 C |
 main.process_loop :           1295 C |  new_stack_item :               187 C |
 new_word_buff :                174 C |  new_word_len :                 173 C |
 ret_val :                       21 C |  screen_ptr :                    23 C |
 setup :                        B33 C |  special_chars :                EC4 C |
 stack_count :                  191 C |

    200 symbols
     43 unused symbols

 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 3 - 8/22/2020 1:11:10


  Defined Macros:
  ---------------

AddCommas                             |

      1 macro

 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 4 - 8/22/2020 1:11:10


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.02 seconds assembly time

   1313 lines source file
   1319 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
