 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 1 - 9/3/2020 13:28:44


       1/       0 :                      PAGE $0
       2/    1FFC :                      ORG $1FFC
       3/    1FFC : 3D 14                FDB main
       4/       0 :                      ORG $0
       5/      20 :                      ORG $20
       6/      20 :                      
       7/      20 :                     dummy:
       8/      20 :                      DFS $1
       9/      21 :                      
      10/      21 :                     ret_val:
      11/      21 :                      DFS $2
      12/      23 :                      
      13/      23 :                     screen_ptr:
      14/      23 :                      DFS $2
      15/      25 :                      
      16/      25 :                     R0:
      17/      25 :                      DFS $9
      18/      2E :                      
      19/      2E :                     R1:
      20/      2E :                      DFS $9
      21/      37 :                      
      22/      37 :                     R2:
      23/      37 :                      DFS $9
      24/      40 :                      
      25/      40 :                     R3:
      26/      40 :                      DFS $9
      27/      49 :                      
      28/      49 :                     R4:
      29/      49 :                      DFS $9
      30/      52 :                      
      31/      52 :                     R5:
      32/      52 :                      DFS $9
      33/      5B :                      
      34/      5B :                     R6:
      35/      5B :                      DFS $9
      36/      64 :                      
      37/      64 :                     R7:
      38/      64 :                      DFS $9
      39/      6D :                     
      40/      6D :                     STACK_END:
      41/     130 :                      ORG $130
      42/     130 :                      
      43/     130 :                     global_error:
      44/     130 :                      DFS $1
      45/     131 :                      
      46/     131 :                     input_buff_begin:
      47/     131 :                      DFS $1
      48/     132 :                      
      49/     132 :                     input_buff_end:
      50/     132 :                      DFS $1
      51/     133 :                      
      52/     133 :                     input_buff:
      53/     133 :                      DFS $40
      54/     173 :                      
      55/     173 :                     new_word_len:
      56/     173 :                      DFS $1
      57/     174 :                      
      58/     174 :                     new_word_buff:
      59/     174 :                      DFS $13
      60/     187 :                      
      61/     187 :                     new_stack_item:
      62/     187 :                      DFS $9
      63/     190 :                      
      64/     190 :                     font_inverted:
      65/     190 :                      DFS $1
      66/     191 :                      
      67/     191 :                     stack_count:
      68/     191 :                      DFS $1
      69/     192 :                      
      70/     192 :                     test_count:
      71/     192 :                      DFS $1
      72/    C000 :                      ORG $C000
      73/    C000 :                      
      74/    C000 :                     DebugText:
      75/    C000 : A0 00                LDY #$0
      76/    C002 :                      .loop:
      77/    C002 : B1 0A                LDA ($A),Y ;msg
      78/    C004 : F0 07                BEQ .done
      79/    C006 : 8D E7 FF             STA $FFE7
      80/    C009 : C8                   INY
      81/    C00A : 4C 02 C0             JMP .loop
      82/    C00D :                      .done:
      83/    C00D : 60                   RTS
      84/    C00E :                      
      85/    C00E :                     halt_test:
      86/    C00E : A5 20                LDA dummy
      87/    C010 : CD 92 01             CMP test_count
      88/    C013 : D0 02                BNE .done
      89/    C015 : 00                   BRK
      90/    C016 : 00                   BRK
      91/    C017 :                      .done:
      92/    C017 : 60                   RTS
      93/    C018 :                      
      94/    C018 :                     InputTest:
      95/    C018 : A0 00                LDY #$0
      96/    C01A :                      .loop:
      97/    C01A : B1 03                LDA ($3),Y ;input
      98/    C01C : F0 0D                BEQ .loop_done
      99/    C01E : C9 2D                CMP #$2D
     100/    C020 : D0 02                BNE .not_minus
     101/    C022 : A9 63                LDA #$63
     102/    C024 :                      .not_minus:
     103/    C024 : 99 74 01             STA new_word_buff,Y
     104/    C027 : C8                   INY
     105/    C028 : 4C 1A C0             JMP .loop
     106/    C02B :                      .loop_done:
     107/    C02B : 8C 73 01             STY new_word_len
     108/    C02E : 20 D9 10             JSR CheckData
     109/    C031 : A0 00                LDY #$0
     110/    C033 : 84 08                STY $8 ;calculated_index
     111/    C035 : 84 07                STY $7 ;output_index
     112/    C037 :                      .check_loop:
     113/    C037 : A4 07                LDY $7 ;output_index
     114/    C039 : B1 05                LDA ($5),Y ;output
     115/    C03B : C9 41                CMP #$41
     116/    C03D : B0 06                BCS .letter
     117/    C03F : 38                   SEC
     118/    C040 : E9 30                SBC #$30
     119/    C042 : 4C 48 C0             JMP .letter_done
     120/    C045 :                      .letter:
     121/    C045 : 38                   SEC
     122/    C046 : E9 37                SBC #$37
     123/    C048 :                      .letter_done:
     124/    C048 : 0A                   ASL
     125/    C049 : 0A                   ASL
     126/    C04A : 0A                   ASL
     127/    C04B : 0A                   ASL
     128/    C04C : 85 09                STA $9 ;value
     129/    C04E : C8                   INY
     130/    C04F : B1 05                LDA ($5),Y ;output
     131/    C051 : C9 41                CMP #$41
     132/    C053 : B0 06                BCS .letter2
     133/    C055 : 38                   SEC
     134/    C056 : E9 30                SBC #$30
     135/    C058 : 4C 5E C0             JMP .letter_done2
     136/    C05B :                      .letter2:
     137/    C05B : 38                   SEC
     138/    C05C : E9 37                SBC #$37
     139/    C05E :                      .letter_done2:
     140/    C05E : 05 09                ORA $9 ;value
     141/    C060 : 85 09                STA $9 ;value
     142/    C062 : C8                   INY
     143/    C063 : 84 07                STY $7 ;output_index
     144/    C065 : A4 08                LDY $8 ;calculated_index
     145/    C067 : B9 87 01             LDA new_stack_item,Y
     146/    C06A : C5 09                CMP $9 ;value
     147/    C06C : D0 12                BNE .failed
     148/    C06E : C8                   INY
     149/    C06F : 84 08                STY $8 ;calculated_index
     150/    C071 : A4 07                LDY $7 ;output_index
     151/    C073 : B1 05                LDA ($5),Y ;output
     152/    C075 : D0 03                BNE .continue
     153/    C077 : 4C 2C C1             JMP .done
     154/    C07A :                      .continue:
     155/    C07A : C8                   INY
     156/    C07B : 84 07                STY $7 ;output_index
     157/    C07D : 4C 37 C0             JMP .check_loop
     158/    C080 :                      .failed:
     159/    C080 : 4C 8B C0             JMP .._53.str_skip
     160/    C083 :                      .._53.str_addr:
     161/    C083 : 5C 72 54 65 73 74    FCB "\\rTest ",$0
                    20 00             
     162/    C08B :                      .._53.str_skip:
     163/    C08B : A9 83                LDA # (.._53.str_addr) # $100
     164/    C08D : 85 0A                STA $A ;DebugText.msg
     165/    C08F : A9 C0                LDA # (.._53.str_addr)/$100
     166/    C091 : 85 0B                STA $B ;DebugText.msg
     167/    C093 : 20 00 C0             JSR DebugText
     168/    C096 : AE 93 01             LDX test_count+$1
     169/    C099 : AD 92 01             LDA test_count
     170/    C09C : 8D EA FF             STA $FFEA
     171/    C09F : 4C AE C0             JMP .._77.str_skip
     172/    C0A2 :                      .._77.str_addr:
     173/    C0A2 : 3A 20 46 41 49 4C    FCB ": FAILED!\\n",$0
                    45 44 21 5C 6E 00 
     174/    C0AE :                      .._77.str_skip:
     175/    C0AE : A9 A2                LDA # (.._77.str_addr) # $100
     176/    C0B0 : 85 0A                STA $A ;DebugText.msg
     177/    C0B2 : A9 C0                LDA # (.._77.str_addr)/$100
     178/    C0B4 : 85 0B                STA $B ;DebugText.msg
     179/    C0B6 : 20 00 C0             JSR DebugText
     180/    C0B9 : 4C CA C0             JMP .._101.str_skip
     181/    C0BC :                      .._101.str_addr:
     182/    C0BC : 20 20 20 45 78 70    FCB "   Expected: ",$0
                    65 63 74 65 64 3A 
                    20 00             
     183/    C0CA :                      .._101.str_skip:
     184/    C0CA : A9 BC                LDA # (.._101.str_addr) # $100
     185/    C0CC : 85 0A                STA $A ;DebugText.msg
     186/    C0CE : A9 C0                LDA # (.._101.str_addr)/$100
     187/    C0D0 : 85 0B                STA $B ;DebugText.msg
     188/    C0D2 : 20 00 C0             JSR DebugText
     189/    C0D5 : A5 05                LDA $5 ;output
     190/    C0D7 : 85 0A                STA $A ;DebugText.msg
     191/    C0D9 : A5 06                LDA $6 ;output
     192/    C0DB : 85 0B                STA $B ;DebugText.msg
     193/    C0DD : 20 00 C0             JSR DebugText
     194/    C0E0 : 4C F3 C0             JMP .._153.str_skip
     195/    C0E3 :                      .._153.str_addr:
     196/    C0E3 : 5C 6E 20 20 20 46    FCB "\\n   Found:    ",$0
                    6F 75 6E 64 3A 20 
                    20 20 20 00       
     197/    C0F3 :                      .._153.str_skip:
     198/    C0F3 : A9 E3                LDA # (.._153.str_addr) # $100
     199/    C0F5 : 85 0A                STA $A ;DebugText.msg
     200/    C0F7 : A9 C0                LDA # (.._153.str_addr)/$100
     201/    C0F9 : 85 0B                STA $B ;DebugText.msg
     202/    C0FB : 20 00 C0             JSR DebugText
     203/    C0FE : A0 00                LDY #$0
     204/    C100 : 84 08                STY $8 ;calculated_index
     205/    C102 : A0 02                LDY #$2
     206/    C104 : 84 07                STY $7 ;output_index
     207/    C106 :                      .fail_loop:
     208/    C106 : A4 08                LDY $8 ;calculated_index
     209/    C108 : B9 87 01             LDA new_stack_item,Y
     210/    C10B : 8D E8 FF             STA $FFE8
     211/    C10E : A9 20                LDA #$20
     212/    C110 : 8D E7 FF             STA $FFE7
     213/    C113 : C8                   INY
     214/    C114 : 84 08                STY $8 ;calculated_index
     215/    C116 : A4 07                LDY $7 ;output_index
     216/    C118 : B1 05                LDA ($5),Y ;output
     217/    C11A : F0 08                BEQ .fail_done
     218/    C11C : C8                   INY
     219/    C11D : C8                   INY
     220/    C11E : C8                   INY
     221/    C11F : 84 07                STY $7 ;output_index
     222/    C121 : 4C 06 C1             JMP .fail_loop
     223/    C124 :                      .fail_done:
     224/    C124 : 00                   BRK
     225/    C125 : 00                   BRK
     226/    C126 : AD 87 01             LDA new_stack_item
     227/    C129 : 4C 80 C0             JMP .failed
     228/    C12C :                      .done:
     229/    C12C : 4C 37 C1             JMP .._178.str_skip
     230/    C12F :                      .._178.str_addr:
     231/    C12F : 5C 67 54 65 73 74    FCB "\\gTest ",$0
                    20 00             
     232/    C137 :                      .._178.str_skip:
     233/    C137 : A9 2F                LDA # (.._178.str_addr) # $100
     234/    C139 : 85 0A                STA $A ;DebugText.msg
     235/    C13B : A9 C1                LDA # (.._178.str_addr)/$100
     236/    C13D : 85 0B                STA $B ;DebugText.msg
     237/    C13F : 20 00 C0             JSR DebugText
     238/    C142 : AE 93 01             LDX test_count+$1
     239/    C145 : AD 92 01             LDA test_count
     240/    C148 : 8D EA FF             STA $FFEA
     241/    C14B : 4C 59 C1             JMP .._202.str_skip
     242/    C14E :                      .._202.str_addr:
     243/    C14E : 3A 20 70 61 73 73    FCB ": passed\\n",$0
                    65 64 5C 6E 00    
     244/    C159 :                      .._202.str_skip:
     245/    C159 : A9 4E                LDA # (.._202.str_addr) # $100
     246/    C15B : 85 0A                STA $A ;DebugText.msg
     247/    C15D : A9 C1                LDA # (.._202.str_addr)/$100
     248/    C15F : 85 0B                STA $B ;DebugText.msg
     249/    C161 : 20 00 C0             JSR DebugText
     250/    C164 : EE 92 01             INC test_count
     251/    C167 : D0 03                BNE .._223.no_carry
     252/    C169 : EE 93 01             INC test_count+$1
     253/    C16C :                      .._223.no_carry:
     254/    C16C : 60                   RTS
     255/    C16D :                      
     256/    C16D :                     tests:
     257/    C16D : A9 01                LDA #$1
     258/    C16F : 8D 92 01             STA test_count
     259/    C172 : 4C 77 C1             JMP .._232.str_skip
     260/    C175 :                      .._232.str_addr:
     261/    C175 : 35 00                FCB "5",$0
     262/    C177 :                      .._232.str_skip:
     263/    C177 : A9 75                LDA # (.._232.str_addr) # $100
     264/    C179 : 85 03                STA $3 ;InputTest.input
     265/    C17B : A9 C1                LDA # (.._232.str_addr)/$100
     266/    C17D : 85 04                STA $4 ;InputTest.input
     267/    C17F : 4C 9D C1             JMP .._241.str_skip
     268/    C182 :                      .._241.str_addr:
     269/    C182 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 00 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 30 20 
                    30 30 00          
     270/    C19D :                      .._241.str_skip:
     271/    C19D : A9 82                LDA # (.._241.str_addr) # $100
     272/    C19F : 85 05                STA $5 ;InputTest.output
     273/    C1A1 : A9 C1                LDA # (.._241.str_addr)/$100
     274/    C1A3 : 85 06                STA $6 ;InputTest.output
     275/    C1A5 : 20 18 C0             JSR InputTest
     276/    C1A8 : 4C AF C1             JMP .._259.str_skip
     277/    C1AB :                      .._259.str_addr:
     278/    C1AB : 35 30 30 00          FCB "500",$0
     279/    C1AF :                      .._259.str_skip:
     280/    C1AF : A9 AB                LDA # (.._259.str_addr) # $100
     281/    C1B1 : 85 03                STA $3 ;InputTest.input
     282/    C1B3 : A9 C1                LDA # (.._259.str_addr)/$100
     283/    C1B5 : 85 04                STA $4 ;InputTest.input
     284/    C1B7 : 4C D5 C1             JMP .._268.str_skip
     285/    C1BA :                      .._268.str_addr:
     286/    C1BA : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    30 30 00          
     287/    C1D5 :                      .._268.str_skip:
     288/    C1D5 : A9 BA                LDA # (.._268.str_addr) # $100
     289/    C1D7 : 85 05                STA $5 ;InputTest.output
     290/    C1D9 : A9 C1                LDA # (.._268.str_addr)/$100
     291/    C1DB : 85 06                STA $6 ;InputTest.output
     292/    C1DD : 20 18 C0             JSR InputTest
     293/    C1E0 : 4C E7 C1             JMP .._286.str_skip
     294/    C1E3 :                      .._286.str_addr:
     295/    C1E3 : 35 30 30 00          FCB "500",$0
     296/    C1E7 :                      .._286.str_skip:
     297/    C1E7 : A9 E3                LDA # (.._286.str_addr) # $100
     298/    C1E9 : 85 03                STA $3 ;InputTest.input
     299/    C1EB : A9 C1                LDA # (.._286.str_addr)/$100
     300/    C1ED : 85 04                STA $4 ;InputTest.input
     301/    C1EF : 4C 0D C2             JMP .._295.str_skip
     302/    C1F2 :                      .._295.str_addr:
     303/    C1F2 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    30 30 00          
     304/    C20D :                      .._295.str_skip:
     305/    C20D : A9 F2                LDA # (.._295.str_addr) # $100
     306/    C20F : 85 05                STA $5 ;InputTest.output
     307/    C211 : A9 C1                LDA # (.._295.str_addr)/$100
     308/    C213 : 85 06                STA $6 ;InputTest.output
     309/    C215 : 20 18 C0             JSR InputTest
     310/    C218 : 4C 21 C2             JMP .._313.str_skip
     311/    C21B :                      .._313.str_addr:
     312/    C21B : 35 30 30 2E 30 00    FCB "500.0",$0
     313/    C221 :                      .._313.str_skip:
     314/    C221 : A9 1B                LDA # (.._313.str_addr) # $100
     315/    C223 : 85 03                STA $3 ;InputTest.input
     316/    C225 : A9 C2                LDA # (.._313.str_addr)/$100
     317/    C227 : 85 04                STA $4 ;InputTest.input
     318/    C229 : 4C 47 C2             JMP .._322.str_skip
     319/    C22C :                      .._322.str_addr:
     320/    C22C : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    30 30 00          
     321/    C247 :                      .._322.str_skip:
     322/    C247 : A9 2C                LDA # (.._322.str_addr) # $100
     323/    C249 : 85 05                STA $5 ;InputTest.output
     324/    C24B : A9 C2                LDA # (.._322.str_addr)/$100
     325/    C24D : 85 06                STA $6 ;InputTest.output
     326/    C24F : 20 18 C0             JSR InputTest
     327/    C252 : 4C 5C C2             JMP .._340.str_skip
     328/    C255 :                      .._340.str_addr:
     329/    C255 : 35 30 30 2E 30 30    FCB "500.00",$0
                    00                
     330/    C25C :                      .._340.str_skip:
     331/    C25C : A9 55                LDA # (.._340.str_addr) # $100
     332/    C25E : 85 03                STA $3 ;InputTest.input
     333/    C260 : A9 C2                LDA # (.._340.str_addr)/$100
     334/    C262 : 85 04                STA $4 ;InputTest.input
     335/    C264 : 4C 82 C2             JMP .._349.str_skip
     336/    C267 :                      .._349.str_addr:
     337/    C267 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    30 30 00          
     338/    C282 :                      .._349.str_skip:
     339/    C282 : A9 67                LDA # (.._349.str_addr) # $100
     340/    C284 : 85 05                STA $5 ;InputTest.output
     341/    C286 : A9 C2                LDA # (.._349.str_addr)/$100
     342/    C288 : 85 06                STA $6 ;InputTest.output
     343/    C28A : 20 18 C0             JSR InputTest
     344/    C28D : 4C 94 C2             JMP .._367.str_skip
     345/    C290 :                      .._367.str_addr:
     346/    C290 : 35 65 30 00          FCB "5e0",$0
     347/    C294 :                      .._367.str_skip:
     348/    C294 : A9 90                LDA # (.._367.str_addr) # $100
     349/    C296 : 85 03                STA $3 ;InputTest.input
     350/    C298 : A9 C2                LDA # (.._367.str_addr)/$100
     351/    C29A : 85 04                STA $4 ;InputTest.input
     352/    C29C : 4C BA C2             JMP .._376.str_skip
     353/    C29F :                      .._376.str_addr:
     354/    C29F : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 00 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 30 20 
                    30 30 00          
     355/    C2BA :                      .._376.str_skip:
     356/    C2BA : A9 9F                LDA # (.._376.str_addr) # $100
     357/    C2BC : 85 05                STA $5 ;InputTest.output
     358/    C2BE : A9 C2                LDA # (.._376.str_addr)/$100
     359/    C2C0 : 85 06                STA $6 ;InputTest.output
     360/    C2C2 : 20 18 C0             JSR InputTest
     361/    C2C5 : 4C CE C2             JMP .._394.str_skip
     362/    C2C8 :                      .._394.str_addr:
     363/    C2C8 : 35 30 30 65 30 00    FCB "500e0",$0
     364/    C2CE :                      .._394.str_skip:
     365/    C2CE : A9 C8                LDA # (.._394.str_addr) # $100
     366/    C2D0 : 85 03                STA $3 ;InputTest.input
     367/    C2D2 : A9 C2                LDA # (.._394.str_addr)/$100
     368/    C2D4 : 85 04                STA $4 ;InputTest.input
     369/    C2D6 : 4C F4 C2             JMP .._403.str_skip
     370/    C2D9 :                      .._403.str_addr:
     371/    C2D9 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    30 30 00          
     372/    C2F4 :                      .._403.str_skip:
     373/    C2F4 : A9 D9                LDA # (.._403.str_addr) # $100
     374/    C2F6 : 85 05                STA $5 ;InputTest.output
     375/    C2F8 : A9 C2                LDA # (.._403.str_addr)/$100
     376/    C2FA : 85 06                STA $6 ;InputTest.output
     377/    C2FC : 20 18 C0             JSR InputTest
     378/    C2FF : 4C 08 C3             JMP .._421.str_skip
     379/    C302 :                      .._421.str_addr:
     380/    C302 : 35 30 30 65 32 00    FCB "500e2",$0
     381/    C308 :                      .._421.str_skip:
     382/    C308 : A9 02                LDA # (.._421.str_addr) # $100
     383/    C30A : 85 03                STA $3 ;InputTest.input
     384/    C30C : A9 C3                LDA # (.._421.str_addr)/$100
     385/    C30E : 85 04                STA $4 ;InputTest.input
     386/    C310 : 4C 2E C3             JMP .._430.str_skip
     387/    C313 :                      .._430.str_addr:
     388/    C313 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 04 00",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 34 20 
                    30 30 00          
     389/    C32E :                      .._430.str_skip:
     390/    C32E : A9 13                LDA # (.._430.str_addr) # $100
     391/    C330 : 85 05                STA $5 ;InputTest.output
     392/    C332 : A9 C3                LDA # (.._430.str_addr)/$100
     393/    C334 : 85 06                STA $6 ;InputTest.output
     394/    C336 : 20 18 C0             JSR InputTest
     395/    C339 : 4C 44 C3             JMP .._448.str_skip
     396/    C33C :                      .._448.str_addr:
     397/    C33C : 35 30 30 65 39 39    FCB "500e997",$0
                    37 00             
     398/    C344 :                      .._448.str_skip:
     399/    C344 : A9 3C                LDA # (.._448.str_addr) # $100
     400/    C346 : 85 03                STA $3 ;InputTest.input
     401/    C348 : A9 C3                LDA # (.._448.str_addr)/$100
     402/    C34A : 85 04                STA $4 ;InputTest.input
     403/    C34C : 4C 6A C3             JMP .._457.str_skip
     404/    C34F :                      .._457.str_addr:
     405/    C34F : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 99 09",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 39 39 20 
                    30 39 00          
     406/    C36A :                      .._457.str_skip:
     407/    C36A : A9 4F                LDA # (.._457.str_addr) # $100
     408/    C36C : 85 05                STA $5 ;InputTest.output
     409/    C36E : A9 C3                LDA # (.._457.str_addr)/$100
     410/    C370 : 85 06                STA $6 ;InputTest.output
     411/    C372 : 20 18 C0             JSR InputTest
     412/    C375 : 4C 80 C3             JMP .._475.str_skip
     413/    C378 :                      .._475.str_addr:
     414/    C378 : 35 30 30 65 39 39    FCB "500e998",$0
                    38 00             
     415/    C380 :                      .._475.str_skip:
     416/    C380 : A9 78                LDA # (.._475.str_addr) # $100
     417/    C382 : 85 03                STA $3 ;InputTest.input
     418/    C384 : A9 C3                LDA # (.._475.str_addr)/$100
     419/    C386 : 85 04                STA $4 ;InputTest.input
     420/    C388 : 4C 8E C3             JMP .._484.str_skip
     421/    C38B :                      .._484.str_addr:
     422/    C38B : 30 34 00             FCB "04",$0
     423/    C38E :                      .._484.str_skip:
     424/    C38E : A9 8B                LDA # (.._484.str_addr) # $100
     425/    C390 : 85 05                STA $5 ;InputTest.output
     426/    C392 : A9 C3                LDA # (.._484.str_addr)/$100
     427/    C394 : 85 06                STA $6 ;InputTest.output
     428/    C396 : 20 18 C0             JSR InputTest
     429/    C399 : 4C 9F C3             JMP .._502.str_skip
     430/    C39C :                      .._502.str_addr:
     431/    C39C : 2D 35 00             FCB "-5",$0
     432/    C39F :                      .._502.str_skip:
     433/    C39F : A9 9C                LDA # (.._502.str_addr) # $100
     434/    C3A1 : 85 03                STA $3 ;InputTest.input
     435/    C3A3 : A9 C3                LDA # (.._502.str_addr)/$100
     436/    C3A5 : 85 04                STA $4 ;InputTest.input
     437/    C3A7 : 4C C5 C3             JMP .._511.str_skip
     438/    C3AA :                      .._511.str_addr:
     439/    C3AA : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 00 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 30 20 
                    38 30 00          
     440/    C3C5 :                      .._511.str_skip:
     441/    C3C5 : A9 AA                LDA # (.._511.str_addr) # $100
     442/    C3C7 : 85 05                STA $5 ;InputTest.output
     443/    C3C9 : A9 C3                LDA # (.._511.str_addr)/$100
     444/    C3CB : 85 06                STA $6 ;InputTest.output
     445/    C3CD : 20 18 C0             JSR InputTest
     446/    C3D0 : 4C D8 C3             JMP .._529.str_skip
     447/    C3D3 :                      .._529.str_addr:
     448/    C3D3 : 2D 35 30 30 00       FCB "-500",$0
     449/    C3D8 :                      .._529.str_skip:
     450/    C3D8 : A9 D3                LDA # (.._529.str_addr) # $100
     451/    C3DA : 85 03                STA $3 ;InputTest.input
     452/    C3DC : A9 C3                LDA # (.._529.str_addr)/$100
     453/    C3DE : 85 04                STA $4 ;InputTest.input
     454/    C3E0 : 4C FE C3             JMP .._538.str_skip
     455/    C3E3 :                      .._538.str_addr:
     456/    C3E3 : 30 31 20 30 30 20    FCB "01 00 00 00 00 00 50 02 80",$0
                    30 30 20 30 30 20 
                    30 30 20 30 30 20 
                    35 30 20 30 32 20 
                    38 30 00          
     457/    C3FE :                      .._538.str_skip:
     458/    C3FE : A9 E3                LDA # (.._538.str_addr) # $100
     459/    C400 : 85 05                STA $5 ;InputTest.output
     460/    C402 : A9 C3                LDA # (.._538.str_addr)/$100
     461/    C404 : 85 06                STA $6 ;InputTest.output
     462/    C406 : 20 18 C0             JSR InputTest
     463/    C409 : 4C 21 C4             JMP .._556.str_skip
     464/    C40C :                      .._556.str_addr:
     465/    C40C : 5C 6E 5C 67 41 6C    FCB "\\n\\gAll tests passed",$0
                    6C 20 74 65 73 74 
                    73 20 70 61 73 73 
                    65 64 00          
     466/    C421 :                      .._556.str_skip:
     467/    C421 : A9 0C                LDA # (.._556.str_addr) # $100
     468/    C423 : 85 0A                STA $A ;DebugText.msg
     469/    C425 : A9 C4                LDA # (.._556.str_addr)/$100
     470/    C427 : 85 0B                STA $B ;DebugText.msg
     471/    C429 : 20 00 C0             JSR DebugText
     472/    C42C : 4C 42 C4             JMP .._575.str_skip
     473/    C42F :                      .._575.str_addr:
     474/    C42F : 5C 6E 5C 6C 53 69    FCB "\\n\\lSize of code: ",$0
                    7A 65 20 6F 66 20 
                    63 6F 64 65 3A 20 
                    00                
     475/    C442 :                      .._575.str_skip:
     476/    C442 : A9 2F                LDA # (.._575.str_addr) # $100
     477/    C444 : 85 0A                STA $A ;DebugText.msg
     478/    C446 : A9 C4                LDA # (.._575.str_addr)/$100
     479/    C448 : 85 0B                STA $B ;DebugText.msg
     480/    C44A : 20 00 C0             JSR DebugText
     481/    C44D : A2 0B                LDX # (code_end-code_begin)/$100
     482/    C44F : A9 BE                LDA # (code_end-code_begin)#$100
     483/    C451 : 8D EA FF             STA $FFEA
     484/    C454 : 4C 5E C4             JMP .._594.str_skip
     485/    C457 :                      .._594.str_addr:
     486/    C457 : 20 62 79 74 65 73    FCB " bytes",$0
                    00                
     487/    C45E :                      .._594.str_skip:
     488/    C45E : A9 57                LDA # (.._594.str_addr) # $100
     489/    C460 : 85 0A                STA $A ;DebugText.msg
     490/    C462 : A9 C4                LDA # (.._594.str_addr)/$100
     491/    C464 : 85 0B                STA $B ;DebugText.msg
     492/    C466 : 20 00 C0             JSR DebugText
     493/    C469 : 60                   RTS
     494/     900 :                      ORG $900
     495/     900 :                      
     496/     900 :                     code_begin:
     497/     900 : 4C 3D 14             JMP main
     498/     903 :                      
     499/     903 :                     font_table:
     500/     903 : 00 00 00 00 00 00    FCB $0,$0,$0,$0,$0,$0,$0,$0
                    00 00             
     501/     90B : 30 78 78 30 30 00    FCB $30,$78,$78,$30,$30,$0,$30,$0
                    30 00             
     502/     913 : 6C 6C 6C 00 00 00    FCB $6C,$6C,$6C,$0,$0,$0,$0,$0
                    00 00             
     503/     91B : 6C 6C FE 6C FE 6C    FCB $6C,$6C,$FE,$6C,$FE,$6C,$6C,$0
                    6C 00             
     504/     923 : 30 7C C0 78 0C F8    FCB $30,$7C,$C0,$78,$C,$F8,$30,$0
                    30 00             
     505/     92B : 00 C6 CC 18 30 66    FCB $0,$C6,$CC,$18,$30,$66,$C6,$0
                    C6 00             
     506/     933 : 38 6C 38 76 DC CC    FCB $38,$6C,$38,$76,$DC,$CC,$76,$0
                    76 00             
     507/     93B : 60 60 C0 00 00 00    FCB $60,$60,$C0,$0,$0,$0,$0,$0
                    00 00             
     508/     943 : 18 30 60 60 60 30    FCB $18,$30,$60,$60,$60,$30,$18,$0
                    18 00             
     509/     94B : 60 30 18 18 18 30    FCB $60,$30,$18,$18,$18,$30,$60,$0
                    60 00             
     510/     953 : 00 66 3C FF 3C 66    FCB $0,$66,$3C,$FF,$3C,$66,$0,$0
                    00 00             
     511/     95B : 00 30 30 FC 30 30    FCB $0,$30,$30,$FC,$30,$30,$0,$0
                    00 00             
     512/     963 : 00 00 00 00 00 30    FCB $0,$0,$0,$0,$0,$30,$30,$60
                    30 60             
     513/     96B : 00 00 00 FC 00 00    FCB $0,$0,$0,$FC,$0,$0,$0,$0
                    00 00             
     514/     973 : 00 00 00 00 00 30    FCB $0,$0,$0,$0,$0,$30,$30,$0
                    30 00             
     515/     97B : 06 0C 18 30 60 C0    FCB $6,$C,$18,$30,$60,$C0,$80,$0
                    80 00             
     516/     983 : 7C C6 CE DE F6 E6    FCB $7C,$C6,$CE,$DE,$F6,$E6,$7C,$0
                    7C 00             
     517/     98B : 30 70 30 30 30 30    FCB $30,$70,$30,$30,$30,$30,$FC,$0
                    FC 00             
     518/     993 : 78 CC 0C 38 60 CC    FCB $78,$CC,$C,$38,$60,$CC,$FC,$0
                    FC 00             
     519/     99B : 78 CC 0C 38 0C CC    FCB $78,$CC,$C,$38,$C,$CC,$78,$0
                    78 00             
     520/     9A3 : 1C 3C 6C CC FE 0C    FCB $1C,$3C,$6C,$CC,$FE,$C,$1E,$0
                    1E 00             
     521/     9AB : FC C0 F8 0C 0C CC    FCB $FC,$C0,$F8,$C,$C,$CC,$78,$0
                    78 00             
     522/     9B3 : 38 60 C0 F8 CC CC    FCB $38,$60,$C0,$F8,$CC,$CC,$78,$0
                    78 00             
     523/     9BB : FC CC 0C 18 30 30    FCB $FC,$CC,$C,$18,$30,$30,$30,$0
                    30 00             
     524/     9C3 : 78 CC CC 78 CC CC    FCB $78,$CC,$CC,$78,$CC,$CC,$78,$0
                    78 00             
     525/     9CB : 78 CC CC 7C 0C 18    FCB $78,$CC,$CC,$7C,$C,$18,$70,$0
                    70 00             
     526/     9D3 : 00 30 30 00 00 30    FCB $0,$30,$30,$0,$0,$30,$30,$0
                    30 00             
     527/     9DB : 00 30 30 00 00 30    FCB $0,$30,$30,$0,$0,$30,$30,$60
                    30 60             
     528/     9E3 : 18 30 60 C0 60 30    FCB $18,$30,$60,$C0,$60,$30,$18,$0
                    18 00             
     529/     9EB : 00 00 FC 00 00 FC    FCB $0,$0,$FC,$0,$0,$FC,$0,$0
                    00 00             
     530/     9F3 : 60 30 18 0C 18 30    FCB $60,$30,$18,$C,$18,$30,$60,$0
                    60 00             
     531/     9FB : 78 CC 0C 18 30 00    FCB $78,$CC,$C,$18,$30,$0,$30,$0
                    30 00             
     532/     A03 : 7C C6 DE DE DE C0    FCB $7C,$C6,$DE,$DE,$DE,$C0,$78,$0
                    78 00             
     533/     A0B : 30 78 CC CC FC CC    FCB $30,$78,$CC,$CC,$FC,$CC,$CC,$0
                    CC 00             
     534/     A13 : FC 66 66 7C 66 66    FCB $FC,$66,$66,$7C,$66,$66,$FC,$0
                    FC 00             
     535/     A1B : 3C 66 C0 C0 C0 66    FCB $3C,$66,$C0,$C0,$C0,$66,$3C,$0
                    3C 00             
     536/     A23 : F8 6C 66 66 66 6C    FCB $F8,$6C,$66,$66,$66,$6C,$F8,$0
                    F8 00             
     537/     A2B : FE 62 68 78 68 62    FCB $FE,$62,$68,$78,$68,$62,$FE,$0
                    FE 00             
     538/     A33 : FE 62 68 78 68 60    FCB $FE,$62,$68,$78,$68,$60,$F0,$0
                    F0 00             
     539/     A3B : 3C 66 C0 C0 CE 66    FCB $3C,$66,$C0,$C0,$CE,$66,$3E,$0
                    3E 00             
     540/     A43 : CC CC CC FC CC CC    FCB $CC,$CC,$CC,$FC,$CC,$CC,$CC,$0
                    CC 00             
     541/     A4B : 78 30 30 30 30 30    FCB $78,$30,$30,$30,$30,$30,$78,$0
                    78 00             
     542/     A53 : 1E 0C 0C 0C CC CC    FCB $1E,$C,$C,$C,$CC,$CC,$78,$0
                    78 00             
     543/     A5B : E6 66 6C 78 6C 66    FCB $E6,$66,$6C,$78,$6C,$66,$E6,$0
                    E6 00             
     544/     A63 : F0 60 60 60 62 66    FCB $F0,$60,$60,$60,$62,$66,$FE,$0
                    FE 00             
     545/     A6B : C6 EE FE FE D6 C6    FCB $C6,$EE,$FE,$FE,$D6,$C6,$C6,$0
                    C6 00             
     546/     A73 : C6 E6 F6 DE CE C6    FCB $C6,$E6,$F6,$DE,$CE,$C6,$C6,$0
                    C6 00             
     547/     A7B : 38 6C C6 C6 C6 6C    FCB $38,$6C,$C6,$C6,$C6,$6C,$38,$0
                    38 00             
     548/     A83 : FC 66 66 7C 60 60    FCB $FC,$66,$66,$7C,$60,$60,$F0,$0
                    F0 00             
     549/     A8B : 78 CC CC CC DC 78    FCB $78,$CC,$CC,$CC,$DC,$78,$1C,$0
                    1C 00             
     550/     A93 : FC 66 66 7C 6C 66    FCB $FC,$66,$66,$7C,$6C,$66,$E6,$0
                    E6 00             
     551/     A9B : 78 CC E0 70 1C CC    FCB $78,$CC,$E0,$70,$1C,$CC,$78,$0
                    78 00             
     552/     AA3 : FC B4 30 30 30 30    FCB $FC,$B4,$30,$30,$30,$30,$78,$0
                    78 00             
     553/     AAB : CC CC CC CC CC CC    FCB $CC,$CC,$CC,$CC,$CC,$CC,$FC,$0
                    FC 00             
     554/     AB3 : CC CC CC CC CC 78    FCB $CC,$CC,$CC,$CC,$CC,$78,$30,$0
                    30 00             
     555/     ABB : C6 C6 C6 D6 FE EE    FCB $C6,$C6,$C6,$D6,$FE,$EE,$C6,$0
                    C6 00             
     556/     AC3 : C6 C6 6C 38 38 6C    FCB $C6,$C6,$6C,$38,$38,$6C,$C6,$0
                    C6 00             
     557/     ACB : CC CC CC 78 30 30    FCB $CC,$CC,$CC,$78,$30,$30,$78,$0
                    78 00             
     558/     AD3 : FE C6 8C 18 32 66    FCB $FE,$C6,$8C,$18,$32,$66,$FE,$0
                    FE 00             
     559/     ADB : 78 60 60 60 60 60    FCB $78,$60,$60,$60,$60,$60,$78,$0
                    78 00             
     560/     AE3 : C0 60 30 18 0C 06    FCB $C0,$60,$30,$18,$C,$6,$2,$0
                    02 00             
     561/     AEB : 78 18 18 18 18 18    FCB $78,$18,$18,$18,$18,$18,$78,$0
                    78 00             
     562/     AF3 : 10 38 6C C6 00 00    FCB $10,$38,$6C,$C6,$0,$0,$0,$0
                    00 00             
     563/     AFB : 00 00 00 00 00 00    FCB $0,$0,$0,$0,$0,$0,$0,$FF
                    00 FF             
     564/     B03 : FF FF FF FF FF FF    FCB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
                    FF FF             
     565/     B0B : 08 18 38 78 38 18    FCB $8,$18,$38,$78,$38,$18,$8,$0
                    08 00             
     566/     B13 : 00 00 00 00 FF FF    FCB $0,$0,$0,$0,$FF,$FF,$FF,$FF
                    FF FF             
     567/     B1B : 00 1E 00 00 00 00    FCB $0,$1E,$0,$0,$0,$0,$0,$0
                    00 00             
     568/     B23 : FF FF FF FF FF FF    FCB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
                    FF FF             
     569/     B2B : 00 00 EE 88 EE 88    FCB $0,$0,$EE,$88,$EE,$88,$EE,$0
                    EE 00             
     570/     B33 :                      
     571/     B33 :                     setup:
     572/     B33 : 78                   SEI
     573/     B34 : D8                   CLD
     574/     B35 : A2 00                LDX #$0
     575/     B37 : 8E 91 01             STX stack_count
     576/     B3A : A9 00                LDA #$0
     577/     B3C : 8D 90 01             STA font_inverted
     578/     B3F : A9 04                LDA #$4
     579/     B41 : 8D E1 FF             STA $FFE1
     580/     B44 : A9 05                LDA #$5
     581/     B46 : 8D E2 FF             STA $FFE2
     582/     B49 : 60                   RTS
     583/     B4A :                      
     584/     B4A :                     ReadKey:
     585/     B4A : AD E4 FF             LDA $FFE4
     586/     B4D : 60                   RTS
     587/     B4E :                      
     588/     B4E :                     LCD_clrscr:
     589/     B4E : A9 00                LDA #$0
     590/     B50 : 85 23                STA screen_ptr
     591/     B52 : A9 40                LDA #$40
     592/     B54 : 85 24                STA screen_ptr+$1
     593/     B56 : A9 80                LDA #$80
     594/     B58 : 85 03                STA $3 ;counter
     595/     B5A : A9 2A                LDA #$2A
     596/     B5C : A0 00                LDY #$0
     597/     B5E :                      .loop:
     598/     B5E : 91 23                STA (screen_ptr),Y
     599/     B60 : C8                   INY
     600/     B61 : D0 FB                BNE .loop
     601/     B63 : E6 24                INC screen_ptr+$1
     602/     B65 : C6 03                DEC $3 ;counter
     603/     B67 : D0 F5                BNE .loop
     604/     B69 : A9 00                LDA #$0
     605/     B6B : 85 23                STA screen_ptr
     606/     B6D : A9 40                LDA #$40
     607/     B6F : 85 24                STA screen_ptr+$1
     608/     B71 : 60                   RTS
     609/     B72 :                      
     610/     B72 :                     LCD_char:
     611/     B72 : A5 0F                LDA $F ;c_out
     612/     B74 : C9 20                CMP #$20
     613/     B76 : 90 03                BCC .._696.skip
     614/     B78 : 4C 7C 0B             JMP .if0
     615/     B7B :                      .._696.skip:
     616/     B7B : 60                   RTS
     617/     B7C :                      .if0:
     618/     B7C : C9 66                CMP #$66
     619/     B7E : B0 03                BCS .._701.skip
     620/     B80 : 4C 84 0B             JMP .if1
     621/     B83 :                      .._701.skip:
     622/     B83 : 60                   RTS
     623/     B84 :                      .if1:
     624/     B84 : 38                   SEC
     625/     B85 : E9 20                SBC #$20
     626/     B87 : 85 10                STA $10 ;pixel_ptr
     627/     B89 : A9 00                LDA #$0
     628/     B8B : 85 11                STA $11 ;pixel_ptr
     629/     B8D : 06 10                ASL $10 ;pixel_ptr
     630/     B8F : 06 10                ASL $10 ;pixel_ptr
     631/     B91 : 26 11                ROL $11 ;pixel_ptr
     632/     B93 : 06 10                ASL $10 ;pixel_ptr
     633/     B95 : 26 11                ROL $11 ;pixel_ptr
     634/     B97 : A9 03                LDA #font_table # $100
     635/     B99 : 65 10                ADC $10 ;pixel_ptr
     636/     B9B : 85 10                STA $10 ;pixel_ptr
     637/     B9D : A9 09                LDA #font_table/$100
     638/     B9F : 65 11                ADC $11 ;pixel_ptr
     639/     BA1 : 85 11                STA $11 ;pixel_ptr
     640/     BA3 : A9 00                LDA #$0
     641/     BA5 : 85 12                STA $12 ;pixel_index
     642/     BA7 : A9 08                LDA #$8
     643/     BA9 : 85 14                STA $14 ;lc1
     644/     BAB :                      .loop:
     645/     BAB : A9 08                LDA #$8
     646/     BAD : 85 15                STA $15 ;lc2
     647/     BAF : A4 12                LDY $12 ;pixel_index
     648/     BB1 : E6 12                INC $12 ;pixel_index
     649/     BB3 : B1 10                LDA ($10),Y ;pixel_ptr
     650/     BB5 : 4D 90 01             EOR font_inverted
     651/     BB8 : 85 13                STA $13 ;pixel
     652/     BBA : A0 00                LDY #$0
     653/     BBC :                      .loop.inner:
     654/     BBC : 26 13                ROL $13 ;pixel
     655/     BBE : A9 00                LDA #$0
     656/     BC0 : B0 02                BCS .color
     657/     BC2 : A9 2A                LDA #$2A
     658/     BC4 :                      .color:
     659/     BC4 : 91 23                STA (screen_ptr),Y
     660/     BC6 : E6 24                INC screen_ptr+$1
     661/     BC8 : 91 23                STA (screen_ptr),Y
     662/     BCA : C8                   INY
     663/     BCB : 91 23                STA (screen_ptr),Y
     664/     BCD : C6 24                DEC screen_ptr+$1
     665/     BCF : 91 23                STA (screen_ptr),Y
     666/     BD1 : C8                   INY
     667/     BD2 : C6 15                DEC $15 ;lc2
     668/     BD4 : D0 E6                BNE .loop.inner
     669/     BD6 : E6 24                INC screen_ptr+$1
     670/     BD8 : E6 24                INC screen_ptr+$1
     671/     BDA : C6 14                DEC $14 ;lc1
     672/     BDC : D0 CD                BNE .loop
     673/     BDE : 18                   CLC
     674/     BDF : A5 23                LDA screen_ptr
     675/     BE1 : 69 10                ADC #$10
     676/     BE3 : 85 23                STA screen_ptr
     677/     BE5 : 38                   SEC
     678/     BE6 : A5 24                LDA screen_ptr+$1
     679/     BE8 : E9 10                SBC #$10
     680/     BEA : 85 24                STA screen_ptr+$1
     681/     BEC : 60                   RTS
     682/     BED :                      
     683/     BED :                     LCD_print:
     684/     BED : A9 00                LDA #$0
     685/     BEF : 85 08                STA $8 ;index
     686/     BF1 :                      .loop:
     687/     BF1 : A4 08                LDY $8 ;index
     688/     BF3 : B1 06                LDA ($6),Y ;source
     689/     BF5 : F0 0E                BEQ .done
     690/     BF7 : 85 09                STA $9 ;arg
     691/     BF9 : A5 09                LDA $9 ;arg
     692/     BFB : 85 0F                STA $F ;LCD_char.c_out
     693/     BFD : 20 72 0B             JSR LCD_char
     694/     C00 : E6 08                INC $8 ;index
     695/     C02 : 4C F1 0B             JMP .loop
     696/     C05 :                      .done:
     697/     C05 : 60                   RTS
     698/     C06 :                      
     699/     C06 :                     MemCopy:
     700/     C06 : A0 00                LDY #$0
     701/     C08 :                      .loop:
     702/     C08 : B1 0F                LDA ($F),Y ;source
     703/     C0A : 91 11                STA ($11),Y ;dest
     704/     C0C : C8                   INY
     705/     C0D : C4 0A                CPY $A ;count
     706/     C0F : D0 F7                BNE .loop
     707/     C11 : 60                   RTS
     708/     C12 :                      
     709/     C12 :                     BCD_Reverse:
     710/     C12 : A0 00                LDY #$0
     711/     C14 : 08                   PHP
     712/     C15 : F8                   SED
     713/     C16 : 38                   SEC
     714/     C17 :                      .loop:
     715/     C17 : A9 00                LDA #$0
     716/     C19 : F1 17                SBC ($17),Y ;source
     717/     C1B : 91 17                STA ($17),Y ;source
     718/     C1D : C8                   INY
     719/     C1E : C6 19                DEC $19 ;count
     720/     C20 : D0 F5                BNE .loop
     721/     C22 : 28                   PLP
     722/     C23 : 60                   RTS
     723/     C24 :                      
     724/     C24 :                     DigitHigh:
     725/     C24 : A5 0A                LDA $A ;digit
     726/     C26 : 4A                   LSR
     727/     C27 : 4A                   LSR
     728/     C28 : 4A                   LSR
     729/     C29 : 4A                   LSR
     730/     C2A : 18                   CLC
     731/     C2B : 69 30                ADC #$30
     732/     C2D : 85 0A                STA $A ;digit
     733/     C2F : A5 0A                LDA $A ;digit
     734/     C31 : 85 0F                STA $F ;LCD_char.c_out
     735/     C33 : 20 72 0B             JSR LCD_char
     736/     C36 : 60                   RTS
     737/     C37 :                      
     738/     C37 :                     DigitLow:
     739/     C37 : A5 0A                LDA $A ;digit
     740/     C39 : 29 0F                AND #$F
     741/     C3B : 18                   CLC
     742/     C3C : 69 30                ADC #$30
     743/     C3E : 85 0A                STA $A ;digit
     744/     C40 : A5 0A                LDA $A ;digit
     745/     C42 : 85 0F                STA $F ;LCD_char.c_out
     746/     C44 : 20 72 0B             JSR LCD_char
     747/     C47 : 60                   RTS
     748/     C48 :                      
     749/     C48 :                     DrawFloat:
     750/     C48 : A5 03                LDA $3 ;source
     751/     C4A : 85 0F                STA $F ;MemCopy.source
     752/     C4C : A5 04                LDA $4 ;source
     753/     C4E : 85 10                STA $10 ;MemCopy.source
     754/     C50 : A9 25                LDA # (R0) # $100
     755/     C52 : 85 11                STA $11 ;MemCopy.dest
     756/     C54 : A9 00                LDA # (R0)/$100
     757/     C56 : 85 12                STA $12 ;MemCopy.dest
     758/     C58 : A9 09                LDA #$9
     759/     C5A : 85 0A                STA $A ;MemCopy.count
     760/     C5C : 20 06 0C             JSR MemCopy
     761/     C5F : A9 20                LDA #$20
     762/     C61 : 85 07                STA $7 ;sign
     763/     C63 : A0 08                LDY #$8
     764/     C65 : B1 03                LDA ($3),Y ;source
     765/     C67 : 29 80                AND #$80
     766/     C69 : F0 04                BEQ .positive
     767/     C6B : A9 63                LDA #$63
     768/     C6D : 85 07                STA $7 ;sign
     769/     C6F :                      .positive:
     770/     C6F : A5 07                LDA $7 ;sign
     771/     C71 : 85 0F                STA $F ;LCD_char.c_out
     772/     C73 : 20 72 0B             JSR LCD_char
     773/     C76 : A0 06                LDY #$6
     774/     C78 : B9 25 00             LDA R0,Y
     775/     C7B : 85 06                STA $6 ;arg
     776/     C7D : A5 06                LDA $6 ;arg
     777/     C7F : 85 0A                STA $A ;DigitHigh.digit
     778/     C81 : 20 24 0C             JSR DigitHigh
     779/     C84 : A9 2E                LDA #$2E
     780/     C86 : 85 0F                STA $F ;LCD_char.c_out
     781/     C88 : 20 72 0B             JSR LCD_char
     782/     C8B : A5 06                LDA $6 ;arg
     783/     C8D : 85 0A                STA $A ;DigitLow.digit
     784/     C8F : 20 37 0C             JSR DigitLow
     785/     C92 : A9 05                LDA #$5
     786/     C94 : 85 05                STA $5 ;index
     787/     C96 :                      .loop:
     788/     C96 : A4 05                LDY $5 ;index
     789/     C98 : B9 25 00             LDA R0,Y
     790/     C9B : 85 06                STA $6 ;arg
     791/     C9D : A5 06                LDA $6 ;arg
     792/     C9F : 85 0A                STA $A ;DigitHigh.digit
     793/     CA1 : 20 24 0C             JSR DigitHigh
     794/     CA4 : A5 06                LDA $6 ;arg
     795/     CA6 : 85 0A                STA $A ;DigitLow.digit
     796/     CA8 : 20 37 0C             JSR DigitLow
     797/     CAB : C6 05                DEC $5 ;index
     798/     CAD : A5 05                LDA $5 ;index
     799/     CAF : C9 02                CMP #$2
     800/     CB1 : D0 E3                BNE .loop
     801/     CB3 : A9 2B                LDA #$2B
     802/     CB5 : 85 07                STA $7 ;sign
     803/     CB7 : A0 08                LDY #$8
     804/     CB9 : B1 03                LDA ($3),Y ;source
     805/     CBB : 29 40                AND #$40
     806/     CBD : F0 04                BEQ .positive_e
     807/     CBF : A9 63                LDA #$63
     808/     CC1 : 85 07                STA $7 ;sign
     809/     CC3 :                      .positive_e:
     810/     CC3 : A5 07                LDA $7 ;sign
     811/     CC5 : 85 0F                STA $F ;LCD_char.c_out
     812/     CC7 : 20 72 0B             JSR LCD_char
     813/     CCA : A0 08                LDY #$8
     814/     CCC : B9 25 00             LDA R0,Y
     815/     CCF : 85 06                STA $6 ;arg
     816/     CD1 : A5 06                LDA $6 ;arg
     817/     CD3 : 85 0A                STA $A ;DigitLow.digit
     818/     CD5 : 20 37 0C             JSR DigitLow
     819/     CD8 : A0 07                LDY #$7
     820/     CDA : B9 25 00             LDA R0,Y
     821/     CDD : 85 06                STA $6 ;arg
     822/     CDF : A5 06                LDA $6 ;arg
     823/     CE1 : 85 0A                STA $A ;DigitHigh.digit
     824/     CE3 : 20 24 0C             JSR DigitHigh
     825/     CE6 : A5 06                LDA $6 ;arg
     826/     CE8 : 85 0A                STA $A ;DigitLow.digit
     827/     CEA : 20 37 0C             JSR DigitLow
     828/     CED : 60                   RTS
     829/     CEE :                      
     830/     CEE :                     HexHigh:
     831/     CEE : A5 06                LDA $6 ;digit
     832/     CF0 : 4A                   LSR
     833/     CF1 : 4A                   LSR
     834/     CF2 : 4A                   LSR
     835/     CF3 : 4A                   LSR
     836/     CF4 : C9 0A                CMP #$A
     837/     CF6 : 90 08                BCC .print_digit
     838/     CF8 : 18                   CLC
     839/     CF9 : 69 37                ADC #$37
     840/     CFB : 85 07                STA $7 ;arg
     841/     CFD : 4C 05 0D             JMP .done
     842/     D00 :                      .print_digit:
     843/     D00 : 18                   CLC
     844/     D01 : 69 30                ADC #$30
     845/     D03 : 85 07                STA $7 ;arg
     846/     D05 :                      .done:
     847/     D05 : A5 07                LDA $7 ;arg
     848/     D07 : 85 0F                STA $F ;LCD_char.c_out
     849/     D09 : 20 72 0B             JSR LCD_char
     850/     D0C : 60                   RTS
     851/     D0D :                      
     852/     D0D :                     HexLow:
     853/     D0D : A5 06                LDA $6 ;digit
     854/     D0F : 29 0F                AND #$F
     855/     D11 : C9 0A                CMP #$A
     856/     D13 : 90 08                BCC .print_digit
     857/     D15 : 18                   CLC
     858/     D16 : 69 37                ADC #$37
     859/     D18 : 85 07                STA $7 ;arg
     860/     D1A : 4C 22 0D             JMP .done
     861/     D1D :                      .print_digit:
     862/     D1D : 18                   CLC
     863/     D1E : 69 30                ADC #$30
     864/     D20 : 85 07                STA $7 ;arg
     865/     D22 :                      .done:
     866/     D22 : A5 07                LDA $7 ;arg
     867/     D24 : 85 0F                STA $F ;LCD_char.c_out
     868/     D26 : 20 72 0B             JSR LCD_char
     869/     D29 : 60                   RTS
     870/     D2A :                      
     871/     D2A :                     DrawHex:
     872/     D2A : A9 24                LDA #$24
     873/     D2C : 85 0F                STA $F ;LCD_char.c_out
     874/     D2E : 20 72 0B             JSR LCD_char
     875/     D31 : A0 02                LDY #$2
     876/     D33 : B1 03                LDA ($3),Y ;source
     877/     D35 : 85 05                STA $5 ;arg
     878/     D37 : A5 05                LDA $5 ;arg
     879/     D39 : 85 06                STA $6 ;HexHigh.digit
     880/     D3B : 20 EE 0C             JSR HexHigh
     881/     D3E : A5 05                LDA $5 ;arg
     882/     D40 : 85 06                STA $6 ;HexLow.digit
     883/     D42 : 20 0D 0D             JSR HexLow
     884/     D45 : A0 01                LDY #$1
     885/     D47 : B1 03                LDA ($3),Y ;source
     886/     D49 : 85 05                STA $5 ;arg
     887/     D4B : A5 05                LDA $5 ;arg
     888/     D4D : 85 06                STA $6 ;HexHigh.digit
     889/     D4F : 20 EE 0C             JSR HexHigh
     890/     D52 : A5 05                LDA $5 ;arg
     891/     D54 : 85 06                STA $6 ;HexLow.digit
     892/     D56 : 20 0D 0D             JSR HexLow
     893/     D59 : 60                   RTS
     894/     D5A :                      
     895/     D5A :                     DrawString:
     896/     D5A : A9 22                LDA #$22
     897/     D5C : 85 0F                STA $F ;LCD_char.c_out
     898/     D5E : 20 72 0B             JSR LCD_char
     899/     D61 : A9 01                LDA #$1
     900/     D63 : 85 06                STA $6 ;index
     901/     D65 :                      .loop:
     902/     D65 : A4 06                LDY $6 ;index
     903/     D67 : B1 03                LDA ($3),Y ;source
     904/     D69 : F0 11                BEQ .done
     905/     D6B : 85 05                STA $5 ;arg
     906/     D6D : A5 05                LDA $5 ;arg
     907/     D6F : 85 0F                STA $F ;LCD_char.c_out
     908/     D71 : 20 72 0B             JSR LCD_char
     909/     D74 : E6 06                INC $6 ;index
     910/     D76 : A5 06                LDA $6 ;index
     911/     D78 : C9 09                CMP #$9
     912/     D7A : D0 E9                BNE .loop
     913/     D7C :                      .done:
     914/     D7C : A9 22                LDA #$22
     915/     D7E : 85 0F                STA $F ;LCD_char.c_out
     916/     D80 : 20 72 0B             JSR LCD_char
     917/     D83 : 60                   RTS
     918/     D84 :                      
     919/     D84 :                     DrawStack:
     920/     D84 : 8A                   TXA
     921/     D85 : 18                   CLC
     922/     D86 : 69 24                ADC #$24
     923/     D88 : 85 0D                STA $D ;address
     924/     D8A : A9 00                LDA #$0
     925/     D8C : 85 0E                STA $E ;address
     926/     D8E : 20 4E 0B             JSR LCD_clrscr
     927/     D91 : 4C 98 0D             JMP .._1437.str_skip
     928/     D94 :                      .._1437.str_addr:
     929/     D94 : 52 41 44 00          FCB "RAD",$0
     930/     D98 :                      .._1437.str_skip:
     931/     D98 : A9 94                LDA # (.._1437.str_addr) # $100
     932/     D9A : 85 06                STA $6 ;LCD_print.source
     933/     D9C : A9 0D                LDA # (.._1437.str_addr)/$100
     934/     D9E : 85 07                STA $7 ;LCD_print.source
     935/     DA0 : 20 ED 0B             JSR LCD_print
     936/     DA3 : A9 35                LDA #$35
     937/     DA5 : 85 0B                STA $B ;character
     938/     DA7 : A9 05                LDA #$5
     939/     DA9 : 85 0C                STA $C ;counter
     940/     DAB :                      .loop:
     941/     DAB : A9 00                LDA #$0
     942/     DAD : 85 23                STA screen_ptr
     943/     DAF : A5 24                LDA screen_ptr+$1
     944/     DB1 : 18                   CLC
     945/     DB2 : 69 10                ADC #$10
     946/     DB4 : 85 24                STA screen_ptr+$1
     947/     DB6 : A5 0B                LDA $B ;character
     948/     DB8 : 85 0F                STA $F ;LCD_char.c_out
     949/     DBA : 20 72 0B             JSR LCD_char
     950/     DBD : A9 3A                LDA #$3A
     951/     DBF : 85 0F                STA $F ;LCD_char.c_out
     952/     DC1 : 20 72 0B             JSR LCD_char
     953/     DC4 : C6 0C                DEC $C ;counter
     954/     DC6 : A5 0C                LDA $C ;counter
     955/     DC8 : CD 91 01             CMP stack_count
     956/     DCB : B0 3A                BCS .no_item
     957/     DCD : A0 00                LDY #$0
     958/     DCF : B1 0D                LDA ($D),Y ;address
     959/     DD1 : C9 01                CMP #$1
     960/     DD3 : D0 0E                BNE .not_float
     961/     DD5 : A5 0D                LDA $D ;address
     962/     DD7 : 85 03                STA $3 ;DrawFloat.source
     963/     DD9 : A5 0E                LDA $E ;address
     964/     DDB : 85 04                STA $4 ;DrawFloat.source
     965/     DDD : 20 48 0C             JSR DrawFloat
     966/     DE0 : 4C 07 0E             JMP .item_done
     967/     DE3 :                      .not_float:
     968/     DE3 : C9 02                CMP #$2
     969/     DE5 : D0 0E                BNE .not_str
     970/     DE7 : A5 0D                LDA $D ;address
     971/     DE9 : 85 03                STA $3 ;DrawString.source
     972/     DEB : A5 0E                LDA $E ;address
     973/     DED : 85 04                STA $4 ;DrawString.source
     974/     DEF : 20 5A 0D             JSR DrawString
     975/     DF2 : 4C 07 0E             JMP .item_done
     976/     DF5 :                      .not_str:
     977/     DF5 : C9 03                CMP #$3
     978/     DF7 : D0 0E                BNE .not_hex
     979/     DF9 : A5 0D                LDA $D ;address
     980/     DFB : 85 03                STA $3 ;DrawHex.source
     981/     DFD : A5 0E                LDA $E ;address
     982/     DFF : 85 04                STA $4 ;DrawHex.source
     983/     E01 : 20 2A 0D             JSR DrawHex
     984/     E04 : 4C 07 0E             JMP .item_done
     985/     E07 :                      .not_hex:
     986/     E07 :                      .item_done:
     987/     E07 :                      .no_item:
     988/     E07 : A5 0D                LDA $D ;address
     989/     E09 : 38                   SEC
     990/     E0A : E9 09                SBC #$9
     991/     E0C : 85 0D                STA $D ;address
     992/     E0E : C6 0B                DEC $B ;character
     993/     E10 : A5 0C                LDA $C ;counter
     994/     E12 : D0 97                BNE .loop
     995/     E14 : A9 00                LDA #$0
     996/     E16 : 85 23                STA screen_ptr
     997/     E18 : A5 24                LDA screen_ptr+$1
     998/     E1A : 18                   CLC
     999/     E1B : 69 14                ADC #$14
    1000/     E1D : 85 24                STA screen_ptr+$1
    1001/     E1F : A0 00                LDY #$0
    1002/     E21 : A9 00                LDA #$0
    1003/     E23 :                      .loop_line:
    1004/     E23 : 91 23                STA (screen_ptr),Y
    1005/     E25 : E6 24                INC screen_ptr+$1
    1006/     E27 : 91 23                STA (screen_ptr),Y
    1007/     E29 : C6 24                DEC screen_ptr+$1
    1008/     E2B : C8                   INY
    1009/     E2C : D0 F5                BNE .loop_line
    1010/     E2E : 60                   RTS
    1011/     E2F :                      
    1012/     E2F :                     ERROR_MSG_INPUT:
    1013/     E2F : 49 4E 50 55 54 20    FCB "INPUT ERROR ",$0
                    45 52 52 4F 52 20 
                    00                
    1014/     E3C :                      
    1015/     E3C :                     ERROR_MSG_WORD_TOO_LONG:
    1016/     E3C : 49 4E 50 55 54 20    FCB "INPUT SIZE  ",$0
                    53 49 5A 45 20 20 
                    00                
    1017/     E49 :                      
    1018/     E49 :                     ERROR_MSG_STRING:
    1019/     E49 : 53 54 52 49 4E 47    FCB "STRING ERROR",$0
                    20 45 52 52 4F 52 
                    00                
    1020/     E56 :                      
    1021/     E56 :                     ERROR_MSG_STACK_OVERFLOW:
    1022/     E56 : 53 54 41 43 4B 20    FCB "STACK OVERF ",$0
                    4F 56 45 52 46 20 
                    00                
    1023/     E63 :                      
    1024/     E63 :                     ERROR_MSG_STACK_UNDERFLOW:
    1025/     E63 : 53 54 41 43 4B 20    FCB "STACK UNDERF",$0
                    55 4E 44 45 52 46 
                    00                
    1026/     E70 :                      
    1027/     E70 :                     ERROR_TABLE:
    1028/     E70 : 2F 0E                FDB ERROR_MSG_INPUT
    1029/     E72 : 3C 0E                FDB ERROR_MSG_WORD_TOO_LONG
    1030/     E74 : 49 0E                FDB ERROR_MSG_STRING
    1031/     E76 : 56 0E                FDB ERROR_MSG_STACK_OVERFLOW
    1032/     E78 : 63 0E                FDB ERROR_MSG_STACK_UNDERFLOW
    1033/     E7A :                      
    1034/     E7A :                     ErrorMsg:
    1035/     E7A : A4 03                LDY $3 ;error_code
    1036/     E7C : B9 6E 0E             LDA ERROR_TABLE-$2,Y
    1037/     E7F : 85 04                STA $4 ;msg
    1038/     E81 : B9 6F 0E             LDA ERROR_TABLE-$1,Y
    1039/     E84 : 85 05                STA $5 ;msg
    1040/     E86 : A9 20                LDA #$20
    1041/     E88 : 85 23                STA screen_ptr
    1042/     E8A : A9 60                LDA #$60
    1043/     E8C : 85 24                STA screen_ptr+$1
    1044/     E8E : 4C 9E 0E             JMP .._1612.str_skip
    1045/     E91 :                      .._1612.str_addr:
    1046/     E91 : 62 62 62 62 62 62    FCB "bbbbbbbbbbbb",$0
                    62 62 62 62 62 62 
                    00                
    1047/     E9E :                      .._1612.str_skip:
    1048/     E9E : A9 91                LDA # (.._1612.str_addr) # $100
    1049/     EA0 : 85 06                STA $6 ;LCD_print.source
    1050/     EA2 : A9 0E                LDA # (.._1612.str_addr)/$100
    1051/     EA4 : 85 07                STA $7 ;LCD_print.source
    1052/     EA6 : 20 ED 0B             JSR LCD_print
    1053/     EA9 : A9 20                LDA #$20
    1054/     EAB : 85 23                STA screen_ptr
    1055/     EAD : A9 70                LDA #$70
    1056/     EAF : 85 24                STA screen_ptr+$1
    1057/     EB1 : A9 FF                LDA #$FF
    1058/     EB3 : 8D 90 01             STA font_inverted
    1059/     EB6 : A5 04                LDA $4 ;msg
    1060/     EB8 : 85 06                STA $6 ;LCD_print.source
    1061/     EBA : A5 05                LDA $5 ;msg
    1062/     EBC : 85 07                STA $7 ;LCD_print.source
    1063/     EBE : 20 ED 0B             JSR LCD_print
    1064/     EC1 : A9 20                LDA #$20
    1065/     EC3 : 85 23                STA screen_ptr
    1066/     EC5 : A9 80                LDA #$80
    1067/     EC7 : 85 24                STA screen_ptr+$1
    1068/     EC9 : 4C D9 0E             JMP .._1666.str_skip
    1069/     ECC :                      .._1666.str_addr:
    1070/     ECC : 62 62 62 62 62 62    FCB "bbbbbbbbbbbb",$0
                    62 62 62 62 62 62 
                    00                
    1071/     ED9 :                      .._1666.str_skip:
    1072/     ED9 : A9 CC                LDA # (.._1666.str_addr) # $100
    1073/     EDB : 85 06                STA $6 ;LCD_print.source
    1074/     EDD : A9 0E                LDA # (.._1666.str_addr)/$100
    1075/     EDF : 85 07                STA $7 ;LCD_print.source
    1076/     EE1 : 20 ED 0B             JSR LCD_print
    1077/     EE4 : A9 00                LDA #$0
    1078/     EE6 : 8D 90 01             STA font_inverted
    1079/     EE9 :                      .loop:
    1080/     EE9 : 20 4A 0B             JSR ReadKey
    1081/     EEC : C9 0D                CMP #$D
    1082/     EEE : D0 F9                BNE .loop
    1083/     EF0 : 60                   RTS
    1084/     EF1 : 60                   RTS
    1085/     EF2 :                      
    1086/     EF2 :                     InitForth:
    1087/     EF2 : A9 00                LDA #$0
    1088/     EF4 : 8D 31 01             STA input_buff_begin
    1089/     EF7 : 8D 32 01             STA input_buff_end
    1090/     EFA : 8D 73 01             STA new_word_len
    1091/     EFD : 60                   RTS
    1092/     EFE :                      
    1093/     EFE :                     special_chars:
    1094/     EFE : 65 22                FCB 'e',$22
    1095/     F00 : 20 2E 24 6D          FCB " .$m"
    1096/     F04 :                      
    1097/     F04 :                     ReadLine:
    1098/     F04 : A9 00                LDA #$0
    1099/     F06 : 85 03                STA $3 ;cursor
    1100/     F08 : 85 0A                STA $A ;index
    1101/     F0A : 85 23                STA screen_ptr
    1102/     F0C : A9 AC                LDA #$AC
    1103/     F0E : 85 24                STA screen_ptr+$1
    1104/     F10 : 4C 24 0F             JMP .._1717.str_skip
    1105/     F13 :                      .._1717.str_addr:
    1106/     F13 : 61 20 20 20 20 20    FCB "a               ",$0
                    20 20 20 20 20 20 
                    20 20 20 20 00    
    1107/     F24 :                      .._1717.str_skip:
    1108/     F24 : A9 13                LDA # (.._1717.str_addr) # $100
    1109/     F26 : 85 06                STA $6 ;LCD_print.source
    1110/     F28 : A9 0F                LDA # (.._1717.str_addr)/$100
    1111/     F2A : 85 07                STA $7 ;LCD_print.source
    1112/     F2C : 20 ED 0B             JSR LCD_print
    1113/     F2F : AD E6 FF             LDA $FFE6
    1114/     F32 : 85 04                STA $4 ;cursor_timer
    1115/     F34 :                      .loop:
    1116/     F34 : A9 00                LDA #$0
    1117/     F36 : 85 05                STA $5 ;arg
    1118/     F38 : 20 4A 0B             JSR ReadKey
    1119/     F3B : D0 03                BNE .key_read
    1120/     F3D : 4C 1D 10             JMP .no_key
    1121/     F40 :                      .key_read:
    1122/     F40 : C9 0D                CMP #$D
    1123/     F42 : D0 0F                BNE .not_enter
    1124/     F44 : A5 0A                LDA $A ;index
    1125/     F46 : F0 EC                BEQ .loop
    1126/     F48 : A9 00                LDA #$0
    1127/     F4A : 8D 31 01             STA input_buff_begin
    1128/     F4D : A5 0A                LDA $A ;index
    1129/     F4F : 8D 32 01             STA input_buff_end
    1130/     F52 : 60                   RTS
    1131/     F53 :                      .not_enter:
    1132/     F53 : C9 08                CMP #$8
    1133/     F55 : D0 2F                BNE .not_backspace
    1134/     F57 : A5 0A                LDA $A ;index
    1135/     F59 : F0 28                BEQ .backspace_done
    1136/     F5B : C6 0A                DEC $A ;index
    1137/     F5D : C9 10                CMP #$10
    1138/     F5F : B0 1C                BCS .backspace_scroll
    1139/     F61 : A9 20                LDA #$20
    1140/     F63 : 85 0F                STA $F ;LCD_char.c_out
    1141/     F65 : 20 72 0B             JSR LCD_char
    1142/     F68 : A5 23                LDA screen_ptr
    1143/     F6A : 38                   SEC
    1144/     F6B : E9 20                SBC #$20
    1145/     F6D : 85 23                STA screen_ptr
    1146/     F6F : 48                   PHA
    1147/     F70 : A9 61                LDA #$61
    1148/     F72 : 85 0F                STA $F ;LCD_char.c_out
    1149/     F74 : 20 72 0B             JSR LCD_char
    1150/     F77 : 68                   PLA
    1151/     F78 : 85 23                STA screen_ptr
    1152/     F7A : 4C 1D 10             JMP .draw_done
    1153/     F7D :                      .backspace_scroll:
    1154/     F7D : A4 0A                LDY $A ;index
    1155/     F7F : 88                   DEY
    1156/     F80 : 4C F0 0F             JMP .scroll_buffer
    1157/     F83 :                      .backspace_done:
    1158/     F83 : 4C 1D 10             JMP .no_key
    1159/     F86 :                      .not_backspace:
    1160/     F86 : A0 00                LDY #$0
    1161/     F88 :                      .special_loop:
    1162/     F88 : D9 FE 0E             CMP special_chars,Y
    1163/     F8B : D0 0D                BNE .special_next
    1164/     F8D : 85 05                STA $5 ;arg
    1165/     F8F : C9 6D                CMP #$6D
    1166/     F91 : D0 33                BNE .key_done
    1167/     F93 : A9 63                LDA #$63
    1168/     F95 : 85 05                STA $5 ;arg
    1169/     F97 : 4C C6 0F             JMP .key_done
    1170/     F9A :                      .special_next:
    1171/     F9A : C8                   INY
    1172/     F9B : C0 06                CPY #$6
    1173/     F9D : D0 E9                BNE .special_loop
    1174/     F9F : C9 30                CMP #$30
    1175/     FA1 : 90 09                BCC .not_num
    1176/     FA3 : C9 3A                CMP #$3A
    1177/     FA5 : B0 05                BCS .not_num
    1178/     FA7 : 85 05                STA $5 ;arg
    1179/     FA9 : 4C C6 0F             JMP .key_done
    1180/     FAC :                      .not_num:
    1181/     FAC : C9 41                CMP #$41
    1182/     FAE : 90 09                BCC .not_upper
    1183/     FB0 : C9 5B                CMP #$5B
    1184/     FB2 : B0 05                BCS .not_upper
    1185/     FB4 : 85 05                STA $5 ;arg
    1186/     FB6 : 4C C6 0F             JMP .key_done
    1187/     FB9 :                      .not_upper:
    1188/     FB9 : C9 61                CMP #$61
    1189/     FBB : 90 09                BCC .not_lower
    1190/     FBD : C9 7B                CMP #$7B
    1191/     FBF : B0 05                BCS .not_lower
    1192/     FC1 : 38                   SEC
    1193/     FC2 : E9 20                SBC #$20
    1194/     FC4 : 85 05                STA $5 ;arg
    1195/     FC6 :                      .not_lower:
    1196/     FC6 :                      .key_done:
    1197/     FC6 : A5 05                LDA $5 ;arg
    1198/     FC8 : F0 53                BEQ .not_valid
    1199/     FCA : A4 0A                LDY $A ;index
    1200/     FCC : C0 40                CPY #$40
    1201/     FCE : B0 4D                BCS .buffer_full
    1202/     FD0 : 99 33 01             STA input_buff,Y
    1203/     FD3 : E6 0A                INC $A ;index
    1204/     FD5 : C0 0F                CPY #$F
    1205/     FD7 : B0 17                BCS .scroll_buffer
    1206/     FD9 : A5 05                LDA $5 ;arg
    1207/     FDB : 85 0F                STA $F ;LCD_char.c_out
    1208/     FDD : 20 72 0B             JSR LCD_char
    1209/     FE0 : A5 23                LDA screen_ptr
    1210/     FE2 : 48                   PHA
    1211/     FE3 : A9 61                LDA #$61
    1212/     FE5 : 85 0F                STA $F ;LCD_char.c_out
    1213/     FE7 : 20 72 0B             JSR LCD_char
    1214/     FEA : 68                   PLA
    1215/     FEB : 85 23                STA screen_ptr
    1216/     FED : 4C 1D 10             JMP .draw_done
    1217/     FF0 :                      .scroll_buffer:
    1218/     FF0 : A9 00                LDA #$0
    1219/     FF2 : 85 23                STA screen_ptr
    1220/     FF4 : 98                   TYA
    1221/     FF5 : 38                   SEC
    1222/     FF6 : E9 0E                SBC #$E
    1223/     FF8 : 85 0B                STA $B ;str_index
    1224/     FFA :                      .scroll_loop:
    1225/     FFA : A4 0B                LDY $B ;str_index
    1226/     FFC : E6 0B                INC $B ;str_index
    1227/     FFE : B9 33 01             LDA input_buff,Y
    1228/    1001 : 85 05                STA $5 ;arg
    1229/    1003 : A5 05                LDA $5 ;arg
    1230/    1005 : 85 0F                STA $F ;LCD_char.c_out
    1231/    1007 : 20 72 0B             JSR LCD_char
    1232/    100A : A5 0A                LDA $A ;index
    1233/    100C : C5 0B                CMP $B ;str_index
    1234/    100E : D0 EA                BNE .scroll_loop
    1235/    1010 : A5 23                LDA screen_ptr
    1236/    1012 : 48                   PHA
    1237/    1013 : A9 61                LDA #$61
    1238/    1015 : 85 0F                STA $F ;LCD_char.c_out
    1239/    1017 : 20 72 0B             JSR LCD_char
    1240/    101A : 68                   PLA
    1241/    101B : 85 23                STA screen_ptr
    1242/    101D :                      .draw_done:
    1243/    101D :                      .buffer_full:
    1244/    101D :                      .not_valid:
    1245/    101D :                      .no_key:
    1246/    101D : AD E6 FF             LDA $FFE6
    1247/    1020 : C5 04                CMP $4 ;cursor_timer
    1248/    1022 : F0 25                BEQ .cursor_done
    1249/    1024 : 85 04                STA $4 ;cursor_timer
    1250/    1026 : A5 03                LDA $3 ;cursor
    1251/    1028 : F0 09                BEQ .draw_blank
    1252/    102A : A9 00                LDA #$0
    1253/    102C : 85 03                STA $3 ;cursor
    1254/    102E : A9 20                LDA #$20
    1255/    1030 : 4C 39 10             JMP .draw
    1256/    1033 :                      .draw_blank:
    1257/    1033 : A9 FF                LDA #$FF
    1258/    1035 : 85 03                STA $3 ;cursor
    1259/    1037 : A9 61                LDA #$61
    1260/    1039 :                      .draw:
    1261/    1039 : 85 05                STA $5 ;arg
    1262/    103B : A5 05                LDA $5 ;arg
    1263/    103D : 85 0F                STA $F ;LCD_char.c_out
    1264/    103F : 20 72 0B             JSR LCD_char
    1265/    1042 : A5 23                LDA screen_ptr
    1266/    1044 : 38                   SEC
    1267/    1045 : E9 10                SBC #$10
    1268/    1047 : 85 23                STA screen_ptr
    1269/    1049 :                      .cursor_done:
    1270/    1049 : 4C 34 0F             JMP .loop
    1271/    104C : 60                   RTS
    1272/    104D :                      
    1273/    104D :                     LineWord:
    1274/    104D : A9 00                LDA #$0
    1275/    104F : 85 21                STA ret_val
    1276/    1051 : A9 00                LDA #$0
    1277/    1053 : 8D 73 01             STA new_word_len
    1278/    1056 : AC 31 01             LDY input_buff_begin
    1279/    1059 : CC 32 01             CPY input_buff_end
    1280/    105C : D0 01                BNE .chars_left
    1281/    105E : 60                   RTS
    1282/    105F :                      .chars_left:
    1283/    105F :                      .loop:
    1284/    105F : AC 31 01             LDY input_buff_begin
    1285/    1062 : B9 33 01             LDA input_buff,Y
    1286/    1065 : EE 31 01             INC input_buff_begin
    1287/    1068 : C9 20                CMP #$20
    1288/    106A : D0 06                BNE .not_space
    1289/    106C : AD 73 01             LDA new_word_len
    1290/    106F : F0 14                BEQ .chars_left2
    1291/    1071 : 60                   RTS
    1292/    1072 :                      .not_space:
    1293/    1072 : AC 73 01             LDY new_word_len
    1294/    1075 : 99 74 01             STA new_word_buff,Y
    1295/    1078 : C8                   INY
    1296/    1079 : 8C 73 01             STY new_word_len
    1297/    107C : C0 13                CPY #$13
    1298/    107E : D0 05                BNE .word_size_good
    1299/    1080 : A9 04                LDA #$4
    1300/    1082 : 85 21                STA ret_val
    1301/    1084 : 60                   RTS
    1302/    1085 :                      .word_size_good:
    1303/    1085 :                      .chars_left2:
    1304/    1085 : AD 31 01             LDA input_buff_begin
    1305/    1088 : CD 32 01             CMP input_buff_end
    1306/    108B : F0 03                BEQ .found
    1307/    108D : 4C 5F 10             JMP .loop
    1308/    1090 :                      .found:
    1309/    1090 : 60                   RTS
    1310/    1091 : 60                   RTS
    1311/    1092 :                      
    1312/    1092 :                     FindWord:
    1313/    1092 : A9 77                LDA # (FORTH_WORDS) # $100
    1314/    1094 : 85 21                STA ret_val
    1315/    1096 : A9 13                LDA # (FORTH_WORDS)/$100
    1316/    1098 : 85 22                STA ret_val+$1
    1317/    109A :                      .loop:
    1318/    109A : A0 00                LDY #$0
    1319/    109C : B1 21                LDA (ret_val),Y
    1320/    109E : CD 73 01             CMP new_word_len
    1321/    10A1 : D0 11                BNE .loop_next
    1322/    10A3 : C8                   INY
    1323/    10A4 :                      .str_loop:
    1324/    10A4 : B1 21                LDA (ret_val),Y
    1325/    10A6 : D9 73 01             CMP new_word_buff-$1,Y
    1326/    10A9 : D0 09                BNE .no_match
    1327/    10AB : CC 73 01             CPY new_word_len
    1328/    10AE : F0 1C                BEQ .word_found
    1329/    10B0 : C8                   INY
    1330/    10B1 : 4C A4 10             JMP .str_loop
    1331/    10B4 :                      .no_match:
    1332/    10B4 :                      .loop_next:
    1333/    10B4 : A0 00                LDY #$0
    1334/    10B6 : B1 21                LDA (ret_val),Y
    1335/    10B8 : A8                   TAY
    1336/    10B9 : C8                   INY
    1337/    10BA : B1 21                LDA (ret_val),Y
    1338/    10BC : 48                   PHA
    1339/    10BD : C8                   INY
    1340/    10BE : B1 21                LDA (ret_val),Y
    1341/    10C0 : 85 22                STA ret_val+$1
    1342/    10C2 : 68                   PLA
    1343/    10C3 : 85 21                STA ret_val
    1344/    10C5 : 05 22                ORA ret_val+$1
    1345/    10C7 : D0 D1                BNE .loop
    1346/    10C9 : 85 21                STA ret_val
    1347/    10CB : 60                   RTS
    1348/    10CC :                      .word_found:
    1349/    10CC : A0 00                LDY #$0
    1350/    10CE : B1 21                LDA (ret_val),Y
    1351/    10D0 : A8                   TAY
    1352/    10D1 : C8                   INY
    1353/    10D2 : C8                   INY
    1354/    10D3 : C8                   INY
    1355/    10D4 : B1 21                LDA (ret_val),Y
    1356/    10D6 : 85 21                STA ret_val
    1357/    10D8 : 60                   RTS
    1358/    10D9 :                      
    1359/    10D9 :                     CheckData:
    1360/    10D9 : A9 04                LDA #$4
    1361/    10DB : 8D 87 01             STA new_stack_item
    1362/    10DE : AD 73 01             LDA new_word_len
    1363/    10E1 : D0 01                BNE .not_zero_len
    1364/    10E3 : 60                   RTS
    1365/    10E4 :                      .not_zero_len:
    1366/    10E4 : A0 08                LDY #$8
    1367/    10E6 : A9 00                LDA #$0
    1368/    10E8 :                      .zero_loop:
    1369/    10E8 : 99 87 01             STA new_stack_item,Y
    1370/    10EB : 88                   DEY
    1371/    10EC : D0 FA                BNE .zero_loop
    1372/    10EE : A0 00                LDY #$0
    1373/    10F0 : AD 74 01             LDA new_word_buff
    1374/    10F3 : C9 22                CMP #$22
    1375/    10F5 : D0 2E                BNE .not_string
    1376/    10F7 : AD 73 01             LDA new_word_len
    1377/    10FA : C9 01                CMP #$1
    1378/    10FC : D0 01                BNE .not_single_quote
    1379/    10FE : 60                   RTS
    1380/    10FF :                      .not_single_quote:
    1381/    10FF : CE 73 01             DEC new_word_len
    1382/    1102 :                      .loop_str:
    1383/    1102 : B9 75 01             LDA new_word_buff+$1,y
    1384/    1105 : C9 22                CMP #$22
    1385/    1107 : F0 10                BEQ .str_done
    1386/    1109 : C0 08                CPY #$8
    1387/    110B : F0 0B                BEQ .string_too_long
    1388/    110D : 99 88 01             STA new_stack_item+$1,Y
    1389/    1110 : C8                   INY
    1390/    1111 : CC 73 01             CPY new_word_len
    1391/    1114 : F0 02                BEQ .string_unterminated
    1392/    1116 : D0 EA                BNE .loop_str
    1393/    1118 :                      .string_too_long:
    1394/    1118 :                      .string_unterminated:
    1395/    1118 : 60                   RTS
    1396/    1119 :                      .str_done:
    1397/    1119 : C8                   INY
    1398/    111A : CC 73 01             CPY new_word_len
    1399/    111D : D0 05                BNE .str_return
    1400/    111F : A9 02                LDA #$2
    1401/    1121 : 8D 87 01             STA new_stack_item
    1402/    1124 :                      .str_return:
    1403/    1124 : 60                   RTS
    1404/    1125 :                      .not_string:
    1405/    1125 : C9 24                CMP #$24
    1406/    1127 : D0 4F                BNE .not_hex
    1407/    1129 : AD 73 01             LDA new_word_len
    1408/    112C : C9 01                CMP #$1
    1409/    112E : F0 47                BEQ .hex_error
    1410/    1130 : C9 06                CMP #$6
    1411/    1132 : B0 43                BCS .hex_error
    1412/    1134 : CE 73 01             DEC new_word_len
    1413/    1137 : A0 00                LDY #$0
    1414/    1139 :                      .loop_hex:
    1415/    1139 : B9 75 01             LDA new_word_buff+$1,Y
    1416/    113C : C9 30                CMP #$30
    1417/    113E : 90 37                BCC .hex_error
    1418/    1140 : C9 3A                CMP #$3A
    1419/    1142 : B0 0F                BCS .not_digit
    1420/    1144 : 38                   SEC
    1421/    1145 : E9 30                SBC #$30
    1422/    1147 : 20 E5 12             JSR .hex_rotate
    1423/    114A : 0D 88 01             ORA new_stack_item+$1
    1424/    114D : 8D 88 01             STA new_stack_item+$1
    1425/    1150 : 4C 67 11             JMP .hex_char_next
    1426/    1153 :                      .not_digit:
    1427/    1153 : C9 41                CMP #$41
    1428/    1155 : 90 20                BCC .hex_error
    1429/    1157 : C9 47                CMP #$47
    1430/    1159 : B0 1C                BCS .hex_error
    1431/    115B : 38                   SEC
    1432/    115C : E9 37                SBC #$37
    1433/    115E : 20 E5 12             JSR .hex_rotate
    1434/    1161 : 0D 88 01             ORA new_stack_item+$1
    1435/    1164 : 8D 88 01             STA new_stack_item+$1
    1436/    1167 :                      .hex_char_next:
    1437/    1167 : C8                   INY
    1438/    1168 : CC 73 01             CPY new_word_len
    1439/    116B : F0 04                BEQ .hex_done
    1440/    116D : C0 04                CPY #$4
    1441/    116F : D0 C8                BNE .loop_hex
    1442/    1171 :                      .hex_done:
    1443/    1171 : A9 03                LDA #$3
    1444/    1173 : 8D 87 01             STA new_stack_item
    1445/    1176 : 60                   RTS
    1446/    1177 :                      .hex_error:
    1447/    1177 : 60                   RTS
    1448/    1178 :                      .not_hex:
    1449/    1178 : A9 06                LDA #$6
    1450/    117A : 85 0C                STA $C ;index
    1451/    117C : A9 00                LDA #$0
    1452/    117E : 85 0D                STA $D ;which_digit
    1453/    1180 : 85 0E                STA $E ;negative
    1454/    1182 : 85 0F                STA $F ;exp_negative
    1455/    1184 : 85 10                STA $10 ;exp_count
    1456/    1186 : 85 14                STA $14 ;digit_count
    1457/    1188 : 85 13                STA $13 ;nonzero_found
    1458/    118A : 85 12                STA $12 ;dec_found
    1459/    118C : 85 11                STA $11 ;exp_found
    1460/    118E : AD 74 01             LDA new_word_buff
    1461/    1191 : C9 63                CMP #$63
    1462/    1193 : D0 08                BNE .float_no_neg
    1463/    1195 : A9 FF                LDA #$FF
    1464/    1197 : 85 0E                STA $E ;negative
    1465/    1199 : C8                   INY
    1466/    119A : 4C A2 11             JMP .float_first_done
    1467/    119D :                      .float_no_neg:
    1468/    119D : C9 65                CMP #$65
    1469/    119F : D0 01                BNE .float_not_exp
    1470/    11A1 : 60                   RTS
    1471/    11A2 :                      .float_not_exp:
    1472/    11A2 :                      .float_first_done:
    1473/    11A2 :                      .loop_float:
    1474/    11A2 : B9 74 01             LDA new_word_buff,Y
    1475/    11A5 : 20 F5 12             JSR .digit
    1476/    11A8 : 90 65                BCC .float_not_digit
    1477/    11AA : 48                   PHA
    1478/    11AB : A5 13                LDA $13 ;nonzero_found
    1479/    11AD : D0 1C                BNE .digit_good
    1480/    11AF : 68                   PLA
    1481/    11B0 : 48                   PHA
    1482/    11B1 : F0 06                BEQ .digit_zero
    1483/    11B3 : A9 FF                LDA #$FF
    1484/    11B5 : 85 13                STA $13 ;nonzero_found
    1485/    11B7 : D0 12                BNE .digit_good
    1486/    11B9 :                      .digit_zero:
    1487/    11B9 : 68                   PLA
    1488/    11BA : A5 11                LDA $11 ;exp_found
    1489/    11BC : D0 23                BNE .float_next
    1490/    11BE : A5 12                LDA $12 ;dec_found
    1491/    11C0 : D0 04                BNE .dec_exp_count
    1492/    11C2 : A9 00                LDA #$0
    1493/    11C4 : 85 10                STA $10 ;exp_count
    1494/    11C6 :                      .dec_exp_count:
    1495/    11C6 : C6 10                DEC $10 ;exp_count
    1496/    11C8 : 4C E1 11             JMP .float_next
    1497/    11CB :                      .digit_good:
    1498/    11CB : A5 11                LDA $11 ;exp_found
    1499/    11CD : D0 1B                BNE .exp_digit
    1500/    11CF : A5 14                LDA $14 ;digit_count
    1501/    11D1 : C9 0C                CMP #$C
    1502/    11D3 : D0 02                BNE .digit_ok
    1503/    11D5 : 68                   PLA
    1504/    11D6 : 60                   RTS
    1505/    11D7 :                      .digit_ok:
    1506/    11D7 : A5 12                LDA $12 ;dec_found
    1507/    11D9 : D0 02                BNE .no_dec_yet
    1508/    11DB : E6 10                INC $10 ;exp_count
    1509/    11DD :                      .no_dec_yet:
    1510/    11DD : 68                   PLA
    1511/    11DE : 20 02 13             JSR .add_digit
    1512/    11E1 :                      .float_next:
    1513/    11E1 : C8                   INY
    1514/    11E2 : CC 73 01             CPY new_word_len
    1515/    11E5 : F0 6B                BEQ .float_done
    1516/    11E7 : 4C A2 11             JMP .loop_float
    1517/    11EA :                      .exp_digit:
    1518/    11EA : A5 14                LDA $14 ;digit_count
    1519/    11EC : C9 03                CMP #$3
    1520/    11EE : D0 02                BNE .exp_digit_ok
    1521/    11F0 : 68                   PLA
    1522/    11F1 : 60                   RTS
    1523/    11F2 :                      .exp_digit_ok:
    1524/    11F2 : 68                   PLA
    1525/    11F3 : 84 0B                STY $B ;y_buff
    1526/    11F5 : A0 04                LDY #$4
    1527/    11F7 :                      .exp_loop:
    1528/    11F7 : 0E 8E 01             ASL new_stack_item+$7
    1529/    11FA : 2E 8F 01             ROL new_stack_item+$8
    1530/    11FD : 88                   DEY
    1531/    11FE : D0 F7                BNE .exp_loop
    1532/    1200 : A4 0B                LDY $B ;y_buff
    1533/    1202 : 0D 8E 01             ORA new_stack_item+$7
    1534/    1205 : 8D 8E 01             STA new_stack_item+$7
    1535/    1208 : E6 0C                INC $C ;index
    1536/    120A : E6 14                INC $14 ;digit_count
    1537/    120C : 4C E1 11             JMP .float_next
    1538/    120F :                      .float_not_digit:
    1539/    120F : C9 2E                CMP #$2E
    1540/    1211 : D0 10                BNE .not_decimal_point
    1541/    1213 : A5 12                LDA $12 ;dec_found
    1542/    1215 : F0 01                BEQ .decimal_good
    1543/    1217 : 60                   RTS
    1544/    1218 :                      .decimal_good:
    1545/    1218 : A5 11                LDA $11 ;exp_found
    1546/    121A : F0 01                BEQ .exp_good
    1547/    121C : 60                   RTS
    1548/    121D :                      .exp_good:
    1549/    121D : A9 FF                LDA #$FF
    1550/    121F : 85 12                STA $12 ;dec_found
    1551/    1221 : D0 BE                BNE .float_next
    1552/    1223 :                      .not_decimal_point:
    1553/    1223 : C9 65                CMP #$65
    1554/    1225 : D0 15                BNE .not_exp
    1555/    1227 : A5 11                LDA $11 ;exp_found
    1556/    1229 : F0 01                BEQ .first_exp
    1557/    122B : 60                   RTS
    1558/    122C :                      .first_exp:
    1559/    122C : A9 00                LDA #$0
    1560/    122E : 85 0C                STA $C ;index
    1561/    1230 : 85 0D                STA $D ;which_digit
    1562/    1232 : 85 14                STA $14 ;digit_count
    1563/    1234 : 85 13                STA $13 ;nonzero_found
    1564/    1236 : A9 FF                LDA #$FF
    1565/    1238 : 85 11                STA $11 ;exp_found
    1566/    123A : D0 A5                BNE .float_next
    1567/    123C :                      .not_exp:
    1568/    123C : C9 63                CMP #$63
    1569/    123E : D0 11                BNE .not_minus
    1570/    1240 : A5 11                LDA $11 ;exp_found
    1571/    1242 : 49 FF                EOR #$FF
    1572/    1244 : 05 0C                ORA $C ;index
    1573/    1246 : 05 0F                ORA $F ;exp_negative
    1574/    1248 : F0 01                BEQ .minus_good
    1575/    124A : 60                   RTS
    1576/    124B :                      .minus_good:
    1577/    124B : A9 FF                LDA #$FF
    1578/    124D : 85 0F                STA $F ;exp_negative
    1579/    124F : D0 90                BNE .float_next
    1580/    1251 :                      .not_minus:
    1581/    1251 : 60                   RTS
    1582/    1252 :                      .float_done:
    1583/    1252 : A5 0F                LDA $F ;exp_negative
    1584/    1254 : F0 0F                BEQ .exp_positive
    1585/    1256 : A9 8E                LDA # (new_stack_item+$7) # $100
    1586/    1258 : 85 17                STA $17 ;BCD_Reverse.source
    1587/    125A : A9 01                LDA # (new_stack_item+$7)/$100
    1588/    125C : 85 18                STA $18 ;BCD_Reverse.source
    1589/    125E : A9 02                LDA #$2
    1590/    1260 : 85 19                STA $19 ;BCD_Reverse.count
    1591/    1262 : 20 12 0C             JSR BCD_Reverse
    1592/    1265 :                      .exp_positive:
    1593/    1265 : F8                   SED
    1594/    1266 : A9 00                LDA #$0
    1595/    1268 : A4 10                LDY $10 ;exp_count
    1596/    126A : 30 0C                BMI .exp_count_neg
    1597/    126C : 88                   DEY
    1598/    126D : F0 0F                BEQ .exp_count_done
    1599/    126F :                      .exp_pos_loop:
    1600/    126F : 18                   CLC
    1601/    1270 : 69 01                ADC #$1
    1602/    1272 : 88                   DEY
    1603/    1273 : D0 FA                BNE .exp_pos_loop
    1604/    1275 : 4C 7E 12             JMP .exp_count_done
    1605/    1278 :                      .exp_count_neg:
    1606/    1278 :                      .exp_min_loop:
    1607/    1278 : 38                   SEC
    1608/    1279 : E9 01                SBC #$1
    1609/    127B : C8                   INY
    1610/    127C : D0 FA                BNE .exp_min_loop
    1611/    127E :                      .exp_count_done:
    1612/    127E : 85 10                STA $10 ;exp_count
    1613/    1280 : C9 50                CMP #$50
    1614/    1282 : B0 0F                BCS .exp_count_neg2
    1615/    1284 : 18                   CLC
    1616/    1285 : 6D 8E 01             ADC new_stack_item+$7
    1617/    1288 : 8D 8E 01             STA new_stack_item+$7
    1618/    128B : A9 00                LDA #$0
    1619/    128D : 6D 8F 01             ADC new_stack_item+$8
    1620/    1290 : 4C 9F 12             JMP .exp_count_done2
    1621/    1293 :                      .exp_count_neg2:
    1622/    1293 : 18                   CLC
    1623/    1294 : 6D 8E 01             ADC new_stack_item+$7
    1624/    1297 : 8D 8E 01             STA new_stack_item+$7
    1625/    129A : A9 00                LDA #$0
    1626/    129C : ED 8F 01             SBC new_stack_item+$8
    1627/    129F :                      .exp_count_done2:
    1628/    129F : 8D 8F 01             STA new_stack_item+$8
    1629/    12A2 : D8                   CLD
    1630/    12A3 : A9 00                LDA #$0
    1631/    12A5 : AC 8F 01             LDY new_stack_item+$8
    1632/    12A8 : C0 50                CPY #$50
    1633/    12AA : 90 11                BCC .exp_positive2
    1634/    12AC : A9 8E                LDA # (new_stack_item+$7) # $100
    1635/    12AE : 85 17                STA $17 ;BCD_Reverse.source
    1636/    12B0 : A9 01                LDA # (new_stack_item+$7)/$100
    1637/    12B2 : 85 18                STA $18 ;BCD_Reverse.source
    1638/    12B4 : A9 02                LDA #$2
    1639/    12B6 : 85 19                STA $19 ;BCD_Reverse.count
    1640/    12B8 : 20 12 0C             JSR BCD_Reverse
    1641/    12BB : A9 FF                LDA #$FF
    1642/    12BD :                      .exp_positive2:
    1643/    12BD : 85 0F                STA $F ;exp_negative
    1644/    12BF : AD 8F 01             LDA new_stack_item+$8
    1645/    12C2 : C9 10                CMP #$10
    1646/    12C4 : D0 01                BNE .no_exp_overflow
    1647/    12C6 : 60                   RTS
    1648/    12C7 :                      .no_exp_overflow:
    1649/    12C7 : A5 0F                LDA $F ;exp_negative
    1650/    12C9 : F0 08                BEQ .exp_no_neg_bit
    1651/    12CB : AD 8F 01             LDA new_stack_item+$8
    1652/    12CE : 09 40                ORA #$40
    1653/    12D0 : 8D 8F 01             STA new_stack_item+$8
    1654/    12D3 :                      .exp_no_neg_bit:
    1655/    12D3 : A5 0E                LDA $E ;negative
    1656/    12D5 : F0 08                BEQ .positive
    1657/    12D7 : AD 8F 01             LDA new_stack_item+$8
    1658/    12DA : 09 80                ORA #$80
    1659/    12DC : 8D 8F 01             STA new_stack_item+$8
    1660/    12DF :                      .positive:
    1661/    12DF : A9 01                LDA #$1
    1662/    12E1 : 8D 87 01             STA new_stack_item
    1663/    12E4 : 60                   RTS
    1664/    12E5 :                      .hex_rotate:
    1665/    12E5 : 84 0B                STY $B ;y_buff
    1666/    12E7 : A0 04                LDY #$4
    1667/    12E9 :                      .hex_rot_loop:
    1668/    12E9 : 0E 88 01             ASL new_stack_item+$1
    1669/    12EC : 2E 89 01             ROL new_stack_item+$2
    1670/    12EF : 88                   DEY
    1671/    12F0 : D0 F7                BNE .hex_rot_loop
    1672/    12F2 : A4 0B                LDY $B ;y_buff
    1673/    12F4 : 60                   RTS
    1674/    12F5 :                      .digit:
    1675/    12F5 : C9 3A                CMP #$3A
    1676/    12F7 : B0 07                BCS .is_digit_no
    1677/    12F9 : C9 30                CMP #$30
    1678/    12FB : 90 03                BCC .is_digit_no
    1679/    12FD : E9 30                SBC #$30
    1680/    12FF : 60                   RTS
    1681/    1300 :                      .is_digit_no:
    1682/    1300 : 18                   CLC
    1683/    1301 : 60                   RTS
    1684/    1302 :                      .add_digit:
    1685/    1302 : 48                   PHA
    1686/    1303 : 84 0B                STY $B ;y_buff
    1687/    1305 : A4 0C                LDY $C ;index
    1688/    1307 : E6 14                INC $14 ;digit_count
    1689/    1309 : A5 0D                LDA $D ;which_digit
    1690/    130B : 49 FF                EOR #$FF
    1691/    130D : 85 0D                STA $D ;which_digit
    1692/    130F : F0 0B                BEQ .second_digit
    1693/    1311 : 68                   PLA
    1694/    1312 : 0A                   ASL
    1695/    1313 : 0A                   ASL
    1696/    1314 : 0A                   ASL
    1697/    1315 : 0A                   ASL
    1698/    1316 : 99 87 01             STA new_stack_item,Y
    1699/    1319 : A4 0B                LDY $B ;y_buff
    1700/    131B : 60                   RTS
    1701/    131C :                      .second_digit:
    1702/    131C : 68                   PLA
    1703/    131D : 19 87 01             ORA new_stack_item,Y
    1704/    1320 : 99 87 01             STA new_stack_item,Y
    1705/    1323 : C6 0C                DEC $C ;index
    1706/    1325 : A4 0B                LDY $B ;y_buff
    1707/    1327 : 60                   RTS
    1708/    1328 : 60                   RTS
    1709/    1329 :                      
    1710/    1329 :                     ExecToken:
    1711/    1329 : A9 00                LDA #$0
    1712/    132B : 85 21                STA ret_val
    1713/    132D : A4 03                LDY $3 ;token
    1714/    132F : B9 2D 14             LDA JUMP_TABLE,Y
    1715/    1332 : 85 06                STA $6 ;address
    1716/    1334 : B9 2E 14             LDA JUMP_TABLE+$1,Y
    1717/    1337 : 85 07                STA $7 ;address
    1718/    1339 : A0 00                LDY #$0
    1719/    133B : B1 06                LDA ($6),Y ;address
    1720/    133D : F0 27                BEQ .no_flags
    1721/    133F : 85 04                STA $4 ;flags
    1722/    1341 : 29 03                AND #$3
    1723/    1343 : 85 05                STA $5 ;temp
    1724/    1345 : AD 91 01             LDA stack_count
    1725/    1348 : C5 05                CMP $5 ;temp
    1726/    134A : B0 05                BCS .no_underflow
    1727/    134C : A9 0A                LDA #$A
    1728/    134E : 85 21                STA ret_val
    1729/    1350 : 60                   RTS
    1730/    1351 :                      .no_underflow:
    1731/    1351 : A5 04                LDA $4 ;flags
    1732/    1353 : 29 04                AND #$4
    1733/    1355 : F0 0F                BEQ .no_add_item
    1734/    1357 : A9 07                LDA #$7
    1735/    1359 : CD 91 01             CMP stack_count
    1736/    135C : B0 05                BCS .no_overflow
    1737/    135E : A9 08                LDA #$8
    1738/    1360 : 85 21                STA ret_val
    1739/    1362 : 60                   RTS
    1740/    1363 :                      .no_overflow:
    1741/    1363 : 20 6E 13             JSR StackAddItem
    1742/    1366 :                      .no_add_item:
    1743/    1366 :                      .no_flags:
    1744/    1366 : A5 07                LDA $7 ;address
    1745/    1368 : 48                   PHA
    1746/    1369 : A5 06                LDA $6 ;address
    1747/    136B : 48                   PHA
    1748/    136C : 60                   RTS
    1749/    136D : 60                   RTS
    1750/    136E :                      
    1751/    136E :                     StackAddItem:
    1752/    136E : 8A                   TXA
    1753/    136F : 38                   SEC
    1754/    1370 : E9 09                SBC #$9
    1755/    1372 : AA                   TAX
    1756/    1373 : EE 91 01             INC stack_count
    1757/    1376 : 60                   RTS
    1758/    1377 :                      
    1759/    1377 :                     FORTH_WORDS:
    1760/    1377 :                      
    1761/    1377 :                     WORD_DUP:
    1762/    1377 : 03 44 55 50          FCB $3,"DUP"
    1763/    137B : 8E 13                FDB WORD_SWAP
    1764/    137D : 02                   FCB $2
    1765/    137E :                      
    1766/    137E :                     CODE_DUP:
    1767/    137E : 05                   FCB $5
    1768/    137F : A0 09                LDY #$9
    1769/    1381 : 8A                   TXA
    1770/    1382 : 48                   PHA
    1771/    1383 :                      .dup_loop:
    1772/    1383 : B5 09                LDA $9,X
    1773/    1385 : 95 00                STA $0,X
    1774/    1387 : E8                   INX
    1775/    1388 : 88                   DEY
    1776/    1389 : D0 F8                BNE .dup_loop
    1777/    138B : 68                   PLA
    1778/    138C : AA                   TAX
    1779/    138D : 60                   RTS
    1780/    138E :                      
    1781/    138E :                     WORD_SWAP:
    1782/    138E : 04 53 57 41 50       FCB $4,"SWAP"
    1783/    1393 : AC 13                FDB WORD_DROP
    1784/    1395 : 04                   FCB $4
    1785/    1396 :                      
    1786/    1396 :                     CODE_SWAP:
    1787/    1396 : 02                   FCB $2
    1788/    1397 : A0 09                LDY #$9
    1789/    1399 : 8A                   TXA
    1790/    139A : 48                   PHA
    1791/    139B :                      .swap_loop:
    1792/    139B : B5 09                LDA $9,X
    1793/    139D : 48                   PHA
    1794/    139E : B5 00                LDA $0,X
    1795/    13A0 : 95 09                STA $9,X
    1796/    13A2 : 68                   PLA
    1797/    13A3 : 95 00                STA $0,X
    1798/    13A5 : E8                   INX
    1799/    13A6 : 88                   DEY
    1800/    13A7 : D0 F2                BNE .swap_loop
    1801/    13A9 : 68                   PLA
    1802/    13AA : AA                   TAX
    1803/    13AB : 60                   RTS
    1804/    13AC :                      
    1805/    13AC :                     WORD_DROP:
    1806/    13AC : 04 44 52 4F 50       FCB $4,"DROP"
    1807/    13B1 : BE 13                FDB WORD_OVER
    1808/    13B3 : 06                   FCB $6
    1809/    13B4 :                      
    1810/    13B4 :                     CODE_DROP:
    1811/    13B4 : 01                   FCB $1
    1812/    13B5 : 8A                   TXA
    1813/    13B6 : 18                   CLC
    1814/    13B7 : 69 09                ADC #$9
    1815/    13B9 : AA                   TAX
    1816/    13BA : CE 91 01             DEC stack_count
    1817/    13BD : 60                   RTS
    1818/    13BE :                      
    1819/    13BE :                     WORD_OVER:
    1820/    13BE : 04 4F 56 45 52       FCB $4,"OVER"
    1821/    13C3 : D6 13                FDB WORD_ROT
    1822/    13C5 : 08                   FCB $8
    1823/    13C6 :                      
    1824/    13C6 :                     CODE_OVER:
    1825/    13C6 : 06                   FCB $6
    1826/    13C7 : A0 09                LDY #$9
    1827/    13C9 : 8A                   TXA
    1828/    13CA : 48                   PHA
    1829/    13CB :                      .over_loop:
    1830/    13CB : B5 12                LDA $12,X
    1831/    13CD : 95 00                STA $0,X
    1832/    13CF : E8                   INX
    1833/    13D0 : 88                   DEY
    1834/    13D1 : D0 F8                BNE .over_loop
    1835/    13D3 : 68                   PLA
    1836/    13D4 : AA                   TAX
    1837/    13D5 : 60                   RTS
    1838/    13D6 :                      
    1839/    13D6 :                     WORD_ROT:
    1840/    13D6 : 03 52 4F 54          FCB $3,"ROT"
    1841/    13DA : F9 13                FDB WORD_MIN_ROT
    1842/    13DC : 0A                   FCB $A
    1843/    13DD :                      
    1844/    13DD :                     CODE_ROT:
    1845/    13DD : 03                   FCB $3
    1846/    13DE : A0 09                LDY #$9
    1847/    13E0 : 8A                   TXA
    1848/    13E1 : 48                   PHA
    1849/    13E2 :                      .rot_loop:
    1850/    13E2 : B5 12                LDA $12,X
    1851/    13E4 : 48                   PHA
    1852/    13E5 : B5 09                LDA $9,X
    1853/    13E7 : 48                   PHA
    1854/    13E8 : B5 00                LDA $0,X
    1855/    13EA : 95 09                STA $9,X
    1856/    13EC : 68                   PLA
    1857/    13ED : 95 12                STA $12,X
    1858/    13EF : 68                   PLA
    1859/    13F0 : 95 00                STA $0,X
    1860/    13F2 : E8                   INX
    1861/    13F3 : 88                   DEY
    1862/    13F4 : D0 EC                BNE .rot_loop
    1863/    13F6 : 68                   PLA
    1864/    13F7 : AA                   TAX
    1865/    13F8 : 60                   RTS
    1866/    13F9 :                      
    1867/    13F9 :                     WORD_MIN_ROT:
    1868/    13F9 : 04 2D 52 4F 54       FCB $4,"-ROT"
    1869/    13FE : 1D 14                FDB WORD_CLEAR
    1870/    1400 : 0C                   FCB $C
    1871/    1401 :                      
    1872/    1401 :                     CODE_MIN_ROT:
    1873/    1401 : 03                   FCB $3
    1874/    1402 : A0 09                LDY #$9
    1875/    1404 : 8A                   TXA
    1876/    1405 : 48                   PHA
    1877/    1406 :                      .min_rot_loop:
    1878/    1406 : B5 12                LDA $12,X
    1879/    1408 : 48                   PHA
    1880/    1409 : B5 09                LDA $9,X
    1881/    140B : 48                   PHA
    1882/    140C : B5 00                LDA $0,X
    1883/    140E : 95 12                STA $12,X
    1884/    1410 : 68                   PLA
    1885/    1411 : 95 00                STA $0,X
    1886/    1413 : 68                   PLA
    1887/    1414 : 95 09                STA $9,X
    1888/    1416 : E8                   INX
    1889/    1417 : 88                   DEY
    1890/    1418 : D0 EC                BNE .min_rot_loop
    1891/    141A : 68                   PLA
    1892/    141B : AA                   TAX
    1893/    141C : 60                   RTS
    1894/    141D :                      
    1895/    141D :                     WORD_CLEAR:
    1896/    141D : 05 43 4C 45 41 52    FCB $5,"CLEAR"
    1897/    1423 : 00 00                FDB $0
    1898/    1425 : 0E                   FCB $E
    1899/    1426 :                      
    1900/    1426 :                     CODE_CLEAR:
    1901/    1426 : 00                   FCB $0
    1902/    1427 : A2 00                LDX #$0
    1903/    1429 : 8E 91 01             STX stack_count
    1904/    142C : 60                   RTS
    1905/    142D :                      
    1906/    142D :                     JUMP_TABLE:
    1907/    142D : 00 00                FDB $0
    1908/    142F : 7E 13                FDB CODE_DUP
    1909/    1431 : 96 13                FDB CODE_SWAP
    1910/    1433 : B4 13                FDB CODE_DROP
    1911/    1435 : C6 13                FDB CODE_OVER
    1912/    1437 : DD 13                FDB CODE_ROT
    1913/    1439 : 01 14                FDB CODE_MIN_ROT
    1914/    143B : 26 14                FDB CODE_CLEAR
    1915/    143D :                      
    1916/    143D :                     main:
    1917/    143D : A2 2F                LDX #$2F
    1918/    143F : 9A                   TXS
    1919/    1440 : 20 33 0B             JSR setup
    1920/    1443 : 20 6D C1             JSR tests
    1921/    1446 :                      .input_loop:
    1922/    1446 : 20 84 0D             JSR DrawStack
    1923/    1449 : 20 04 0F             JSR ReadLine
    1924/    144C :                      .process_loop:
    1925/    144C : 20 4D 10             JSR LineWord
    1926/    144F : AD 73 01             LDA new_word_len
    1927/    1452 : F0 F2                BEQ .input_loop
    1928/    1454 : 20 92 10             JSR FindWord
    1929/    1457 : A5 21                LDA ret_val
    1930/    1459 : F0 1A                BEQ .not_found
    1931/    145B : A5 21                LDA ret_val
    1932/    145D : 85 03                STA $3 ;ExecToken.token
    1933/    145F : 20 29 13             JSR ExecToken
    1934/    1462 : A5 21                LDA ret_val
    1935/    1464 : F0 0C                BEQ .no_exec_error
    1936/    1466 : 85 02                STA $2 ;arg
    1937/    1468 : A5 02                LDA $2 ;arg
    1938/    146A : 85 03                STA $3 ;ErrorMsg.error_code
    1939/    146C : 20 7A 0E             JSR ErrorMsg
    1940/    146F : 4C 46 14             JMP .input_loop
    1941/    1472 :                      .no_exec_error:
    1942/    1472 : 4C 4C 14             JMP .process_loop
    1943/    1475 :                      .not_found:
    1944/    1475 : 20 D9 10             JSR CheckData
    1945/    1478 : AD 87 01             LDA new_stack_item
    1946/    147B : C9 04                CMP #$4
    1947/    147D : D0 0A                BNE .input_good
    1948/    147F : A9 02                LDA #$2
    1949/    1481 : 85 03                STA $3 ;ErrorMsg.error_code
    1950/    1483 : 20 7A 0E             JSR ErrorMsg
    1951/    1486 : 4C 46 14             JMP .input_loop
    1952/    1489 :                      .input_good:
    1953/    1489 : A9 07                LDA #$7
    1954/    148B : CD 91 01             CMP stack_count
    1955/    148E : B0 0A                BCS .no_overflow
    1956/    1490 : A9 08                LDA #$8
    1957/    1492 : 85 03                STA $3 ;ErrorMsg.error_code
    1958/    1494 : 20 7A 0E             JSR ErrorMsg
    1959/    1497 : 4C 46 14             JMP .input_loop
    1960/    149A :                      .no_overflow:
    1961/    149A : 20 6E 13             JSR StackAddItem
    1962/    149D : 86 00                STX $0 ;dest
    1963/    149F : A9 00                LDA #$0
    1964/    14A1 : 85 01                STA $1 ;dest
    1965/    14A3 : A9 87                LDA # (new_stack_item) # $100
    1966/    14A5 : 85 0F                STA $F ;MemCopy.source
    1967/    14A7 : A9 01                LDA # (new_stack_item)/$100
    1968/    14A9 : 85 10                STA $10 ;MemCopy.source
    1969/    14AB : A5 00                LDA $0 ;dest
    1970/    14AD : 85 11                STA $11 ;MemCopy.dest
    1971/    14AF : A5 01                LDA $1 ;dest
    1972/    14B1 : 85 12                STA $12 ;MemCopy.dest
    1973/    14B3 : A9 09                LDA #$9
    1974/    14B5 : 85 0A                STA $A ;MemCopy.count
    1975/    14B7 : 20 06 0C             JSR MemCopy
    1976/    14BA : 4C 4C 14             JMP .process_loop
    1977/    14BD : 60                   RTS
    1978/    14BE :                      
    1979/    14BE :                     code_end:
    1980/    14BE :                     
    1981/    14BE :                     
    1982/    14BE : =$14BE              EEPROM set *
    1983/    14BE :                     
    1984/    14BE :                     	OUTRADIX 10
    1985/    14BE :                     
    1986/    14BE :                     AddCommas MACRO num
    1987/    14BE :                     comma_ret set "\{num}"
    1988/    14BE :                     	IF num<1000
    1989/    14BE :                     		EXITM
    1990/    14BE :                     	ELSE
    1991/    14BE :                     comma_ret set "\{substr(comma_ret,0,strlen(comma_ret)-3)},\{substr(comma_ret,strlen(comma_ret)-3,strlen(comma_ret))}"
    1992/    14BE :                     	ENDIF
    1993/    14BE :                     	ENDM
    1994/    14BE :                     
    1995/    14BE :                     ;Display memory usage in console
    1996/    14BE :                     ;===============================
 
    1997/    14BE :                     	MESSAGE " "
Memory usage
    1998/    14BE :                     	MESSAGE "Memory usage"
============
    1999/    14BE :                     	MESSAGE "============"
    2000/    14BE : (MACRO)             	AddCommas EEPROM-$900
    2000/    14BE : =3006               comma_ret set "\{EEPROM-$900}"
    2000/    14BE : =>FALSE                     IF EEPROM-$900<1000
    2000/    14BE :                                     EXITM
    2000/    14BE : =>TRUE                      ELSE
    2000/    14BE : =3,006              comma_ret set "\{substr(comma_ret,0,strlen(comma_ret)-3)},\{substr(comma_ret,strlen(comma_ret)-3,strlen(comma_ret))}"
    2000/    14BE : [2000]                      ENDIF
ROM size:	3,006 bytes (36%) of 8k ROM
    2001/    14BE :                     	MESSAGE "ROM size:	\{comma_ret} bytes (\{100*(EEPROM-$900)/$2000}%) of 8k ROM"
    2002/    14BE :                     	;AddCommas GENRAM-$200
    2003/    14BE :                     	;MESSAGE "RAM size:	\{comma_ret} bytes (\{100*(GENRAM-$200)/($4000-$200)}%) of 15.8k bank"
    2004/    14BE :                     	;Tell script that prints assembler output to stop outputting
    2005/    14BE :                     	;Eliminates double output (because of multiple passes???)
END
    2006/    14BE :                     	MESSAGE "END"
 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 2 - 9/3/2020 13:28:44


  Symbol Table (* = unused):
  --------------------------

*ARCHITECTURE :  i386-unknown-win32 - |  BCD_Reverse :                  C12 C |
 BCD_Reverse.loop :             C17 C | *BIGENDIAN :                      0 - |
*BRANCHEXT :                      0 - | *CASESENSITIVE :                  1 - |
 CODE_CLEAR :                  1426 C |  CODE_DROP :                   13B4 C |
 CODE_DUP :                    137E C |  CODE_DUP.dup_loop :           1383 C |
 CODE_MIN_ROT :                1401 C |  CODE_MIN_ROT.min_rot_loop :   1406 C |
 CODE_OVER :                   13C6 C |  CODE_OVER.over_loop :         13CB C |
 CODE_ROT :                    13DD C |  CODE_ROT.rot_loop :           13E2 C |
 CODE_SWAP :                   1396 C |  CODE_SWAP.swap_loop :         139B C |
*CONSTPI :        3.141592653589793 - |  CheckData :                   10D9 C |
 CheckData.add_digit :         1302 C |  CheckData.dec_exp_count :     11C6 C |
 CheckData.decimal_good :      1218 C |  CheckData.digit :             12F5 C |
 CheckData.digit_good :        11CB C |  CheckData.digit_ok :          11D7 C |
 CheckData.digit_zero :        11B9 C |  CheckData.exp_count_done :    127E C |
 CheckData.exp_count_done2 :   129F C |  CheckData.exp_count_neg :     1278 C |
 CheckData.exp_count_neg2 :    1293 C |  CheckData.exp_digit :         11EA C |
 CheckData.exp_digit_ok :      11F2 C |  CheckData.exp_good :          121D C |
 CheckData.exp_loop :          11F7 C |  CheckData.exp_min_loop :      1278 C |
 CheckData.exp_no_neg_bit :    12D3 C |  CheckData.exp_pos_loop :      126F C |
 CheckData.exp_positive :      1265 C |  CheckData.exp_positive2 :     12BD C |
 CheckData.first_exp :         122C C |  CheckData.float_done :        1252 C |
 CheckData.float_first_done :  11A2 C |  CheckData.float_next :        11E1 C |
 CheckData.float_no_neg :      119D C |  CheckData.float_not_digit :   120F C |
 CheckData.float_not_exp :     11A2 C |  CheckData.hex_char_next :     1167 C |
 CheckData.hex_done :          1171 C |  CheckData.hex_error :         1177 C |
 CheckData.hex_rot_loop :      12E9 C |  CheckData.hex_rotate :        12E5 C |
 CheckData.is_digit_no :       1300 C |  CheckData.loop_float :        11A2 C |
 CheckData.loop_hex :          1139 C |  CheckData.loop_str :          1102 C |
 CheckData.minus_good :        124B C |  CheckData.no_dec_yet :        11DD C |
 CheckData.no_exp_overflow :   12C7 C |  CheckData.not_decimal_point : 1223 C |
 CheckData.not_digit :         1153 C |  CheckData.not_exp :           123C C |
 CheckData.not_hex :           1178 C |  CheckData.not_minus :         1251 C |
 CheckData.not_single_quote :  10FF C |  CheckData.not_string :        1125 C |
 CheckData.not_zero_len :      10E4 C |  CheckData.positive :          12DF C |
 CheckData.second_digit :      131C C |  CheckData.str_done :          1119 C |
 CheckData.str_return :        1124 C |  CheckData.string_too_long :   1118 C |
 CheckData.string_unterminated :                                       1118 C |
 CheckData.zero_loop :         10E8 C | *DATE :                    9/3/2020 - |
 DebugText :                   C000 C |  DebugText.done :              C00D C |
 DebugText.loop :              C002 C |  DigitHigh :                    C24 C |
 DigitLow :                     C37 C |  DrawFloat :                    C48 C |
 DrawFloat.loop :               C96 C |  DrawFloat.positive :           C6F C |
 DrawFloat.positive_e :         CC3 C |  DrawHex :                      D2A C |
 DrawStack :                    D84 C |  DrawStack.._1437.str_addr :    D94 C |
 DrawStack.._1437.str_skip :    D98 C |  DrawStack.item_done :          E07 C |
 DrawStack.loop :               DAB C |  DrawStack.loop_line :          E23 C |
 DrawStack.no_item :            E07 C |  DrawStack.not_float :          DE3 C |
 DrawStack.not_hex :            E07 C |  DrawStack.not_str :            DF5 C |
 DrawString :                   D5A C |  DrawString.done :              D7C C |
 DrawString.loop :              D65 C |  EEPROM :                      14BE - |
 ERROR_MSG_INPUT :              E2F C |  ERROR_MSG_STACK_OVERFLOW :     E56 C |
 ERROR_MSG_STACK_UNDERFLOW :    E63 C |  ERROR_MSG_STRING :             E49 C |
 ERROR_MSG_WORD_TOO_LONG :      E3C C |  ERROR_TABLE :                  E70 C |
 ErrorMsg :                     E7A C |  ErrorMsg.._1612.str_addr :     E91 C |
 ErrorMsg.._1612.str_skip :     E9E C |  ErrorMsg.._1666.str_addr :     ECC C |
 ErrorMsg.._1666.str_skip :     ED9 C |  ErrorMsg.loop :                EE9 C |
 ExecToken :                   1329 C |  ExecToken.no_add_item :       1366 C |
 ExecToken.no_flags :          1366 C |  ExecToken.no_overflow :       1363 C |
 ExecToken.no_underflow :      1351 C | *FALSE :                          0 - |
 FORTH_WORDS :                 1377 C | *FULLPMMU :                       1 - |
 FindWord :                    1092 C |  FindWord.loop :               109A C |
 FindWord.loop_next :          10B4 C |  FindWord.no_match :           10B4 C |
 FindWord.str_loop :           10A4 C |  FindWord.word_found :         10CC C |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
 HexHigh :                      CEE C |  HexHigh.done :                 D05 C |
 HexHigh.print_digit :          D00 C |  HexLow :                       D0D C |
 HexLow.done :                  D22 C |  HexLow.print_digit :           D1D C |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      0 - | *InitForth :                    EF2 C |
 InputTest :                   C018 C |  InputTest.._101.str_addr :    C0BC C |
 InputTest.._101.str_skip :    C0CA C |  InputTest.._153.str_addr :    C0E3 C |
 InputTest.._153.str_skip :    C0F3 C |  InputTest.._178.str_addr :    C12F C |
 InputTest.._178.str_skip :    C137 C |  InputTest.._202.str_addr :    C14E C |
 InputTest.._202.str_skip :    C159 C |  InputTest.._223.no_carry :    C16C C |
 InputTest.._53.str_addr :     C083 C |  InputTest.._53.str_skip :     C08B C |
 InputTest.._77.str_addr :     C0A2 C |  InputTest.._77.str_skip :     C0AE C |
 InputTest.check_loop :        C037 C |  InputTest.continue :          C07A C |
 InputTest.done :              C12C C |  InputTest.fail_done :         C124 C |
 InputTest.fail_loop :         C106 C |  InputTest.failed :            C080 C |
 InputTest.letter :            C045 C |  InputTest.letter2 :           C05B C |
 InputTest.letter_done :       C048 C |  InputTest.letter_done2 :      C05E C |
 InputTest.loop :              C01A C |  InputTest.loop_done :         C02B C |
 InputTest.not_minus :         C024 C |  JUMP_TABLE :                  142D C |
 LCD_char :                     B72 C |  LCD_char.._696.skip :          B7B C |
 LCD_char.._701.skip :          B83 C |  LCD_char.color :               BC4 C |
 LCD_char.if0 :                 B7C C |  LCD_char.if1 :                 B84 C |
 LCD_char.loop :                BAB C |  LCD_char.loop.inner :          BBC C |
 LCD_clrscr :                   B4E C |  LCD_clrscr.loop :              B5E C |
 LCD_print :                    BED C |  LCD_print.done :               C05 C |
 LCD_print.loop :               BF1 C | *LISTON :                         1 - |
 LineWord :                    104D C |  LineWord.chars_left :         105F C |
 LineWord.chars_left2 :        1085 C |  LineWord.found :              1090 C |
 LineWord.loop :               105F C |  LineWord.not_space :          1072 C |
 LineWord.word_size_good :     1085 C | *MACEXP :                         7 - |
*MOMCPU :                      6502 - | *MOMCPUNAME :                  6502 - |
 MemCopy :                      C06 C |  MemCopy.loop :                 C08 C |
*NESTMAX :                      100 - | *PACKING :                        0 - |
*PADDING :                        1 - |  R0 :                            25 C |
*R1 :                            2E C | *R2 :                            37 C |
*R3 :                            40 C | *R4 :                            49 C |
*R5 :                            52 C | *R6 :                            5B C |
*R7 :                            64 C | *RELAXED :                        0 - |
 ReadKey :                      B4A C |  ReadLine :                     F04 C |
 ReadLine.._1717.str_addr :     F13 C |  ReadLine.._1717.str_skip :     F24 C |
 ReadLine.backspace_done :      F83 C |  ReadLine.backspace_scroll :    F7D C |
 ReadLine.buffer_full :        101D C |  ReadLine.cursor_done :        1049 C |
 ReadLine.draw :               1039 C |  ReadLine.draw_blank :         1033 C |
 ReadLine.draw_done :          101D C |  ReadLine.key_done :            FC6 C |
 ReadLine.key_read :            F40 C |  ReadLine.loop :                F34 C |
 ReadLine.no_key :             101D C |  ReadLine.not_backspace :       F86 C |
 ReadLine.not_enter :           F53 C |  ReadLine.not_lower :           FC6 C |
 ReadLine.not_num :             FAC C |  ReadLine.not_upper :           FB9 C |
 ReadLine.not_valid :          101D C |  ReadLine.scroll_buffer :       FF0 C |
 ReadLine.scroll_loop :         FFA C |  ReadLine.special_loop :        F88 C |
 ReadLine.special_next :        F9A C | *STACK_END :                     6D C |
 StackAddItem :                136E C | *TIME :                    13:28:44 - |
*TRUE :                           1 - | *VERSION :                     142F - |
 WORD_CLEAR :                  141D C |  WORD_DROP :                   13AC C |
*WORD_DUP :                    1377 C |  WORD_MIN_ROT :                13F9 C |
 WORD_OVER :                   13BE C |  WORD_ROT :                    13D6 C |
 WORD_SWAP :                   138E C |  code_begin :                   900 C |
 code_end :                    14BE C |  comma_ret :                  3,006 - |
 dummy :                         20 C |  font_inverted :                190 C |
 font_table :                   903 C | *global_error :                 130 C |
*halt_test :                   C00E C |  halt_test.done :              C017 C |
 input_buff :                   133 C |  input_buff_begin :             131 C |
 input_buff_end :               132 C |  main :                        143D C |
 main.input_good :             1489 C |  main.input_loop :             1446 C |
 main.no_exec_error :          1472 C |  main.no_overflow :            149A C |
 main.not_found :              1475 C |  main.process_loop :           144C C |
 new_stack_item :               187 C |  new_word_buff :                174 C |
 new_word_len :                 173 C |  ret_val :                       21 C |
 screen_ptr :                    23 C |  setup :                        B33 C |
 special_chars :                EFE C |  stack_count :                  191 C |
 test_count :                   192 C |  tests :                       C16D C |
 tests.._232.str_addr :        C175 C |  tests.._232.str_skip :        C177 C |
 tests.._241.str_addr :        C182 C |  tests.._241.str_skip :        C19D C |
 tests.._259.str_addr :        C1AB C |  tests.._259.str_skip :        C1AF C |
 tests.._268.str_addr :        C1BA C |  tests.._268.str_skip :        C1D5 C |
 tests.._286.str_addr :        C1E3 C |  tests.._286.str_skip :        C1E7 C |
 tests.._295.str_addr :        C1F2 C |  tests.._295.str_skip :        C20D C |
 tests.._313.str_addr :        C21B C |  tests.._313.str_skip :        C221 C |
 tests.._322.str_addr :        C22C C |  tests.._322.str_skip :        C247 C |
 tests.._340.str_addr :        C255 C |  tests.._340.str_skip :        C25C C |
 tests.._349.str_addr :        C267 C |  tests.._349.str_skip :        C282 C |
 tests.._367.str_addr :        C290 C |  tests.._367.str_skip :        C294 C |
 tests.._376.str_addr :        C29F C |  tests.._376.str_skip :        C2BA C |
 tests.._394.str_addr :        C2C8 C |  tests.._394.str_skip :        C2CE C |
 tests.._403.str_addr :        C2D9 C |  tests.._403.str_skip :        C2F4 C |
 tests.._421.str_addr :        C302 C |  tests.._421.str_skip :        C308 C |
 tests.._430.str_addr :        C313 C |  tests.._430.str_skip :        C32E C |
 tests.._448.str_addr :        C33C C |  tests.._448.str_skip :        C344 C |
 tests.._457.str_addr :        C34F C |  tests.._457.str_skip :        C36A C |
 tests.._475.str_addr :        C378 C |  tests.._475.str_skip :        C380 C |
 tests.._484.str_addr :        C38B C |  tests.._484.str_skip :        C38E C |
 tests.._502.str_addr :        C39C C |  tests.._502.str_skip :        C39F C |
 tests.._511.str_addr :        C3AA C |  tests.._511.str_skip :        C3C5 C |
 tests.._529.str_addr :        C3D3 C |  tests.._529.str_skip :        C3D8 C |
 tests.._538.str_addr :        C3E3 C |  tests.._538.str_skip :        C3FE C |
 tests.._556.str_addr :        C40C C |  tests.._556.str_skip :        C421 C |
 tests.._575.str_addr :        C42F C |  tests.._575.str_skip :        C442 C |
 tests.._594.str_addr :        C457 C |  tests.._594.str_skip :        C45E C |

    327 symbols
     40 unused symbols

 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 3 - 9/3/2020 13:28:44


  Defined Macros:
  ---------------

AddCommas                             |

      1 macro

 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 4 - 9/3/2020 13:28:44


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.03 seconds assembly time

   2006 lines source file
   2012 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
