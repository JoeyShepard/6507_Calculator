//Taken from Python key label script...
BUTTON_COUNT_X=5;
BUTTON_COUNT_Y=8;

BUTTON_WIDTH=120;
BUTTON_HEIGHT=80;
BUTTON_GAP_HORZ=32.4;
BUTTON_GAP_VERT=72.4;
//BUTTON_BORDER_HORZ=20;
//BUTTON_BORDER_VERT=20;

//Added here
BUTTON_THICKNESS=40;

BUTTON_LIP_WIDTH=0; //harder to mold
BUTTON_LIP_HEIGHT=10;
BUTTON_LIP_THICKNESS=12;

SPINE_WIDTH=5*BUTTON_WIDTH+4*BUTTON_GAP_HORZ+BUTTON_LIP_WIDTH*2;
SPINE_HEIGHT=40;
SPINE_THICKNESS=BUTTON_LIP_THICKNESS;

MOLD_BOTTOM_THICKNESS=20;
MOLD_WALL_THICKNESS=30;
MOLD_INNER_WIDTH=900;
MOLD_INNER_HEIGHT=300;
//MOLD_INNER_THICKNESS=150;
MOLD_INNER_THICKNESS=100;

SPRUE_HEIGHT=100;
SPRUE_RADIUS=10;
SPRUE_Y=BUTTON_LIP_HEIGHT*2+BUTTON_HEIGHT+SPINE_HEIGHT-SPRUE_RADIUS;

SHELL_GAP=50;
SHELL_BOTTOM_THICKNESS=50;

scale([0.1,0.1,0.1])
{
  union()
  {
    translate([100,120,MOLD_INNER_THICKNESS])
    {
      //key_row();
      sprues();
    }
    translate([-(SHELL_GAP+MOLD_WALL_THICKNESS), -(SHELL_GAP+MOLD_WALL_THICKNESS),-2*MOLD_BOTTOM_THICKNESS])
      shell_box();
    mold_box();
  }
}


module mold_box()
{
  difference()
  {
    translate([0,0,-MOLD_BOTTOM_THICKNESS])
    cube([MOLD_INNER_WIDTH+
      MOLD_WALL_THICKNESS*2,
      MOLD_INNER_HEIGHT+MOLD_WALL_THICKNESS*2,
      MOLD_BOTTOM_THICKNESS+MOLD_INNER_THICKNESS]);
    //translate([MOLD_WALL_THICKNESS,
      //MOLD_WALL_THICKNESS,0])
    //cube([MOLD_INNER_WIDTH,MOLD_INNER_HEIGHT,
      //MOLD_INNER_THICKNESS+
      //MOLD_BOTTOM_THICKNESS]);
  }
}


module key_row()
{

union()
{

for (i=[0:BUTTON_COUNT_X-1])
{
  translate([(BUTTON_WIDTH+BUTTON_GAP_HORZ)*i,
  0,0])
  {
    union()
    {

      //Bottom lip
      //(note lip on bottom AND top!!!)
      cube([BUTTON_LIP_WIDTH*2+BUTTON_WIDTH,
        BUTTON_LIP_HEIGHT*2+BUTTON_HEIGHT,
        BUTTON_LIP_THICKNESS]);

      //Button
      translate([BUTTON_LIP_WIDTH,
        BUTTON_LIP_HEIGHT,0])
      cube([BUTTON_WIDTH,
        BUTTON_HEIGHT,
        BUTTON_THICKNESS]);
      
    }
  }
}

//Spine
translate([0,BUTTON_LIP_HEIGHT*2+BUTTON_HEIGHT,
  0])
cube([SPINE_WIDTH, SPINE_HEIGHT,
  SPINE_THICKNESS]);

}

}

module sprues()
{
  for (i=[0:BUTTON_COUNT_X-1])
  {
    translate([(BUTTON_WIDTH+BUTTON_GAP_HORZ)*i+BUTTON_WIDTH/2, SPRUE_Y, 0])
    {
      cylinder(SPRUE_HEIGHT, SPRUE_RADIUS, SPRUE_RADIUS, false);
    }
  }
  
  translate([(BUTTON_WIDTH+BUTTON_GAP_HORZ)*2+BUTTON_WIDTH/2, BUTTON_LIP_HEIGHT+SPRUE_RADIUS, 0])
  cylinder(SPRUE_HEIGHT, SPRUE_RADIUS, SPRUE_RADIUS, false);
}

module shell_box()
{
  difference()
  {
    cube([MOLD_INNER_WIDTH+4*MOLD_WALL_THICKNESS+2*SHELL_GAP,
    MOLD_INNER_HEIGHT+4*MOLD_WALL_THICKNESS+2*SHELL_GAP, MOLD_INNER_THICKNESS+MOLD_BOTTOM_THICKNESS*2+SHELL_BOTTOM_THICKNESS]);

    translate([MOLD_WALL_THICKNESS,
      MOLD_WALL_THICKNESS,
      MOLD_BOTTOM_THICKNESS])
    #cube([MOLD_INNER_WIDTH+2*MOLD_WALL_THICKNESS+2*SHELL_GAP,
    MOLD_INNER_HEIGHT+2*MOLD_WALL_THICKNESS+2*SHELL_GAP, MOLD_INNER_THICKNESS+MOLD_BOTTOM_THICKNESS+SHELL_BOTTOM_THICKNESS+1]);
  }
}
